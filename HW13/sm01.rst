                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6083 (Dec 17 2010) (MINGW32)
                              4 ; This file was generated Mon Nov 21 11:27:31 2022
                              5 ;--------------------------------------------------------
                              6 	.module sm01
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _CY
                             14 	.globl _AC
                             15 	.globl _F0
                             16 	.globl _RS1
                             17 	.globl _RS0
                             18 	.globl _OV
                             19 	.globl _F1
                             20 	.globl _P
                             21 	.globl _PS
                             22 	.globl _PT1
                             23 	.globl _PX1
                             24 	.globl _PT0
                             25 	.globl _PX0
                             26 	.globl _RD
                             27 	.globl _WR
                             28 	.globl _T1
                             29 	.globl _T0
                             30 	.globl _INT1
                             31 	.globl _INT0
                             32 	.globl _TXD
                             33 	.globl _RXD
                             34 	.globl _P3_7
                             35 	.globl _P3_6
                             36 	.globl _P3_5
                             37 	.globl _P3_4
                             38 	.globl _P3_3
                             39 	.globl _P3_2
                             40 	.globl _P3_1
                             41 	.globl _P3_0
                             42 	.globl _EA
                             43 	.globl _ES
                             44 	.globl _ET1
                             45 	.globl _EX1
                             46 	.globl _ET0
                             47 	.globl _EX0
                             48 	.globl _P2_7
                             49 	.globl _P2_6
                             50 	.globl _P2_5
                             51 	.globl _P2_4
                             52 	.globl _P2_3
                             53 	.globl _P2_2
                             54 	.globl _P2_1
                             55 	.globl _P2_0
                             56 	.globl _SM0
                             57 	.globl _SM1
                             58 	.globl _SM2
                             59 	.globl _REN
                             60 	.globl _TB8
                             61 	.globl _RB8
                             62 	.globl _TI
                             63 	.globl _RI
                             64 	.globl _P1_7
                             65 	.globl _P1_6
                             66 	.globl _P1_5
                             67 	.globl _P1_4
                             68 	.globl _P1_3
                             69 	.globl _P1_2
                             70 	.globl _P1_1
                             71 	.globl _P1_0
                             72 	.globl _TF1
                             73 	.globl _TR1
                             74 	.globl _TF0
                             75 	.globl _TR0
                             76 	.globl _IE1
                             77 	.globl _IT1
                             78 	.globl _IE0
                             79 	.globl _IT0
                             80 	.globl _P0_7
                             81 	.globl _P0_6
                             82 	.globl _P0_5
                             83 	.globl _P0_4
                             84 	.globl _P0_3
                             85 	.globl _P0_2
                             86 	.globl _P0_1
                             87 	.globl _P0_0
                             88 	.globl _B
                             89 	.globl _ACC
                             90 	.globl _PSW
                             91 	.globl _IP
                             92 	.globl _P3
                             93 	.globl _IE
                             94 	.globl _P2
                             95 	.globl _SBUF
                             96 	.globl _SCON
                             97 	.globl _P1
                             98 	.globl _TH1
                             99 	.globl _TH0
                            100 	.globl _TL1
                            101 	.globl _TL0
                            102 	.globl _TMOD
                            103 	.globl _TCON
                            104 	.globl _PCON
                            105 	.globl _DPH
                            106 	.globl _DPL
                            107 	.globl _SP
                            108 	.globl _P0
                            109 	.globl _DIRECTION
                            110 	.globl _SM
                            111 ;--------------------------------------------------------
                            112 ; special function registers
                            113 ;--------------------------------------------------------
                            114 	.area RSEG    (ABS,DATA)
   0000                     115 	.org 0x0000
                    0080    116 _P0	=	0x0080
                    0081    117 _SP	=	0x0081
                    0082    118 _DPL	=	0x0082
                    0083    119 _DPH	=	0x0083
                    0087    120 _PCON	=	0x0087
                    0088    121 _TCON	=	0x0088
                    0089    122 _TMOD	=	0x0089
                    008A    123 _TL0	=	0x008a
                    008B    124 _TL1	=	0x008b
                    008C    125 _TH0	=	0x008c
                    008D    126 _TH1	=	0x008d
                    0090    127 _P1	=	0x0090
                    0098    128 _SCON	=	0x0098
                    0099    129 _SBUF	=	0x0099
                    00A0    130 _P2	=	0x00a0
                    00A8    131 _IE	=	0x00a8
                    00B0    132 _P3	=	0x00b0
                    00B8    133 _IP	=	0x00b8
                    00D0    134 _PSW	=	0x00d0
                    00E0    135 _ACC	=	0x00e0
                    00F0    136 _B	=	0x00f0
                            137 ;--------------------------------------------------------
                            138 ; special function bits
                            139 ;--------------------------------------------------------
                            140 	.area RSEG    (ABS,DATA)
   0000                     141 	.org 0x0000
                    0080    142 _P0_0	=	0x0080
                    0081    143 _P0_1	=	0x0081
                    0082    144 _P0_2	=	0x0082
                    0083    145 _P0_3	=	0x0083
                    0084    146 _P0_4	=	0x0084
                    0085    147 _P0_5	=	0x0085
                    0086    148 _P0_6	=	0x0086
                    0087    149 _P0_7	=	0x0087
                    0088    150 _IT0	=	0x0088
                    0089    151 _IE0	=	0x0089
                    008A    152 _IT1	=	0x008a
                    008B    153 _IE1	=	0x008b
                    008C    154 _TR0	=	0x008c
                    008D    155 _TF0	=	0x008d
                    008E    156 _TR1	=	0x008e
                    008F    157 _TF1	=	0x008f
                    0090    158 _P1_0	=	0x0090
                    0091    159 _P1_1	=	0x0091
                    0092    160 _P1_2	=	0x0092
                    0093    161 _P1_3	=	0x0093
                    0094    162 _P1_4	=	0x0094
                    0095    163 _P1_5	=	0x0095
                    0096    164 _P1_6	=	0x0096
                    0097    165 _P1_7	=	0x0097
                    0098    166 _RI	=	0x0098
                    0099    167 _TI	=	0x0099
                    009A    168 _RB8	=	0x009a
                    009B    169 _TB8	=	0x009b
                    009C    170 _REN	=	0x009c
                    009D    171 _SM2	=	0x009d
                    009E    172 _SM1	=	0x009e
                    009F    173 _SM0	=	0x009f
                    00A0    174 _P2_0	=	0x00a0
                    00A1    175 _P2_1	=	0x00a1
                    00A2    176 _P2_2	=	0x00a2
                    00A3    177 _P2_3	=	0x00a3
                    00A4    178 _P2_4	=	0x00a4
                    00A5    179 _P2_5	=	0x00a5
                    00A6    180 _P2_6	=	0x00a6
                    00A7    181 _P2_7	=	0x00a7
                    00A8    182 _EX0	=	0x00a8
                    00A9    183 _ET0	=	0x00a9
                    00AA    184 _EX1	=	0x00aa
                    00AB    185 _ET1	=	0x00ab
                    00AC    186 _ES	=	0x00ac
                    00AF    187 _EA	=	0x00af
                    00B0    188 _P3_0	=	0x00b0
                    00B1    189 _P3_1	=	0x00b1
                    00B2    190 _P3_2	=	0x00b2
                    00B3    191 _P3_3	=	0x00b3
                    00B4    192 _P3_4	=	0x00b4
                    00B5    193 _P3_5	=	0x00b5
                    00B6    194 _P3_6	=	0x00b6
                    00B7    195 _P3_7	=	0x00b7
                    00B0    196 _RXD	=	0x00b0
                    00B1    197 _TXD	=	0x00b1
                    00B2    198 _INT0	=	0x00b2
                    00B3    199 _INT1	=	0x00b3
                    00B4    200 _T0	=	0x00b4
                    00B5    201 _T1	=	0x00b5
                    00B6    202 _WR	=	0x00b6
                    00B7    203 _RD	=	0x00b7
                    00B8    204 _PX0	=	0x00b8
                    00B9    205 _PT0	=	0x00b9
                    00BA    206 _PX1	=	0x00ba
                    00BB    207 _PT1	=	0x00bb
                    00BC    208 _PS	=	0x00bc
                    00D0    209 _P	=	0x00d0
                    00D1    210 _F1	=	0x00d1
                    00D2    211 _OV	=	0x00d2
                    00D3    212 _RS0	=	0x00d3
                    00D4    213 _RS1	=	0x00d4
                    00D5    214 _F0	=	0x00d5
                    00D6    215 _AC	=	0x00d6
                    00D7    216 _CY	=	0x00d7
                            217 ;--------------------------------------------------------
                            218 ; overlayable register banks
                            219 ;--------------------------------------------------------
                            220 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     221 	.ds 8
                            222 ;--------------------------------------------------------
                            223 ; internal ram data
                            224 ;--------------------------------------------------------
                            225 	.area DSEG    (DATA)
   0008                     226 _SM::
   0008                     227 	.ds 1
                            228 ;--------------------------------------------------------
                            229 ; overlayable items in internal ram 
                            230 ;--------------------------------------------------------
                            231 	.area OSEG    (OVR,DATA)
                            232 ;--------------------------------------------------------
                            233 ; Stack segment in internal ram 
                            234 ;--------------------------------------------------------
                            235 	.area	SSEG	(DATA)
   0021                     236 __start__stack:
   0021                     237 	.ds	1
                            238 
                            239 ;--------------------------------------------------------
                            240 ; indirectly addressable internal ram data
                            241 ;--------------------------------------------------------
                            242 	.area ISEG    (DATA)
                            243 ;--------------------------------------------------------
                            244 ; absolute internal ram data
                            245 ;--------------------------------------------------------
                            246 	.area IABS    (ABS,DATA)
                            247 	.area IABS    (ABS,DATA)
                            248 ;--------------------------------------------------------
                            249 ; bit data
                            250 ;--------------------------------------------------------
                            251 	.area BSEG    (BIT)
   0000                     252 _DIRECTION::
   0000                     253 	.ds 1
                            254 ;--------------------------------------------------------
                            255 ; paged external ram data
                            256 ;--------------------------------------------------------
                            257 	.area PSEG    (PAG,XDATA)
                            258 ;--------------------------------------------------------
                            259 ; external ram data
                            260 ;--------------------------------------------------------
                            261 	.area XSEG    (XDATA)
                            262 ;--------------------------------------------------------
                            263 ; absolute external ram data
                            264 ;--------------------------------------------------------
                            265 	.area XABS    (ABS,XDATA)
                            266 ;--------------------------------------------------------
                            267 ; external initialized ram data
                            268 ;--------------------------------------------------------
                            269 	.area XISEG   (XDATA)
                            270 	.area HOME    (CODE)
                            271 	.area GSINIT0 (CODE)
                            272 	.area GSINIT1 (CODE)
                            273 	.area GSINIT2 (CODE)
                            274 	.area GSINIT3 (CODE)
                            275 	.area GSINIT4 (CODE)
                            276 	.area GSINIT5 (CODE)
                            277 	.area GSINIT  (CODE)
                            278 	.area GSFINAL (CODE)
                            279 	.area CSEG    (CODE)
                            280 ;--------------------------------------------------------
                            281 ; interrupt vector 
                            282 ;--------------------------------------------------------
                            283 	.area HOME    (CODE)
   0000                     284 __interrupt_vect:
   0000 02 00 08            285 	ljmp	__sdcc_gsinit_startup
                            286 ;--------------------------------------------------------
                            287 ; global & static initialisations
                            288 ;--------------------------------------------------------
                            289 	.area HOME    (CODE)
                            290 	.area GSINIT  (CODE)
                            291 	.area GSFINAL (CODE)
                            292 	.area GSINIT  (CODE)
                            293 	.globl __sdcc_gsinit_startup
                            294 	.globl __sdcc_program_startup
                            295 	.globl __start__stack
                            296 	.globl __mcs51_genXINIT
                            297 	.globl __mcs51_genXRAMCLEAR
                            298 	.globl __mcs51_genRAMCLEAR
                            299 	.area GSFINAL (CODE)
   0061 02 00 03            300 	ljmp	__sdcc_program_startup
                            301 ;--------------------------------------------------------
                            302 ; Home
                            303 ;--------------------------------------------------------
                            304 	.area HOME    (CODE)
                            305 	.area HOME    (CODE)
   0003                     306 __sdcc_program_startup:
   0003 12 00 64            307 	lcall	_main
                            308 ;	return from main will lock up
   0006 80 FE               309 	sjmp .
                            310 ;--------------------------------------------------------
                            311 ; code
                            312 ;--------------------------------------------------------
                            313 	.area CSEG    (CODE)
                            314 ;------------------------------------------------------------
                            315 ;Allocation info for local variables in function 'main'
                            316 ;------------------------------------------------------------
                            317 ;i                         Allocated to registers r2 r3 
                            318 ;------------------------------------------------------------
                            319 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW12\sm01.c:13: void main(void)
                            320 ;	-----------------------------------------
                            321 ;	 function main
                            322 ;	-----------------------------------------
   0064                     323 _main:
                    0002    324 	ar2 = 0x02
                    0003    325 	ar3 = 0x03
                    0004    326 	ar4 = 0x04
                    0005    327 	ar5 = 0x05
                    0006    328 	ar6 = 0x06
                    0007    329 	ar7 = 0x07
                    0000    330 	ar0 = 0x00
                    0001    331 	ar1 = 0x01
                            332 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW12\sm01.c:16: DIRECTION=0;
   0064 C2 00               333 	clr	_DIRECTION
                            334 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW12\sm01.c:17: SM=0x01;
   0066 75 08 01            335 	mov	_SM,#0x01
                            336 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW12\sm01.c:19: while(1)
   0069                     337 00116$:
                            338 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW12\sm01.c:21: if(BUTTON==0)
   0069 20 90 17            339 	jb	_P1_0,00105$
                            340 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW12\sm01.c:23: DIRECTION=1-DIRECTION;
   006C A2 00               341 	mov	c,_DIRECTION
   006E E4                  342 	clr	a
   006F 33                  343 	rlc	a
   0070 FA                  344 	mov	r2,a
   0071 7B 00               345 	mov	r3,#0x00
   0073 74 01               346 	mov	a,#0x01
   0075 C3                  347 	clr	c
   0076 9A                  348 	subb	a,r2
   0077 FA                  349 	mov	r2,a
   0078 E4                  350 	clr	a
   0079 9B                  351 	subb	a,r3
   007A FB                  352 	mov	r3,a
   007B 4A                  353 	orl	a,r2
   007C 24 FF               354 	add	a,#0xff
   007E 92 00               355 	mov	_DIRECTION,c
                            356 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW12\sm01.c:24: while(BUTTON==0);
   0080                     357 00101$:
   0080 30 90 FD            358 	jnb	_P1_0,00101$
   0083                     359 00105$:
                            360 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW12\sm01.c:26: if(DIRECTION==1)
   0083 30 00 1C            361 	jnb	_DIRECTION,00113$
                            362 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW12\sm01.c:28: if(SM<8){
   0086 C3                  363 	clr	c
   0087 E5 08               364 	mov	a,_SM
   0089 64 80               365 	xrl	a,#0x80
   008B 94 88               366 	subb	a,#0x88
   008D 50 0B               367 	jnc	00107$
                            368 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW12\sm01.c:29: SM=SM<<1;
   008F E5 08               369 	mov	a,_SM
   0091 25 08               370 	add	a,_SM
   0093 F5 08               371 	mov	_SM,a
                            372 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW12\sm01.c:30: P0=SM;
   0095 85 08 80            373 	mov	_P0,_SM
   0098 80 27               374 	sjmp	00128$
   009A                     375 00107$:
                            376 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW12\sm01.c:33: SM=1;
   009A 75 08 01            377 	mov	_SM,#0x01
                            378 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW12\sm01.c:34: P0=SM;
   009D 75 80 01            379 	mov	_P0,#0x01
   00A0 80 1F               380 	sjmp	00128$
   00A2                     381 00113$:
                            382 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW12\sm01.c:40: if(SM>1){
   00A2 C3                  383 	clr	c
   00A3 74 81               384 	mov	a,#(0x01 ^ 0x80)
   00A5 85 08 F0            385 	mov	b,_SM
   00A8 63 F0 80            386 	xrl	b,#0x80
   00AB 95 F0               387 	subb	a,b
   00AD 50 0C               388 	jnc	00110$
                            389 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW12\sm01.c:41: SM=SM>>1;
   00AF E5 08               390 	mov	a,_SM
   00B1 A2 E7               391 	mov	c,acc.7
   00B3 13                  392 	rrc	a
   00B4 F5 08               393 	mov	_SM,a
                            394 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW12\sm01.c:42: P0=SM;
   00B6 85 08 80            395 	mov	_P0,_SM
   00B9 80 06               396 	sjmp	00128$
   00BB                     397 00110$:
                            398 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW12\sm01.c:45: SM=8;
   00BB 75 08 08            399 	mov	_SM,#0x08
                            400 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW12\sm01.c:46: P0=SM;
   00BE 75 80 08            401 	mov	_P0,#0x08
                            402 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW12\sm01.c:50: for(i=0;i<367;i++);
   00C1                     403 00128$:
   00C1 7A 6F               404 	mov	r2,#0x6F
   00C3 7B 01               405 	mov	r3,#0x01
   00C5                     406 00120$:
   00C5 1A                  407 	dec	r2
   00C6 BA FF 01            408 	cjne	r2,#0xff,00137$
   00C9 1B                  409 	dec	r3
   00CA                     410 00137$:
   00CA EA                  411 	mov	a,r2
   00CB 4B                  412 	orl	a,r3
   00CC 70 F7               413 	jnz	00120$
   00CE 80 99               414 	sjmp	00116$
                            415 	.area CSEG    (CODE)
                            416 	.area CONST   (CODE)
                            417 	.area XINIT   (CODE)
                            418 	.area CABS    (ABS,CODE)
