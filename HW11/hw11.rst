                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6083 (Dec 17 2010) (MINGW32)
                              4 ; This file was generated Mon Nov 21 10:47:53 2022
                              5 ;--------------------------------------------------------
                              6 	.module hw11
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _uart_ASCII
                             13 	.globl _main
                             14 	.globl _CY
                             15 	.globl _AC
                             16 	.globl _F0
                             17 	.globl _RS1
                             18 	.globl _RS0
                             19 	.globl _OV
                             20 	.globl _F1
                             21 	.globl _P
                             22 	.globl _PS
                             23 	.globl _PT1
                             24 	.globl _PX1
                             25 	.globl _PT0
                             26 	.globl _PX0
                             27 	.globl _RD
                             28 	.globl _WR
                             29 	.globl _T1
                             30 	.globl _T0
                             31 	.globl _INT1
                             32 	.globl _INT0
                             33 	.globl _TXD
                             34 	.globl _RXD
                             35 	.globl _P3_7
                             36 	.globl _P3_6
                             37 	.globl _P3_5
                             38 	.globl _P3_4
                             39 	.globl _P3_3
                             40 	.globl _P3_2
                             41 	.globl _P3_1
                             42 	.globl _P3_0
                             43 	.globl _EA
                             44 	.globl _ES
                             45 	.globl _ET1
                             46 	.globl _EX1
                             47 	.globl _ET0
                             48 	.globl _EX0
                             49 	.globl _P2_7
                             50 	.globl _P2_6
                             51 	.globl _P2_5
                             52 	.globl _P2_4
                             53 	.globl _P2_3
                             54 	.globl _P2_2
                             55 	.globl _P2_1
                             56 	.globl _P2_0
                             57 	.globl _SM0
                             58 	.globl _SM1
                             59 	.globl _SM2
                             60 	.globl _REN
                             61 	.globl _TB8
                             62 	.globl _RB8
                             63 	.globl _TI
                             64 	.globl _RI
                             65 	.globl _P1_7
                             66 	.globl _P1_6
                             67 	.globl _P1_5
                             68 	.globl _P1_4
                             69 	.globl _P1_3
                             70 	.globl _P1_2
                             71 	.globl _P1_1
                             72 	.globl _P1_0
                             73 	.globl _TF1
                             74 	.globl _TR1
                             75 	.globl _TF0
                             76 	.globl _TR0
                             77 	.globl _IE1
                             78 	.globl _IT1
                             79 	.globl _IE0
                             80 	.globl _IT0
                             81 	.globl _P0_7
                             82 	.globl _P0_6
                             83 	.globl _P0_5
                             84 	.globl _P0_4
                             85 	.globl _P0_3
                             86 	.globl _P0_2
                             87 	.globl _P0_1
                             88 	.globl _P0_0
                             89 	.globl _B
                             90 	.globl _ACC
                             91 	.globl _PSW
                             92 	.globl _IP
                             93 	.globl _P3
                             94 	.globl _IE
                             95 	.globl _P2
                             96 	.globl _SBUF
                             97 	.globl _SCON
                             98 	.globl _P1
                             99 	.globl _TH1
                            100 	.globl _TH0
                            101 	.globl _TL1
                            102 	.globl _TL0
                            103 	.globl _TMOD
                            104 	.globl _TCON
                            105 	.globl _PCON
                            106 	.globl _DPH
                            107 	.globl _DPL
                            108 	.globl _SP
                            109 	.globl _P0
                            110 	.globl _uart_initialize
                            111 	.globl _uart_put_char
                            112 	.globl _uart_get_char
                            113 	.globl _uart_get_char_echo
                            114 	.globl _uart_put_string
                            115 	.globl _uart_get_string
                            116 	.globl _uart_i2s
                            117 	.globl _uart_s2i
                            118 	.globl _uart_put_integer
                            119 	.globl _uart_get_integer
                            120 	.globl _uart_put_byte
                            121 	.globl _uart_put_word
                            122 	.globl _uart_get_nibble
                            123 	.globl _uart_get_byte
                            124 	.globl _uart_get_word
                            125 	.globl _keypad_get_key
                            126 	.globl _keypad_get_key_echo
                            127 	.globl _keypad_get_byte
                            128 	.globl _keypad_get_word
                            129 	.globl _keypad_check_key
                            130 	.globl _keypad_get_integer
                            131 ;--------------------------------------------------------
                            132 ; special function registers
                            133 ;--------------------------------------------------------
                            134 	.area RSEG    (ABS,DATA)
   0000                     135 	.org 0x0000
                    0080    136 _P0	=	0x0080
                    0081    137 _SP	=	0x0081
                    0082    138 _DPL	=	0x0082
                    0083    139 _DPH	=	0x0083
                    0087    140 _PCON	=	0x0087
                    0088    141 _TCON	=	0x0088
                    0089    142 _TMOD	=	0x0089
                    008A    143 _TL0	=	0x008a
                    008B    144 _TL1	=	0x008b
                    008C    145 _TH0	=	0x008c
                    008D    146 _TH1	=	0x008d
                    0090    147 _P1	=	0x0090
                    0098    148 _SCON	=	0x0098
                    0099    149 _SBUF	=	0x0099
                    00A0    150 _P2	=	0x00a0
                    00A8    151 _IE	=	0x00a8
                    00B0    152 _P3	=	0x00b0
                    00B8    153 _IP	=	0x00b8
                    00D0    154 _PSW	=	0x00d0
                    00E0    155 _ACC	=	0x00e0
                    00F0    156 _B	=	0x00f0
                            157 ;--------------------------------------------------------
                            158 ; special function bits
                            159 ;--------------------------------------------------------
                            160 	.area RSEG    (ABS,DATA)
   0000                     161 	.org 0x0000
                    0080    162 _P0_0	=	0x0080
                    0081    163 _P0_1	=	0x0081
                    0082    164 _P0_2	=	0x0082
                    0083    165 _P0_3	=	0x0083
                    0084    166 _P0_4	=	0x0084
                    0085    167 _P0_5	=	0x0085
                    0086    168 _P0_6	=	0x0086
                    0087    169 _P0_7	=	0x0087
                    0088    170 _IT0	=	0x0088
                    0089    171 _IE0	=	0x0089
                    008A    172 _IT1	=	0x008a
                    008B    173 _IE1	=	0x008b
                    008C    174 _TR0	=	0x008c
                    008D    175 _TF0	=	0x008d
                    008E    176 _TR1	=	0x008e
                    008F    177 _TF1	=	0x008f
                    0090    178 _P1_0	=	0x0090
                    0091    179 _P1_1	=	0x0091
                    0092    180 _P1_2	=	0x0092
                    0093    181 _P1_3	=	0x0093
                    0094    182 _P1_4	=	0x0094
                    0095    183 _P1_5	=	0x0095
                    0096    184 _P1_6	=	0x0096
                    0097    185 _P1_7	=	0x0097
                    0098    186 _RI	=	0x0098
                    0099    187 _TI	=	0x0099
                    009A    188 _RB8	=	0x009a
                    009B    189 _TB8	=	0x009b
                    009C    190 _REN	=	0x009c
                    009D    191 _SM2	=	0x009d
                    009E    192 _SM1	=	0x009e
                    009F    193 _SM0	=	0x009f
                    00A0    194 _P2_0	=	0x00a0
                    00A1    195 _P2_1	=	0x00a1
                    00A2    196 _P2_2	=	0x00a2
                    00A3    197 _P2_3	=	0x00a3
                    00A4    198 _P2_4	=	0x00a4
                    00A5    199 _P2_5	=	0x00a5
                    00A6    200 _P2_6	=	0x00a6
                    00A7    201 _P2_7	=	0x00a7
                    00A8    202 _EX0	=	0x00a8
                    00A9    203 _ET0	=	0x00a9
                    00AA    204 _EX1	=	0x00aa
                    00AB    205 _ET1	=	0x00ab
                    00AC    206 _ES	=	0x00ac
                    00AF    207 _EA	=	0x00af
                    00B0    208 _P3_0	=	0x00b0
                    00B1    209 _P3_1	=	0x00b1
                    00B2    210 _P3_2	=	0x00b2
                    00B3    211 _P3_3	=	0x00b3
                    00B4    212 _P3_4	=	0x00b4
                    00B5    213 _P3_5	=	0x00b5
                    00B6    214 _P3_6	=	0x00b6
                    00B7    215 _P3_7	=	0x00b7
                    00B0    216 _RXD	=	0x00b0
                    00B1    217 _TXD	=	0x00b1
                    00B2    218 _INT0	=	0x00b2
                    00B3    219 _INT1	=	0x00b3
                    00B4    220 _T0	=	0x00b4
                    00B5    221 _T1	=	0x00b5
                    00B6    222 _WR	=	0x00b6
                    00B7    223 _RD	=	0x00b7
                    00B8    224 _PX0	=	0x00b8
                    00B9    225 _PT0	=	0x00b9
                    00BA    226 _PX1	=	0x00ba
                    00BB    227 _PT1	=	0x00bb
                    00BC    228 _PS	=	0x00bc
                    00D0    229 _P	=	0x00d0
                    00D1    230 _F1	=	0x00d1
                    00D2    231 _OV	=	0x00d2
                    00D3    232 _RS0	=	0x00d3
                    00D4    233 _RS1	=	0x00d4
                    00D5    234 _F0	=	0x00d5
                    00D6    235 _AC	=	0x00d6
                    00D7    236 _CY	=	0x00d7
                            237 ;--------------------------------------------------------
                            238 ; overlayable register banks
                            239 ;--------------------------------------------------------
                            240 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     241 	.ds 8
                            242 ;--------------------------------------------------------
                            243 ; internal ram data
                            244 ;--------------------------------------------------------
                            245 	.area DSEG    (DATA)
                            246 ;--------------------------------------------------------
                            247 ; overlayable items in internal ram 
                            248 ;--------------------------------------------------------
                            249 	.area OSEG    (OVR,DATA)
                            250 ;--------------------------------------------------------
                            251 ; Stack segment in internal ram 
                            252 ;--------------------------------------------------------
                            253 	.area	SSEG	(DATA)
   0009                     254 __start__stack:
   0009                     255 	.ds	1
                            256 
                            257 ;--------------------------------------------------------
                            258 ; indirectly addressable internal ram data
                            259 ;--------------------------------------------------------
                            260 	.area ISEG    (DATA)
                            261 ;--------------------------------------------------------
                            262 ; absolute internal ram data
                            263 ;--------------------------------------------------------
                            264 	.area IABS    (ABS,DATA)
                            265 	.area IABS    (ABS,DATA)
                            266 ;--------------------------------------------------------
                            267 ; bit data
                            268 ;--------------------------------------------------------
                            269 	.area BSEG    (BIT)
                            270 ;--------------------------------------------------------
                            271 ; paged external ram data
                            272 ;--------------------------------------------------------
                            273 	.area PSEG    (PAG,XDATA)
                            274 ;--------------------------------------------------------
                            275 ; external ram data
                            276 ;--------------------------------------------------------
                            277 	.area XSEG    (XDATA)
                            278 ;--------------------------------------------------------
                            279 ; absolute external ram data
                            280 ;--------------------------------------------------------
                            281 	.area XABS    (ABS,XDATA)
                            282 ;--------------------------------------------------------
                            283 ; external initialized ram data
                            284 ;--------------------------------------------------------
                            285 	.area XISEG   (XDATA)
                            286 	.area HOME    (CODE)
                            287 	.area GSINIT0 (CODE)
                            288 	.area GSINIT1 (CODE)
                            289 	.area GSINIT2 (CODE)
                            290 	.area GSINIT3 (CODE)
                            291 	.area GSINIT4 (CODE)
                            292 	.area GSINIT5 (CODE)
                            293 	.area GSINIT  (CODE)
                            294 	.area GSFINAL (CODE)
                            295 	.area CSEG    (CODE)
                            296 ;--------------------------------------------------------
                            297 ; interrupt vector 
                            298 ;--------------------------------------------------------
                            299 	.area HOME    (CODE)
   0000                     300 __interrupt_vect:
   0000 02 00 08            301 	ljmp	__sdcc_gsinit_startup
                            302 ;--------------------------------------------------------
                            303 ; global & static initialisations
                            304 ;--------------------------------------------------------
                            305 	.area HOME    (CODE)
                            306 	.area GSINIT  (CODE)
                            307 	.area GSFINAL (CODE)
                            308 	.area GSINIT  (CODE)
                            309 	.globl __sdcc_gsinit_startup
                            310 	.globl __sdcc_program_startup
                            311 	.globl __start__stack
                            312 	.globl __mcs51_genXINIT
                            313 	.globl __mcs51_genXRAMCLEAR
                            314 	.globl __mcs51_genRAMCLEAR
                            315 	.area GSFINAL (CODE)
   0061 02 00 03            316 	ljmp	__sdcc_program_startup
                            317 ;--------------------------------------------------------
                            318 ; Home
                            319 ;--------------------------------------------------------
                            320 	.area HOME    (CODE)
                            321 	.area HOME    (CODE)
   0003                     322 __sdcc_program_startup:
   0003 12 05 85            323 	lcall	_main
                            324 ;	return from main will lock up
   0006 80 FE               325 	sjmp .
                            326 ;--------------------------------------------------------
                            327 ; code
                            328 ;--------------------------------------------------------
                            329 	.area CSEG    (CODE)
                            330 ;------------------------------------------------------------
                            331 ;Allocation info for local variables in function 'uart_initialize'
                            332 ;------------------------------------------------------------
                            333 ;------------------------------------------------------------
                            334 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:24: void uart_initialize(void)
                            335 ;	-----------------------------------------
                            336 ;	 function uart_initialize
                            337 ;	-----------------------------------------
   0064                     338 _uart_initialize:
                    0002    339 	ar2 = 0x02
                    0003    340 	ar3 = 0x03
                    0004    341 	ar4 = 0x04
                    0005    342 	ar5 = 0x05
                    0006    343 	ar6 = 0x06
                    0007    344 	ar7 = 0x07
                    0000    345 	ar0 = 0x00
                    0001    346 	ar1 = 0x01
                            347 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:26: PCON&=0x7F;		// Clear SMOD of PCON, No Double Baud Rate
   0064 53 87 7F            348 	anl	_PCON,#0x7F
                            349 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:27: TMOD&=0x2F;TMOD|=0x20;	// Set Timer1 to Mode 2 (8-bit auto reload) for Baud Rate Generation
   0067 53 89 2F            350 	anl	_TMOD,#0x2F
   006A 43 89 20            351 	orl	_TMOD,#0x20
                            352 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:28: TH1=0xFD;		// Set Baud Rate to 9600 bps for 11.0592M Hz
   006D 75 8D FD            353 	mov	_TH1,#0xFD
                            354 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:29: SM0=0;SM1=1;		// Set UART to Mode 1 (8-bit UART)
   0070 C2 9F               355 	clr	_SM0
   0072 D2 9E               356 	setb	_SM1
                            357 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:30: REN=1;			// Set REN of SCON to Enable UART Receive
   0074 D2 9C               358 	setb	_REN
                            359 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:31: TR1=1;			// Set TR1 of TCON to Start Timer1
   0076 D2 8E               360 	setb	_TR1
                            361 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:32: TI=0;RI=0;		// Clear TI/RI of SCON to Get Ready to Send/Receive
   0078 C2 99               362 	clr	_TI
   007A C2 98               363 	clr	_RI
   007C 22                  364 	ret
                            365 ;------------------------------------------------------------
                            366 ;Allocation info for local variables in function 'uart_put_char'
                            367 ;------------------------------------------------------------
                            368 ;c                         Allocated to registers 
                            369 ;------------------------------------------------------------
                            370 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:35: void uart_put_char(char c)	// Put Character to UART
                            371 ;	-----------------------------------------
                            372 ;	 function uart_put_char
                            373 ;	-----------------------------------------
   007D                     374 _uart_put_char:
   007D 85 82 99            375 	mov	_SBUF,dpl
                            376 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:38: while(TI==0);TI=0;
   0080                     377 00101$:
   0080 10 99 02            378 	jbc	_TI,00108$
   0083 80 FB               379 	sjmp	00101$
   0085                     380 00108$:
   0085 22                  381 	ret
                            382 ;------------------------------------------------------------
                            383 ;Allocation info for local variables in function 'uart_get_char'
                            384 ;------------------------------------------------------------
                            385 ;------------------------------------------------------------
                            386 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:41: char uart_get_char(void)	// Get Character from UART
                            387 ;	-----------------------------------------
                            388 ;	 function uart_get_char
                            389 ;	-----------------------------------------
   0086                     390 _uart_get_char:
                            391 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:43: while(RI==0);RI=0;
   0086                     392 00101$:
   0086 10 98 02            393 	jbc	_RI,00108$
   0089 80 FB               394 	sjmp	00101$
   008B                     395 00108$:
                            396 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:44: return SBUF;
   008B 85 99 82            397 	mov	dpl,_SBUF
   008E 22                  398 	ret
                            399 ;------------------------------------------------------------
                            400 ;Allocation info for local variables in function 'uart_get_char_echo'
                            401 ;------------------------------------------------------------
                            402 ;------------------------------------------------------------
                            403 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:47: char uart_get_char_echo(void)	// Get Character from UART with Echo, Require uart_put_char()
                            404 ;	-----------------------------------------
                            405 ;	 function uart_get_char_echo
                            406 ;	-----------------------------------------
   008F                     407 _uart_get_char_echo:
                            408 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:49: while(RI==0);RI=0;
   008F                     409 00101$:
   008F 10 98 02            410 	jbc	_RI,00108$
   0092 80 FB               411 	sjmp	00101$
   0094                     412 00108$:
                            413 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:50: uart_put_char(SBUF);
   0094 85 99 82            414 	mov	dpl,_SBUF
   0097 12 00 7D            415 	lcall	_uart_put_char
                            416 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:51: return SBUF;
   009A 85 99 82            417 	mov	dpl,_SBUF
   009D 22                  418 	ret
                            419 ;------------------------------------------------------------
                            420 ;Allocation info for local variables in function 'uart_put_string'
                            421 ;------------------------------------------------------------
                            422 ;s                         Allocated to registers r2 r3 r4 
                            423 ;------------------------------------------------------------
                            424 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:54: void uart_put_string(char *s)	// Put String to UART, Require uart_put_char()
                            425 ;	-----------------------------------------
                            426 ;	 function uart_put_string
                            427 ;	-----------------------------------------
   009E                     428 _uart_put_string:
   009E AA 82               429 	mov	r2,dpl
   00A0 AB 83               430 	mov	r3,dph
   00A2 AC F0               431 	mov	r4,b
                            432 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:56: while(*s!=0){uart_put_char(*s);s++;}
   00A4                     433 00101$:
   00A4 8A 82               434 	mov	dpl,r2
   00A6 8B 83               435 	mov	dph,r3
   00A8 8C F0               436 	mov	b,r4
   00AA 12 06 52            437 	lcall	__gptrget
   00AD FD                  438 	mov	r5,a
   00AE 60 18               439 	jz	00104$
   00B0 8D 82               440 	mov	dpl,r5
   00B2 C0 02               441 	push	ar2
   00B4 C0 03               442 	push	ar3
   00B6 C0 04               443 	push	ar4
   00B8 12 00 7D            444 	lcall	_uart_put_char
   00BB D0 04               445 	pop	ar4
   00BD D0 03               446 	pop	ar3
   00BF D0 02               447 	pop	ar2
   00C1 0A                  448 	inc	r2
   00C2 BA 00 DF            449 	cjne	r2,#0x00,00101$
   00C5 0B                  450 	inc	r3
   00C6 80 DC               451 	sjmp	00101$
   00C8                     452 00104$:
   00C8 22                  453 	ret
                            454 ;------------------------------------------------------------
                            455 ;Allocation info for local variables in function 'uart_get_string'
                            456 ;------------------------------------------------------------
                            457 ;s                         Allocated to registers r2 r3 r4 
                            458 ;------------------------------------------------------------
                            459 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:59: void uart_get_string(char *s)	// Get String from UART, Require uart_get_char_echo()
                            460 ;	-----------------------------------------
                            461 ;	 function uart_get_string
                            462 ;	-----------------------------------------
   00C9                     463 _uart_get_string:
   00C9 AA 82               464 	mov	r2,dpl
   00CB AB 83               465 	mov	r3,dph
   00CD AC F0               466 	mov	r4,b
                            467 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:61: while(((*s)=uart_get_char_echo())!=13)s++;
   00CF                     468 00101$:
   00CF C0 02               469 	push	ar2
   00D1 C0 03               470 	push	ar3
   00D3 C0 04               471 	push	ar4
   00D5 12 00 8F            472 	lcall	_uart_get_char_echo
   00D8 AD 82               473 	mov	r5,dpl
   00DA D0 04               474 	pop	ar4
   00DC D0 03               475 	pop	ar3
   00DE D0 02               476 	pop	ar2
   00E0 8A 82               477 	mov	dpl,r2
   00E2 8B 83               478 	mov	dph,r3
   00E4 8C F0               479 	mov	b,r4
   00E6 ED                  480 	mov	a,r5
   00E7 12 06 17            481 	lcall	__gptrput
   00EA BD 0D 02            482 	cjne	r5,#0x0D,00109$
   00ED 80 07               483 	sjmp	00103$
   00EF                     484 00109$:
   00EF 0A                  485 	inc	r2
   00F0 BA 00 DC            486 	cjne	r2,#0x00,00101$
   00F3 0B                  487 	inc	r3
   00F4 80 D9               488 	sjmp	00101$
   00F6                     489 00103$:
                            490 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:62: *s=0;
   00F6 8A 82               491 	mov	dpl,r2
   00F8 8B 83               492 	mov	dph,r3
   00FA 8C F0               493 	mov	b,r4
   00FC E4                  494 	clr	a
   00FD 02 06 17            495 	ljmp	__gptrput
                            496 ;------------------------------------------------------------
                            497 ;Allocation info for local variables in function 'uart_i2s'
                            498 ;------------------------------------------------------------
                            499 ;s                         Allocated to stack - offset -5
                            500 ;i                         Allocated to stack - offset 1
                            501 ;sign                      Allocated to stack - offset 3
                            502 ;len                       Allocated to registers r6 
                            503 ;p                         Allocated to stack - offset 4
                            504 ;sloc0                     Allocated to stack - offset 8
                            505 ;sloc1                     Allocated to stack - offset 7
                            506 ;sloc2                     Allocated to stack - offset 8
                            507 ;------------------------------------------------------------
                            508 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:65: void uart_i2s(int i,char *s)	// Convert Integer to String
                            509 ;	-----------------------------------------
                            510 ;	 function uart_i2s
                            511 ;	-----------------------------------------
   0100                     512 _uart_i2s:
   0100 C0 08               513 	push	_bp
   0102 85 81 08            514 	mov	_bp,sp
   0105 C0 82               515 	push	dpl
   0107 C0 83               516 	push	dph
   0109 E5 81               517 	mov	a,sp
   010B 24 0A               518 	add	a,#0x0a
   010D F5 81               519 	mov	sp,a
                            520 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:68: sign='+';len=0;p=s;
   010F E5 08               521 	mov	a,_bp
   0111 24 03               522 	add	a,#0x03
   0113 F8                  523 	mov	r0,a
   0114 76 2B               524 	mov	@r0,#0x2B
   0116 E5 08               525 	mov	a,_bp
   0118 24 FB               526 	add	a,#0xfb
   011A F8                  527 	mov	r0,a
   011B E5 08               528 	mov	a,_bp
   011D 24 04               529 	add	a,#0x04
   011F F9                  530 	mov	r1,a
   0120 E6                  531 	mov	a,@r0
   0121 F7                  532 	mov	@r1,a
   0122 08                  533 	inc	r0
   0123 09                  534 	inc	r1
   0124 E6                  535 	mov	a,@r0
   0125 F7                  536 	mov	@r1,a
   0126 08                  537 	inc	r0
   0127 09                  538 	inc	r1
   0128 E6                  539 	mov	a,@r0
   0129 F7                  540 	mov	@r1,a
                            541 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:69: if(i<0){sign='-';i=-i;}
   012A A8 08               542 	mov	r0,_bp
   012C 08                  543 	inc	r0
   012D 08                  544 	inc	r0
   012E E6                  545 	mov	a,@r0
   012F 30 E7 12            546 	jnb	acc.7,00115$
   0132 E5 08               547 	mov	a,_bp
   0134 24 03               548 	add	a,#0x03
   0136 F8                  549 	mov	r0,a
   0137 76 2D               550 	mov	@r0,#0x2D
   0139 A8 08               551 	mov	r0,_bp
   013B 08                  552 	inc	r0
   013C C3                  553 	clr	c
   013D E4                  554 	clr	a
   013E 96                  555 	subb	a,@r0
   013F F6                  556 	mov	@r0,a
   0140 08                  557 	inc	r0
   0141 E4                  558 	clr	a
   0142 96                  559 	subb	a,@r0
   0143 F6                  560 	mov	@r0,a
                            561 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:70: do{*s=(i%10)+'0';s++;len++;i/=10;}while(i!=0);
   0144                     562 00115$:
   0144 E5 08               563 	mov	a,_bp
   0146 24 04               564 	add	a,#0x04
   0148 F8                  565 	mov	r0,a
   0149 86 04               566 	mov	ar4,@r0
   014B 08                  567 	inc	r0
   014C 86 02               568 	mov	ar2,@r0
   014E 08                  569 	inc	r0
   014F 86 03               570 	mov	ar3,@r0
   0151 7D 00               571 	mov	r5,#0x00
   0153                     572 00103$:
   0153 C0 02               573 	push	ar2
   0155 C0 03               574 	push	ar3
   0157 C0 04               575 	push	ar4
   0159 C0 05               576 	push	ar5
   015B 74 0A               577 	mov	a,#0x0A
   015D C0 E0               578 	push	acc
   015F E4                  579 	clr	a
   0160 C0 E0               580 	push	acc
   0162 A8 08               581 	mov	r0,_bp
   0164 08                  582 	inc	r0
   0165 86 82               583 	mov	dpl,@r0
   0167 08                  584 	inc	r0
   0168 86 83               585 	mov	dph,@r0
   016A 12 06 6E            586 	lcall	__modsint
   016D AE 82               587 	mov	r6,dpl
   016F 15 81               588 	dec	sp
   0171 15 81               589 	dec	sp
   0173 D0 05               590 	pop	ar5
   0175 D0 04               591 	pop	ar4
   0177 D0 03               592 	pop	ar3
   0179 D0 02               593 	pop	ar2
   017B 74 30               594 	mov	a,#0x30
   017D 2E                  595 	add	a,r6
   017E 8C 82               596 	mov	dpl,r4
   0180 8A 83               597 	mov	dph,r2
   0182 8B F0               598 	mov	b,r3
   0184 12 06 17            599 	lcall	__gptrput
   0187 A3                  600 	inc	dptr
   0188 AC 82               601 	mov	r4,dpl
   018A AA 83               602 	mov	r2,dph
   018C 0D                  603 	inc	r5
   018D 8D 06               604 	mov	ar6,r5
   018F C0 02               605 	push	ar2
   0191 C0 03               606 	push	ar3
   0193 C0 04               607 	push	ar4
   0195 C0 05               608 	push	ar5
   0197 74 0A               609 	mov	a,#0x0A
   0199 C0 E0               610 	push	acc
   019B E4                  611 	clr	a
   019C C0 E0               612 	push	acc
   019E A8 08               613 	mov	r0,_bp
   01A0 08                  614 	inc	r0
   01A1 86 82               615 	mov	dpl,@r0
   01A3 08                  616 	inc	r0
   01A4 86 83               617 	mov	dph,@r0
   01A6 12 06 AB            618 	lcall	__divsint
   01A9 A8 08               619 	mov	r0,_bp
   01AB 08                  620 	inc	r0
   01AC A6 82               621 	mov	@r0,dpl
   01AE 08                  622 	inc	r0
   01AF A6 83               623 	mov	@r0,dph
   01B1 15 81               624 	dec	sp
   01B3 15 81               625 	dec	sp
   01B5 D0 05               626 	pop	ar5
   01B7 D0 04               627 	pop	ar4
   01B9 D0 03               628 	pop	ar3
   01BB D0 02               629 	pop	ar2
   01BD A8 08               630 	mov	r0,_bp
   01BF 08                  631 	inc	r0
   01C0 E6                  632 	mov	a,@r0
   01C1 08                  633 	inc	r0
   01C2 46                  634 	orl	a,@r0
   01C3 70 8E               635 	jnz	00103$
                            636 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:71: if(sign=='-'){*s='-';s++;len++;}
   01C5 8D 06               637 	mov	ar6,r5
   01C7 E5 08               638 	mov	a,_bp
   01C9 24 03               639 	add	a,#0x03
   01CB F8                  640 	mov	r0,a
   01CC B6 2D 0E            641 	cjne	@r0,#0x2D,00119$
   01CF 8C 82               642 	mov	dpl,r4
   01D1 8A 83               643 	mov	dph,r2
   01D3 8B F0               644 	mov	b,r3
   01D5 74 2D               645 	mov	a,#0x2D
   01D7 12 06 17            646 	lcall	__gptrput
   01DA ED                  647 	mov	a,r5
   01DB 04                  648 	inc	a
   01DC FE                  649 	mov	r6,a
                            650 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:72: for(i=0;i<len/2;i++){p[len]=p[i];p[i]=p[len-1-i];p[len-1-i]=p[len];}
   01DD                     651 00119$:
   01DD EE                  652 	mov	a,r6
   01DE C3                  653 	clr	c
   01DF 13                  654 	rrc	a
   01E0 FA                  655 	mov	r2,a
   01E1 A8 08               656 	mov	r0,_bp
   01E3 08                  657 	inc	r0
   01E4 E4                  658 	clr	a
   01E5 F6                  659 	mov	@r0,a
   01E6 08                  660 	inc	r0
   01E7 F6                  661 	mov	@r0,a
   01E8                     662 00108$:
   01E8 8A 05               663 	mov	ar5,r2
   01EA 7F 00               664 	mov	r7,#0x00
   01EC A8 08               665 	mov	r0,_bp
   01EE 08                  666 	inc	r0
   01EF C3                  667 	clr	c
   01F0 E6                  668 	mov	a,@r0
   01F1 9D                  669 	subb	a,r5
   01F2 08                  670 	inc	r0
   01F3 E6                  671 	mov	a,@r0
   01F4 64 80               672 	xrl	a,#0x80
   01F6 8F F0               673 	mov	b,r7
   01F8 63 F0 80            674 	xrl	b,#0x80
   01FB 95 F0               675 	subb	a,b
   01FD 40 03               676 	jc	00126$
   01FF 02 02 B9            677 	ljmp	00111$
   0202                     678 00126$:
   0202 C0 02               679 	push	ar2
   0204 E5 08               680 	mov	a,_bp
   0206 24 04               681 	add	a,#0x04
   0208 F8                  682 	mov	r0,a
   0209 EE                  683 	mov	a,r6
   020A 26                  684 	add	a,@r0
   020B FB                  685 	mov	r3,a
   020C E4                  686 	clr	a
   020D 08                  687 	inc	r0
   020E 36                  688 	addc	a,@r0
   020F FC                  689 	mov	r4,a
   0210 08                  690 	inc	r0
   0211 86 05               691 	mov	ar5,@r0
   0213 E5 08               692 	mov	a,_bp
   0215 24 04               693 	add	a,#0x04
   0217 F8                  694 	mov	r0,a
   0218 A9 08               695 	mov	r1,_bp
   021A 09                  696 	inc	r1
   021B E7                  697 	mov	a,@r1
   021C 26                  698 	add	a,@r0
   021D C0 E0               699 	push	acc
   021F 09                  700 	inc	r1
   0220 E7                  701 	mov	a,@r1
   0221 08                  702 	inc	r0
   0222 36                  703 	addc	a,@r0
   0223 C0 E0               704 	push	acc
   0225 08                  705 	inc	r0
   0226 E6                  706 	mov	a,@r0
   0227 C0 E0               707 	push	acc
   0229 E5 08               708 	mov	a,_bp
   022B 24 0A               709 	add	a,#0x0a
   022D F8                  710 	mov	r0,a
   022E D0 E0               711 	pop	acc
   0230 F6                  712 	mov	@r0,a
   0231 18                  713 	dec	r0
   0232 D0 E0               714 	pop	acc
   0234 F6                  715 	mov	@r0,a
   0235 18                  716 	dec	r0
   0236 D0 E0               717 	pop	acc
   0238 F6                  718 	mov	@r0,a
   0239 E5 08               719 	mov	a,_bp
   023B 24 08               720 	add	a,#0x08
   023D F8                  721 	mov	r0,a
   023E 86 82               722 	mov	dpl,@r0
   0240 08                  723 	inc	r0
   0241 86 83               724 	mov	dph,@r0
   0243 08                  725 	inc	r0
   0244 86 F0               726 	mov	b,@r0
   0246 E5 08               727 	mov	a,_bp
   0248 24 07               728 	add	a,#0x07
   024A F9                  729 	mov	r1,a
   024B 12 06 52            730 	lcall	__gptrget
   024E F7                  731 	mov	@r1,a
   024F 8B 82               732 	mov	dpl,r3
   0251 8C 83               733 	mov	dph,r4
   0253 8D F0               734 	mov	b,r5
   0255 E5 08               735 	mov	a,_bp
   0257 24 07               736 	add	a,#0x07
   0259 F8                  737 	mov	r0,a
   025A E6                  738 	mov	a,@r0
   025B 12 06 17            739 	lcall	__gptrput
   025E 8E 07               740 	mov	ar7,r6
   0260 7D 00               741 	mov	r5,#0x00
   0262 1F                  742 	dec	r7
   0263 BF FF 01            743 	cjne	r7,#0xff,00127$
   0266 1D                  744 	dec	r5
   0267                     745 00127$:
   0267 A8 08               746 	mov	r0,_bp
   0269 08                  747 	inc	r0
   026A EF                  748 	mov	a,r7
   026B C3                  749 	clr	c
   026C 96                  750 	subb	a,@r0
   026D FF                  751 	mov	r7,a
   026E ED                  752 	mov	a,r5
   026F 08                  753 	inc	r0
   0270 96                  754 	subb	a,@r0
   0271 FD                  755 	mov	r5,a
   0272 E5 08               756 	mov	a,_bp
   0274 24 04               757 	add	a,#0x04
   0276 F8                  758 	mov	r0,a
   0277 EF                  759 	mov	a,r7
   0278 26                  760 	add	a,@r0
   0279 FF                  761 	mov	r7,a
   027A ED                  762 	mov	a,r5
   027B 08                  763 	inc	r0
   027C 36                  764 	addc	a,@r0
   027D FD                  765 	mov	r5,a
   027E 08                  766 	inc	r0
   027F 86 02               767 	mov	ar2,@r0
   0281 8F 82               768 	mov	dpl,r7
   0283 8D 83               769 	mov	dph,r5
   0285 8A F0               770 	mov	b,r2
   0287 12 06 52            771 	lcall	__gptrget
   028A FB                  772 	mov	r3,a
   028B E5 08               773 	mov	a,_bp
   028D 24 08               774 	add	a,#0x08
   028F F8                  775 	mov	r0,a
   0290 86 82               776 	mov	dpl,@r0
   0292 08                  777 	inc	r0
   0293 86 83               778 	mov	dph,@r0
   0295 08                  779 	inc	r0
   0296 86 F0               780 	mov	b,@r0
   0298 EB                  781 	mov	a,r3
   0299 12 06 17            782 	lcall	__gptrput
   029C 8F 82               783 	mov	dpl,r7
   029E 8D 83               784 	mov	dph,r5
   02A0 8A F0               785 	mov	b,r2
   02A2 E5 08               786 	mov	a,_bp
   02A4 24 07               787 	add	a,#0x07
   02A6 F8                  788 	mov	r0,a
   02A7 E6                  789 	mov	a,@r0
   02A8 12 06 17            790 	lcall	__gptrput
   02AB A8 08               791 	mov	r0,_bp
   02AD 08                  792 	inc	r0
   02AE 06                  793 	inc	@r0
   02AF B6 00 02            794 	cjne	@r0,#0x00,00128$
   02B2 08                  795 	inc	r0
   02B3 06                  796 	inc	@r0
   02B4                     797 00128$:
   02B4 D0 02               798 	pop	ar2
   02B6 02 01 E8            799 	ljmp	00108$
   02B9                     800 00111$:
                            801 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:73: p[len]=0;
   02B9 E5 08               802 	mov	a,_bp
   02BB 24 04               803 	add	a,#0x04
   02BD F8                  804 	mov	r0,a
   02BE EE                  805 	mov	a,r6
   02BF 26                  806 	add	a,@r0
   02C0 FE                  807 	mov	r6,a
   02C1 E4                  808 	clr	a
   02C2 08                  809 	inc	r0
   02C3 36                  810 	addc	a,@r0
   02C4 FA                  811 	mov	r2,a
   02C5 08                  812 	inc	r0
   02C6 86 03               813 	mov	ar3,@r0
   02C8 8E 82               814 	mov	dpl,r6
   02CA 8A 83               815 	mov	dph,r2
   02CC 8B F0               816 	mov	b,r3
   02CE E4                  817 	clr	a
   02CF 12 06 17            818 	lcall	__gptrput
   02D2 85 08 81            819 	mov	sp,_bp
   02D5 D0 08               820 	pop	_bp
   02D7 22                  821 	ret
                            822 ;------------------------------------------------------------
                            823 ;Allocation info for local variables in function 'uart_s2i'
                            824 ;------------------------------------------------------------
                            825 ;s                         Allocated to registers r2 r3 r4 
                            826 ;i                         Allocated to registers r5 r6 
                            827 ;sign                      Allocated to stack - offset 1
                            828 ;sloc0                     Allocated to stack - offset 7
                            829 ;sloc1                     Allocated to stack - offset 2
                            830 ;------------------------------------------------------------
                            831 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:76: int uart_s2i(char *s)	// Convert String to Integer
                            832 ;	-----------------------------------------
                            833 ;	 function uart_s2i
                            834 ;	-----------------------------------------
   02D8                     835 _uart_s2i:
   02D8 C0 08               836 	push	_bp
   02DA E5 81               837 	mov	a,sp
   02DC F5 08               838 	mov	_bp,a
   02DE 24 04               839 	add	a,#0x04
   02E0 F5 81               840 	mov	sp,a
   02E2 AA 82               841 	mov	r2,dpl
   02E4 AB 83               842 	mov	r3,dph
   02E6 AC F0               843 	mov	r4,b
                            844 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:78: int i=0;char sign='+';
   02E8 7D 00               845 	mov	r5,#0x00
   02EA 7E 00               846 	mov	r6,#0x00
   02EC A8 08               847 	mov	r0,_bp
   02EE 08                  848 	inc	r0
   02EF 76 2B               849 	mov	@r0,#0x2B
                            850 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:79: if(*s=='-'){sign='-';s++;}
   02F1 8A 82               851 	mov	dpl,r2
   02F3 8B 83               852 	mov	dph,r3
   02F5 8C F0               853 	mov	b,r4
   02F7 12 06 52            854 	lcall	__gptrget
   02FA FF                  855 	mov	r7,a
   02FB BF 2D 0A            856 	cjne	r7,#0x2D,00112$
   02FE A8 08               857 	mov	r0,_bp
   0300 08                  858 	inc	r0
   0301 76 2D               859 	mov	@r0,#0x2D
   0303 0A                  860 	inc	r2
   0304 BA 00 01            861 	cjne	r2,#0x00,00117$
   0307 0B                  862 	inc	r3
   0308                     863 00117$:
                            864 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:80: while(*s!=0){i=i*10+(*s-'0');s++;}
   0308                     865 00112$:
   0308 A8 08               866 	mov	r0,_bp
   030A 08                  867 	inc	r0
   030B 08                  868 	inc	r0
   030C A6 02               869 	mov	@r0,ar2
   030E 08                  870 	inc	r0
   030F A6 03               871 	mov	@r0,ar3
   0311 08                  872 	inc	r0
   0312 A6 04               873 	mov	@r0,ar4
   0314                     874 00103$:
   0314 A8 08               875 	mov	r0,_bp
   0316 08                  876 	inc	r0
   0317 08                  877 	inc	r0
   0318 86 82               878 	mov	dpl,@r0
   031A 08                  879 	inc	r0
   031B 86 83               880 	mov	dph,@r0
   031D 08                  881 	inc	r0
   031E 86 F0               882 	mov	b,@r0
   0320 12 06 52            883 	lcall	__gptrget
   0323 FB                  884 	mov	r3,a
   0324 60 39               885 	jz	00105$
   0326 C0 03               886 	push	ar3
   0328 C0 05               887 	push	ar5
   032A C0 06               888 	push	ar6
   032C 90 00 0A            889 	mov	dptr,#0x000A
   032F 12 06 30            890 	lcall	__mulint
   0332 AF 82               891 	mov	r7,dpl
   0334 AA 83               892 	mov	r2,dph
   0336 15 81               893 	dec	sp
   0338 15 81               894 	dec	sp
   033A D0 03               895 	pop	ar3
   033C EB                  896 	mov	a,r3
   033D 33                  897 	rlc	a
   033E 95 E0               898 	subb	a,acc
   0340 FC                  899 	mov	r4,a
   0341 EB                  900 	mov	a,r3
   0342 24 D0               901 	add	a,#0xd0
   0344 FB                  902 	mov	r3,a
   0345 EC                  903 	mov	a,r4
   0346 34 FF               904 	addc	a,#0xff
   0348 FC                  905 	mov	r4,a
   0349 EB                  906 	mov	a,r3
   034A 2F                  907 	add	a,r7
   034B FF                  908 	mov	r7,a
   034C EC                  909 	mov	a,r4
   034D 3A                  910 	addc	a,r2
   034E FA                  911 	mov	r2,a
   034F 8F 05               912 	mov	ar5,r7
   0351 8A 06               913 	mov	ar6,r2
   0353 A8 08               914 	mov	r0,_bp
   0355 08                  915 	inc	r0
   0356 08                  916 	inc	r0
   0357 06                  917 	inc	@r0
   0358 B6 00 02            918 	cjne	@r0,#0x00,00119$
   035B 08                  919 	inc	r0
   035C 06                  920 	inc	@r0
   035D                     921 00119$:
   035D 80 B5               922 	sjmp	00103$
   035F                     923 00105$:
                            924 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:81: if(sign=='-')i=-i;
   035F A8 08               925 	mov	r0,_bp
   0361 08                  926 	inc	r0
   0362 B6 2D 07            927 	cjne	@r0,#0x2D,00107$
   0365 C3                  928 	clr	c
   0366 E4                  929 	clr	a
   0367 9D                  930 	subb	a,r5
   0368 FD                  931 	mov	r5,a
   0369 E4                  932 	clr	a
   036A 9E                  933 	subb	a,r6
   036B FE                  934 	mov	r6,a
   036C                     935 00107$:
                            936 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:82: return i;
   036C 8D 82               937 	mov	dpl,r5
   036E 8E 83               938 	mov	dph,r6
   0370 85 08 81            939 	mov	sp,_bp
   0373 D0 08               940 	pop	_bp
   0375 22                  941 	ret
                            942 ;------------------------------------------------------------
                            943 ;Allocation info for local variables in function 'uart_put_integer'
                            944 ;------------------------------------------------------------
                            945 ;i                         Allocated to registers r2 r3 
                            946 ;s                         Allocated to stack - offset 1
                            947 ;------------------------------------------------------------
                            948 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:85: void uart_put_integer(int i)	// Put Integer to UART, Require uart_i2s(),uart_put_string()
                            949 ;	-----------------------------------------
                            950 ;	 function uart_put_integer
                            951 ;	-----------------------------------------
   0376                     952 _uart_put_integer:
   0376 C0 08               953 	push	_bp
   0378 E5 81               954 	mov	a,sp
   037A F5 08               955 	mov	_bp,a
   037C 24 07               956 	add	a,#0x07
   037E F5 81               957 	mov	sp,a
   0380 AA 82               958 	mov	r2,dpl
   0382 AB 83               959 	mov	r3,dph
                            960 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:88: uart_i2s(i,s);uart_put_string(s);
   0384 AC 08               961 	mov	r4,_bp
   0386 0C                  962 	inc	r4
   0387 8C 05               963 	mov	ar5,r4
   0389 7E 00               964 	mov	r6,#0x00
   038B 7F 40               965 	mov	r7,#0x40
   038D C0 04               966 	push	ar4
   038F C0 05               967 	push	ar5
   0391 C0 06               968 	push	ar6
   0393 C0 07               969 	push	ar7
   0395 8A 82               970 	mov	dpl,r2
   0397 8B 83               971 	mov	dph,r3
   0399 12 01 00            972 	lcall	_uart_i2s
   039C 15 81               973 	dec	sp
   039E 15 81               974 	dec	sp
   03A0 15 81               975 	dec	sp
   03A2 D0 04               976 	pop	ar4
   03A4 7A 00               977 	mov	r2,#0x00
   03A6 7B 40               978 	mov	r3,#0x40
   03A8 8C 82               979 	mov	dpl,r4
   03AA 8A 83               980 	mov	dph,r2
   03AC 8B F0               981 	mov	b,r3
   03AE 12 00 9E            982 	lcall	_uart_put_string
   03B1 85 08 81            983 	mov	sp,_bp
   03B4 D0 08               984 	pop	_bp
   03B6 22                  985 	ret
                            986 ;------------------------------------------------------------
                            987 ;Allocation info for local variables in function 'uart_get_integer'
                            988 ;------------------------------------------------------------
                            989 ;s                         Allocated to stack - offset 1
                            990 ;------------------------------------------------------------
                            991 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:91: int uart_get_integer()		// Get Integer from UART, Require uart_get_string(),uart_s2i()
                            992 ;	-----------------------------------------
                            993 ;	 function uart_get_integer
                            994 ;	-----------------------------------------
   03B7                     995 _uart_get_integer:
   03B7 C0 08               996 	push	_bp
   03B9 E5 81               997 	mov	a,sp
   03BB F5 08               998 	mov	_bp,a
   03BD 24 07               999 	add	a,#0x07
   03BF F5 81              1000 	mov	sp,a
                           1001 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:94: uart_get_string(s);
   03C1 AA 08              1002 	mov	r2,_bp
   03C3 0A                 1003 	inc	r2
   03C4 8A 03              1004 	mov	ar3,r2
   03C6 7C 00              1005 	mov	r4,#0x00
   03C8 7D 40              1006 	mov	r5,#0x40
   03CA 8B 82              1007 	mov	dpl,r3
   03CC 8C 83              1008 	mov	dph,r4
   03CE 8D F0              1009 	mov	b,r5
   03D0 C0 02              1010 	push	ar2
   03D2 12 00 C9           1011 	lcall	_uart_get_string
   03D5 D0 02              1012 	pop	ar2
                           1013 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:95: return uart_s2i(s);
   03D7 7B 00              1014 	mov	r3,#0x00
   03D9 7C 40              1015 	mov	r4,#0x40
   03DB 8A 82              1016 	mov	dpl,r2
   03DD 8B 83              1017 	mov	dph,r3
   03DF 8C F0              1018 	mov	b,r4
   03E1 12 02 D8           1019 	lcall	_uart_s2i
   03E4 85 08 81           1020 	mov	sp,_bp
   03E7 D0 08              1021 	pop	_bp
   03E9 22                 1022 	ret
                           1023 ;------------------------------------------------------------
                           1024 ;Allocation info for local variables in function 'uart_put_byte'
                           1025 ;------------------------------------------------------------
                           1026 ;byte_data                 Allocated to registers r2 
                           1027 ;------------------------------------------------------------
                           1028 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:98: void uart_put_byte(unsigned char byte_data)
                           1029 ;	-----------------------------------------
                           1030 ;	 function uart_put_byte
                           1031 ;	-----------------------------------------
   03EA                    1032 _uart_put_byte:
                           1033 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:100: uart_put_char(uart_ASCII[byte_data/16]);uart_put_char(uart_ASCII[byte_data%16]);
   03EA E5 82              1034 	mov	a,dpl
   03EC FA                 1035 	mov	r2,a
   03ED C4                 1036 	swap	a
   03EE 54 0F              1037 	anl	a,#0x0f
   03F0 90 07 62           1038 	mov	dptr,#_uart_ASCII
   03F3 93                 1039 	movc	a,@a+dptr
   03F4 F5 82              1040 	mov	dpl,a
   03F6 C0 02              1041 	push	ar2
   03F8 12 00 7D           1042 	lcall	_uart_put_char
   03FB D0 02              1043 	pop	ar2
   03FD 74 0F              1044 	mov	a,#0x0F
   03FF 5A                 1045 	anl	a,r2
   0400 90 07 62           1046 	mov	dptr,#_uart_ASCII
   0403 93                 1047 	movc	a,@a+dptr
   0404 F5 82              1048 	mov	dpl,a
   0406 02 00 7D           1049 	ljmp	_uart_put_char
                           1050 ;------------------------------------------------------------
                           1051 ;Allocation info for local variables in function 'uart_put_word'
                           1052 ;------------------------------------------------------------
                           1053 ;word_data                 Allocated to registers r2 r3 
                           1054 ;------------------------------------------------------------
                           1055 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:103: void uart_put_word(unsigned int word_data)
                           1056 ;	-----------------------------------------
                           1057 ;	 function uart_put_word
                           1058 ;	-----------------------------------------
   0409                    1059 _uart_put_word:
   0409 AA 82              1060 	mov	r2,dpl
   040B AB 83              1061 	mov	r3,dph
                           1062 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:105: uart_put_byte(word_data/256);uart_put_byte(word_data%256);
   040D 8B 04              1063 	mov	ar4,r3
   040F 8C 82              1064 	mov	dpl,r4
   0411 C0 02              1065 	push	ar2
   0413 C0 03              1066 	push	ar3
   0415 12 03 EA           1067 	lcall	_uart_put_byte
   0418 D0 03              1068 	pop	ar3
   041A D0 02              1069 	pop	ar2
   041C 8A 82              1070 	mov	dpl,r2
   041E 02 03 EA           1071 	ljmp	_uart_put_byte
                           1072 ;------------------------------------------------------------
                           1073 ;Allocation info for local variables in function 'uart_get_nibble'
                           1074 ;------------------------------------------------------------
                           1075 ;c                         Allocated to registers r2 
                           1076 ;------------------------------------------------------------
                           1077 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:108: char uart_get_nibble()
                           1078 ;	-----------------------------------------
                           1079 ;	 function uart_get_nibble
                           1080 ;	-----------------------------------------
   0421                    1081 _uart_get_nibble:
                           1082 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:111: c=uart_get_char_echo();
   0421 12 00 8F           1083 	lcall	_uart_get_char_echo
   0424 AA 82              1084 	mov	r2,dpl
                           1085 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:112: if('0'<=c && c<='9')return(c-'0');
   0426 C3                 1086 	clr	c
   0427 EA                 1087 	mov	a,r2
   0428 64 80              1088 	xrl	a,#0x80
   042A 94 B0              1089 	subb	a,#0xb0
   042C 40 11              1090 	jc	00102$
   042E 74 B9              1091 	mov	a,#(0x39 ^ 0x80)
   0430 8A F0              1092 	mov	b,r2
   0432 63 F0 80           1093 	xrl	b,#0x80
   0435 95 F0              1094 	subb	a,b
   0437 40 06              1095 	jc	00102$
   0439 EA                 1096 	mov	a,r2
   043A 24 D0              1097 	add	a,#0xd0
   043C F5 82              1098 	mov	dpl,a
   043E 22                 1099 	ret
   043F                    1100 00102$:
                           1101 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:113: if('A'<=c && c<='F')return(10+c-'A');
   043F C3                 1102 	clr	c
   0440 EA                 1103 	mov	a,r2
   0441 64 80              1104 	xrl	a,#0x80
   0443 94 C1              1105 	subb	a,#0xc1
   0445 40 11              1106 	jc	00105$
   0447 74 C6              1107 	mov	a,#(0x46 ^ 0x80)
   0449 8A F0              1108 	mov	b,r2
   044B 63 F0 80           1109 	xrl	b,#0x80
   044E 95 F0              1110 	subb	a,b
   0450 40 06              1111 	jc	00105$
   0452 74 C9              1112 	mov	a,#0xC9
   0454 2A                 1113 	add	a,r2
   0455 F5 82              1114 	mov	dpl,a
   0457 22                 1115 	ret
   0458                    1116 00105$:
                           1117 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:114: if('a'<=c && c<='f')return(10+c-'a');
   0458 C3                 1118 	clr	c
   0459 EA                 1119 	mov	a,r2
   045A 64 80              1120 	xrl	a,#0x80
   045C 94 E1              1121 	subb	a,#0xe1
   045E 40 11              1122 	jc	00108$
   0460 74 E6              1123 	mov	a,#(0x66 ^ 0x80)
   0462 8A F0              1124 	mov	b,r2
   0464 63 F0 80           1125 	xrl	b,#0x80
   0467 95 F0              1126 	subb	a,b
   0469 40 06              1127 	jc	00108$
   046B 74 A9              1128 	mov	a,#0xA9
   046D 2A                 1129 	add	a,r2
   046E F5 82              1130 	mov	dpl,a
                           1131 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:115: return(0);
   0470 22                 1132 	ret
   0471                    1133 00108$:
   0471 75 82 00           1134 	mov	dpl,#0x00
   0474 22                 1135 	ret
                           1136 ;------------------------------------------------------------
                           1137 ;Allocation info for local variables in function 'uart_get_byte'
                           1138 ;------------------------------------------------------------
                           1139 ;------------------------------------------------------------
                           1140 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:118: unsigned char uart_get_byte()
                           1141 ;	-----------------------------------------
                           1142 ;	 function uart_get_byte
                           1143 ;	-----------------------------------------
   0475                    1144 _uart_get_byte:
                           1145 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:120: return(16*uart_get_nibble()+uart_get_nibble());
   0475 12 04 21           1146 	lcall	_uart_get_nibble
   0478 E5 82              1147 	mov	a,dpl
   047A C4                 1148 	swap	a
   047B 54 F0              1149 	anl	a,#0xf0
   047D FA                 1150 	mov	r2,a
   047E C0 02              1151 	push	ar2
   0480 12 04 21           1152 	lcall	_uart_get_nibble
   0483 AB 82              1153 	mov	r3,dpl
   0485 D0 02              1154 	pop	ar2
   0487 EB                 1155 	mov	a,r3
   0488 2A                 1156 	add	a,r2
   0489 F5 82              1157 	mov	dpl,a
   048B 22                 1158 	ret
                           1159 ;------------------------------------------------------------
                           1160 ;Allocation info for local variables in function 'uart_get_word'
                           1161 ;------------------------------------------------------------
                           1162 ;------------------------------------------------------------
                           1163 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:123: unsigned int uart_get_word()
                           1164 ;	-----------------------------------------
                           1165 ;	 function uart_get_word
                           1166 ;	-----------------------------------------
   048C                    1167 _uart_get_word:
                           1168 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:125: return(256*uart_get_byte()+uart_get_byte());
   048C 12 04 75           1169 	lcall	_uart_get_byte
   048F AB 82              1170 	mov	r3,dpl
   0491 7A 00              1171 	mov	r2,#0x00
   0493 C0 02              1172 	push	ar2
   0495 C0 03              1173 	push	ar3
   0497 12 04 75           1174 	lcall	_uart_get_byte
   049A AC 82              1175 	mov	r4,dpl
   049C D0 03              1176 	pop	ar3
   049E D0 02              1177 	pop	ar2
   04A0 7D 00              1178 	mov	r5,#0x00
   04A2 EC                 1179 	mov	a,r4
   04A3 2A                 1180 	add	a,r2
   04A4 F5 82              1181 	mov	dpl,a
   04A6 ED                 1182 	mov	a,r5
   04A7 3B                 1183 	addc	a,r3
   04A8 F5 83              1184 	mov	dph,a
   04AA 22                 1185 	ret
                           1186 ;------------------------------------------------------------
                           1187 ;Allocation info for local variables in function 'keypad_get_key'
                           1188 ;------------------------------------------------------------
                           1189 ;key                       Allocated to registers r2 
                           1190 ;------------------------------------------------------------
                           1191 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:17: unsigned char keypad_get_key(void)
                           1192 ;	-----------------------------------------
                           1193 ;	 function keypad_get_key
                           1194 ;	-----------------------------------------
   04AB                    1195 _keypad_get_key:
                           1196 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:20: KEYPAD_DO|=0x1F;
   04AB 43 90 1F           1197 	orl	_P1,#0x1F
                           1198 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:21: while(KEYPAD_DA==0);
   04AE                    1199 00101$:
   04AE 30 94 FD           1200 	jnb	_P1_4,00101$
                           1201 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:22: key=KEYPAD_DO;key&=0x0F;
   04B1 AA 90              1202 	mov	r2,_P1
   04B3 53 02 0F           1203 	anl	ar2,#0x0F
                           1204 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:23: while(KEYPAD_DA==1);
   04B6                    1205 00104$:
   04B6 20 94 FD           1206 	jb	_P1_4,00104$
                           1207 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:24: return key;
   04B9 8A 82              1208 	mov	dpl,r2
   04BB 22                 1209 	ret
                           1210 ;------------------------------------------------------------
                           1211 ;Allocation info for local variables in function 'keypad_get_key_echo'
                           1212 ;------------------------------------------------------------
                           1213 ;key                       Allocated to registers r2 
                           1214 ;------------------------------------------------------------
                           1215 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:27: unsigned char keypad_get_key_echo(void)
                           1216 ;	-----------------------------------------
                           1217 ;	 function keypad_get_key_echo
                           1218 ;	-----------------------------------------
   04BC                    1219 _keypad_get_key_echo:
                           1220 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:30: KEYPAD_DO|=0x1F;
   04BC 43 90 1F           1221 	orl	_P1,#0x1F
                           1222 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:31: while(KEYPAD_DA==0);
   04BF                    1223 00101$:
   04BF 30 94 FD           1224 	jnb	_P1_4,00101$
                           1225 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:32: key=KEYPAD_DO;key&=0x0F;
                           1226 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:33: uart_put_char(uart_ASCII[key]);
   04C2 E5 90              1227 	mov	a,_P1
   04C4 54 0F              1228 	anl	a,#0x0F
   04C6 FA                 1229 	mov	r2,a
   04C7 90 07 62           1230 	mov	dptr,#_uart_ASCII
   04CA 93                 1231 	movc	a,@a+dptr
   04CB F5 82              1232 	mov	dpl,a
   04CD C0 02              1233 	push	ar2
   04CF 12 00 7D           1234 	lcall	_uart_put_char
                           1235 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:34: uart_put_string("\r\n");
   04D2 90 07 73           1236 	mov	dptr,#__str_0
   04D5 75 F0 80           1237 	mov	b,#0x80
   04D8 12 00 9E           1238 	lcall	_uart_put_string
   04DB D0 02              1239 	pop	ar2
                           1240 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:36: while(KEYPAD_DA==1);
   04DD                    1241 00104$:
   04DD 20 94 FD           1242 	jb	_P1_4,00104$
                           1243 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:37: return key;
   04E0 8A 82              1244 	mov	dpl,r2
   04E2 22                 1245 	ret
                           1246 ;------------------------------------------------------------
                           1247 ;Allocation info for local variables in function 'keypad_get_byte'
                           1248 ;------------------------------------------------------------
                           1249 ;------------------------------------------------------------
                           1250 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:40: unsigned char keypad_get_byte(void)
                           1251 ;	-----------------------------------------
                           1252 ;	 function keypad_get_byte
                           1253 ;	-----------------------------------------
   04E3                    1254 _keypad_get_byte:
                           1255 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:42: return(keypad_get_key_echo()*16+keypad_get_key_echo());
   04E3 12 04 BC           1256 	lcall	_keypad_get_key_echo
   04E6 E5 82              1257 	mov	a,dpl
   04E8 C4                 1258 	swap	a
   04E9 54 F0              1259 	anl	a,#0xf0
   04EB FA                 1260 	mov	r2,a
   04EC C0 02              1261 	push	ar2
   04EE 12 04 BC           1262 	lcall	_keypad_get_key_echo
   04F1 AB 82              1263 	mov	r3,dpl
   04F3 D0 02              1264 	pop	ar2
   04F5 EB                 1265 	mov	a,r3
   04F6 2A                 1266 	add	a,r2
   04F7 F5 82              1267 	mov	dpl,a
   04F9 22                 1268 	ret
                           1269 ;------------------------------------------------------------
                           1270 ;Allocation info for local variables in function 'keypad_get_word'
                           1271 ;------------------------------------------------------------
                           1272 ;------------------------------------------------------------
                           1273 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:45: unsigned int keypad_get_word(void)
                           1274 ;	-----------------------------------------
                           1275 ;	 function keypad_get_word
                           1276 ;	-----------------------------------------
   04FA                    1277 _keypad_get_word:
                           1278 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:47: return(keypad_get_byte()*256+keypad_get_byte());
   04FA 12 04 E3           1279 	lcall	_keypad_get_byte
   04FD AB 82              1280 	mov	r3,dpl
   04FF 7A 00              1281 	mov	r2,#0x00
   0501 C0 02              1282 	push	ar2
   0503 C0 03              1283 	push	ar3
   0505 12 04 E3           1284 	lcall	_keypad_get_byte
   0508 AC 82              1285 	mov	r4,dpl
   050A D0 03              1286 	pop	ar3
   050C D0 02              1287 	pop	ar2
   050E 7D 00              1288 	mov	r5,#0x00
   0510 EC                 1289 	mov	a,r4
   0511 2A                 1290 	add	a,r2
   0512 F5 82              1291 	mov	dpl,a
   0514 ED                 1292 	mov	a,r5
   0515 3B                 1293 	addc	a,r3
   0516 F5 83              1294 	mov	dph,a
   0518 22                 1295 	ret
                           1296 ;------------------------------------------------------------
                           1297 ;Allocation info for local variables in function 'keypad_check_key'
                           1298 ;------------------------------------------------------------
                           1299 ;key                       Allocated to registers r2 
                           1300 ;------------------------------------------------------------
                           1301 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:50: unsigned char keypad_check_key(void)
                           1302 ;	-----------------------------------------
                           1303 ;	 function keypad_check_key
                           1304 ;	-----------------------------------------
   0519                    1305 _keypad_check_key:
                           1306 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:53: KEYPAD_DO|=0x1F;
   0519 43 90 1F           1307 	orl	_P1,#0x1F
                           1308 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:54: if(KEYPAD_DA==1)
   051C 30 94 0B           1309 	jnb	_P1_4,00105$
                           1310 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:55: {key=KEYPAD_DO;key&=0x0F;while(KEYPAD_DA==1);return key;}
   051F AA 90              1311 	mov	r2,_P1
   0521 53 02 0F           1312 	anl	ar2,#0x0F
   0524                    1313 00101$:
   0524 20 94 FD           1314 	jb	_P1_4,00101$
   0527 8A 82              1315 	mov	dpl,r2
                           1316 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:57: return KEYPAD_NULL;
   0529 22                 1317 	ret
   052A                    1318 00105$:
   052A 75 82 10           1319 	mov	dpl,#0x10
   052D 22                 1320 	ret
                           1321 ;------------------------------------------------------------
                           1322 ;Allocation info for local variables in function 'keypad_get_integer'
                           1323 ;------------------------------------------------------------
                           1324 ;value                     Allocated to registers r2 r3 
                           1325 ;key                       Allocated to registers r5 
                           1326 ;------------------------------------------------------------
                           1327 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:60: unsigned int keypad_get_integer(void)
                           1328 ;	-----------------------------------------
                           1329 ;	 function keypad_get_integer
                           1330 ;	-----------------------------------------
   052E                    1331 _keypad_get_integer:
                           1332 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:62: unsigned int value=0;
   052E 7A 00              1333 	mov	r2,#0x00
   0530 7B 00              1334 	mov	r3,#0x00
                           1335 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:64: while((key=keypad_get_key())<0x0A)
   0532                    1336 00101$:
   0532 C0 02              1337 	push	ar2
   0534 C0 03              1338 	push	ar3
   0536 12 04 AB           1339 	lcall	_keypad_get_key
   0539 AC 82              1340 	mov	r4,dpl
   053B D0 03              1341 	pop	ar3
   053D D0 02              1342 	pop	ar2
   053F 8C 05              1343 	mov	ar5,r4
   0541 BC 0A 00           1344 	cjne	r4,#0x0A,00108$
   0544                    1345 00108$:
   0544 50 3A              1346 	jnc	00103$
                           1347 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:66: uart_put_char(uart_ASCII[key]);
   0546 ED                 1348 	mov	a,r5
   0547 90 07 62           1349 	mov	dptr,#_uart_ASCII
   054A 93                 1350 	movc	a,@a+dptr
   054B F5 82              1351 	mov	dpl,a
   054D C0 02              1352 	push	ar2
   054F C0 03              1353 	push	ar3
   0551 C0 05              1354 	push	ar5
   0553 12 00 7D           1355 	lcall	_uart_put_char
   0556 D0 05              1356 	pop	ar5
   0558 D0 03              1357 	pop	ar3
   055A D0 02              1358 	pop	ar2
                           1359 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:68: value=value*10+key;
   055C C0 05              1360 	push	ar5
   055E C0 02              1361 	push	ar2
   0560 C0 03              1362 	push	ar3
   0562 90 00 0A           1363 	mov	dptr,#0x000A
   0565 12 06 30           1364 	lcall	__mulint
   0568 AC 82              1365 	mov	r4,dpl
   056A AE 83              1366 	mov	r6,dph
   056C 15 81              1367 	dec	sp
   056E 15 81              1368 	dec	sp
   0570 D0 05              1369 	pop	ar5
   0572 7F 00              1370 	mov	r7,#0x00
   0574 ED                 1371 	mov	a,r5
   0575 2C                 1372 	add	a,r4
   0576 FC                 1373 	mov	r4,a
   0577 EF                 1374 	mov	a,r7
   0578 3E                 1375 	addc	a,r6
   0579 FE                 1376 	mov	r6,a
   057A 8C 02              1377 	mov	ar2,r4
   057C 8E 03              1378 	mov	ar3,r6
   057E 80 B2              1379 	sjmp	00101$
   0580                    1380 00103$:
                           1381 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:70: return value;
   0580 8A 82              1382 	mov	dpl,r2
   0582 8B 83              1383 	mov	dph,r3
   0584 22                 1384 	ret
                           1385 ;------------------------------------------------------------
                           1386 ;Allocation info for local variables in function 'main'
                           1387 ;------------------------------------------------------------
                           1388 ;i                         Allocated to registers r2 r3 
                           1389 ;j                         Allocated to registers r4 r5 
                           1390 ;------------------------------------------------------------
                           1391 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:72: void main(){
                           1392 ;	-----------------------------------------
                           1393 ;	 function main
                           1394 ;	-----------------------------------------
   0585                    1395 _main:
                           1396 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:73: uart_initialize();
   0585 12 00 64           1397 	lcall	_uart_initialize
                           1398 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:74: uart_put_string("Test:\r\n");
   0588 90 07 76           1399 	mov	dptr,#__str_1
   058B 75 F0 80           1400 	mov	b,#0x80
   058E 12 00 9E           1401 	lcall	_uart_put_string
                           1402 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:75: while(1){
   0591                    1403 00102$:
                           1404 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:77: uart_put_string("First:\r\n");
   0591 90 07 7E           1405 	mov	dptr,#__str_2
   0594 75 F0 80           1406 	mov	b,#0x80
   0597 12 00 9E           1407 	lcall	_uart_put_string
                           1408 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:78: i = keypad_get_key_echo();
   059A 12 04 BC           1409 	lcall	_keypad_get_key_echo
   059D AA 82              1410 	mov	r2,dpl
   059F 7B 00              1411 	mov	r3,#0x00
                           1412 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:79: uart_put_string("Second:\r\n");
   05A1 90 07 87           1413 	mov	dptr,#__str_3
   05A4 75 F0 80           1414 	mov	b,#0x80
   05A7 C0 02              1415 	push	ar2
   05A9 C0 03              1416 	push	ar3
   05AB 12 00 9E           1417 	lcall	_uart_put_string
                           1418 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:80: j = keypad_get_key_echo();
   05AE 12 04 BC           1419 	lcall	_keypad_get_key_echo
   05B1 AC 82              1420 	mov	r4,dpl
   05B3 D0 03              1421 	pop	ar3
   05B5 D0 02              1422 	pop	ar2
   05B7 7D 00              1423 	mov	r5,#0x00
                           1424 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:81: uart_put_integer(i);uart_put_string(" * ");uart_put_integer(j);uart_put_string(" = ");uart_put_integer(i*j);uart_put_string("\r\n");
   05B9 8A 82              1425 	mov	dpl,r2
   05BB 8B 83              1426 	mov	dph,r3
   05BD C0 02              1427 	push	ar2
   05BF C0 03              1428 	push	ar3
   05C1 C0 04              1429 	push	ar4
   05C3 C0 05              1430 	push	ar5
   05C5 12 03 76           1431 	lcall	_uart_put_integer
   05C8 90 07 91           1432 	mov	dptr,#__str_4
   05CB 75 F0 80           1433 	mov	b,#0x80
   05CE 12 00 9E           1434 	lcall	_uart_put_string
   05D1 D0 05              1435 	pop	ar5
   05D3 D0 04              1436 	pop	ar4
   05D5 8C 82              1437 	mov	dpl,r4
   05D7 8D 83              1438 	mov	dph,r5
   05D9 C0 04              1439 	push	ar4
   05DB C0 05              1440 	push	ar5
   05DD 12 03 76           1441 	lcall	_uart_put_integer
   05E0 90 07 95           1442 	mov	dptr,#__str_5
   05E3 75 F0 80           1443 	mov	b,#0x80
   05E6 12 00 9E           1444 	lcall	_uart_put_string
   05E9 D0 05              1445 	pop	ar5
   05EB D0 04              1446 	pop	ar4
   05ED D0 03              1447 	pop	ar3
   05EF D0 02              1448 	pop	ar2
   05F1 C0 04              1449 	push	ar4
   05F3 C0 05              1450 	push	ar5
   05F5 8A 82              1451 	mov	dpl,r2
   05F7 8B 83              1452 	mov	dph,r3
   05F9 12 06 30           1453 	lcall	__mulint
   05FC AA 82              1454 	mov	r2,dpl
   05FE AB 83              1455 	mov	r3,dph
   0600 15 81              1456 	dec	sp
   0602 15 81              1457 	dec	sp
   0604 8A 82              1458 	mov	dpl,r2
   0606 8B 83              1459 	mov	dph,r3
   0608 12 03 76           1460 	lcall	_uart_put_integer
   060B 90 07 73           1461 	mov	dptr,#__str_0
   060E 75 F0 80           1462 	mov	b,#0x80
   0611 12 00 9E           1463 	lcall	_uart_put_string
   0614 02 05 91           1464 	ljmp	00102$
                           1465 	.area CSEG    (CODE)
                           1466 	.area CONST   (CODE)
   0762                    1467 _uart_ASCII:
   0762 30 31 32 33 34 35  1468 	.ascii "0123456789ABCDEF"
        36 37 38 39 41 42
        43 44 45 46
   0772 00                 1469 	.db 0x00
   0773                    1470 __str_0:
   0773 0D                 1471 	.db 0x0D
   0774 0A                 1472 	.db 0x0A
   0775 00                 1473 	.db 0x00
   0776                    1474 __str_1:
   0776 54 65 73 74 3A     1475 	.ascii "Test:"
   077B 0D                 1476 	.db 0x0D
   077C 0A                 1477 	.db 0x0A
   077D 00                 1478 	.db 0x00
   077E                    1479 __str_2:
   077E 46 69 72 73 74 3A  1480 	.ascii "First:"
   0784 0D                 1481 	.db 0x0D
   0785 0A                 1482 	.db 0x0A
   0786 00                 1483 	.db 0x00
   0787                    1484 __str_3:
   0787 53 65 63 6F 6E 64  1485 	.ascii "Second:"
        3A
   078E 0D                 1486 	.db 0x0D
   078F 0A                 1487 	.db 0x0A
   0790 00                 1488 	.db 0x00
   0791                    1489 __str_4:
   0791 20 2A 20           1490 	.ascii " * "
   0794 00                 1491 	.db 0x00
   0795                    1492 __str_5:
   0795 20 3D 20           1493 	.ascii " = "
   0798 00                 1494 	.db 0x00
                           1495 	.area XINIT   (CODE)
                           1496 	.area CABS    (ABS,CODE)
