                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6083 (Dec 17 2010) (MINGW32)
                              4 ; This file was generated Mon Nov 21 10:47:53 2022
                              5 ;--------------------------------------------------------
                              6 	.module hw11
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _uart_ASCII
                             13 	.globl _main
                             14 	.globl _CY
                             15 	.globl _AC
                             16 	.globl _F0
                             17 	.globl _RS1
                             18 	.globl _RS0
                             19 	.globl _OV
                             20 	.globl _F1
                             21 	.globl _P
                             22 	.globl _PS
                             23 	.globl _PT1
                             24 	.globl _PX1
                             25 	.globl _PT0
                             26 	.globl _PX0
                             27 	.globl _RD
                             28 	.globl _WR
                             29 	.globl _T1
                             30 	.globl _T0
                             31 	.globl _INT1
                             32 	.globl _INT0
                             33 	.globl _TXD
                             34 	.globl _RXD
                             35 	.globl _P3_7
                             36 	.globl _P3_6
                             37 	.globl _P3_5
                             38 	.globl _P3_4
                             39 	.globl _P3_3
                             40 	.globl _P3_2
                             41 	.globl _P3_1
                             42 	.globl _P3_0
                             43 	.globl _EA
                             44 	.globl _ES
                             45 	.globl _ET1
                             46 	.globl _EX1
                             47 	.globl _ET0
                             48 	.globl _EX0
                             49 	.globl _P2_7
                             50 	.globl _P2_6
                             51 	.globl _P2_5
                             52 	.globl _P2_4
                             53 	.globl _P2_3
                             54 	.globl _P2_2
                             55 	.globl _P2_1
                             56 	.globl _P2_0
                             57 	.globl _SM0
                             58 	.globl _SM1
                             59 	.globl _SM2
                             60 	.globl _REN
                             61 	.globl _TB8
                             62 	.globl _RB8
                             63 	.globl _TI
                             64 	.globl _RI
                             65 	.globl _P1_7
                             66 	.globl _P1_6
                             67 	.globl _P1_5
                             68 	.globl _P1_4
                             69 	.globl _P1_3
                             70 	.globl _P1_2
                             71 	.globl _P1_1
                             72 	.globl _P1_0
                             73 	.globl _TF1
                             74 	.globl _TR1
                             75 	.globl _TF0
                             76 	.globl _TR0
                             77 	.globl _IE1
                             78 	.globl _IT1
                             79 	.globl _IE0
                             80 	.globl _IT0
                             81 	.globl _P0_7
                             82 	.globl _P0_6
                             83 	.globl _P0_5
                             84 	.globl _P0_4
                             85 	.globl _P0_3
                             86 	.globl _P0_2
                             87 	.globl _P0_1
                             88 	.globl _P0_0
                             89 	.globl _B
                             90 	.globl _ACC
                             91 	.globl _PSW
                             92 	.globl _IP
                             93 	.globl _P3
                             94 	.globl _IE
                             95 	.globl _P2
                             96 	.globl _SBUF
                             97 	.globl _SCON
                             98 	.globl _P1
                             99 	.globl _TH1
                            100 	.globl _TH0
                            101 	.globl _TL1
                            102 	.globl _TL0
                            103 	.globl _TMOD
                            104 	.globl _TCON
                            105 	.globl _PCON
                            106 	.globl _DPH
                            107 	.globl _DPL
                            108 	.globl _SP
                            109 	.globl _P0
                            110 	.globl _uart_initialize
                            111 	.globl _uart_put_char
                            112 	.globl _uart_get_char
                            113 	.globl _uart_get_char_echo
                            114 	.globl _uart_put_string
                            115 	.globl _uart_get_string
                            116 	.globl _uart_i2s
                            117 	.globl _uart_s2i
                            118 	.globl _uart_put_integer
                            119 	.globl _uart_get_integer
                            120 	.globl _uart_put_byte
                            121 	.globl _uart_put_word
                            122 	.globl _uart_get_nibble
                            123 	.globl _uart_get_byte
                            124 	.globl _uart_get_word
                            125 	.globl _keypad_get_key
                            126 	.globl _keypad_get_key_echo
                            127 	.globl _keypad_get_byte
                            128 	.globl _keypad_get_word
                            129 	.globl _keypad_check_key
                            130 	.globl _keypad_get_integer
                            131 ;--------------------------------------------------------
                            132 ; special function registers
                            133 ;--------------------------------------------------------
                            134 	.area RSEG    (ABS,DATA)
   0000                     135 	.org 0x0000
                    0080    136 _P0	=	0x0080
                    0081    137 _SP	=	0x0081
                    0082    138 _DPL	=	0x0082
                    0083    139 _DPH	=	0x0083
                    0087    140 _PCON	=	0x0087
                    0088    141 _TCON	=	0x0088
                    0089    142 _TMOD	=	0x0089
                    008A    143 _TL0	=	0x008a
                    008B    144 _TL1	=	0x008b
                    008C    145 _TH0	=	0x008c
                    008D    146 _TH1	=	0x008d
                    0090    147 _P1	=	0x0090
                    0098    148 _SCON	=	0x0098
                    0099    149 _SBUF	=	0x0099
                    00A0    150 _P2	=	0x00a0
                    00A8    151 _IE	=	0x00a8
                    00B0    152 _P3	=	0x00b0
                    00B8    153 _IP	=	0x00b8
                    00D0    154 _PSW	=	0x00d0
                    00E0    155 _ACC	=	0x00e0
                    00F0    156 _B	=	0x00f0
                            157 ;--------------------------------------------------------
                            158 ; special function bits
                            159 ;--------------------------------------------------------
                            160 	.area RSEG    (ABS,DATA)
   0000                     161 	.org 0x0000
                    0080    162 _P0_0	=	0x0080
                    0081    163 _P0_1	=	0x0081
                    0082    164 _P0_2	=	0x0082
                    0083    165 _P0_3	=	0x0083
                    0084    166 _P0_4	=	0x0084
                    0085    167 _P0_5	=	0x0085
                    0086    168 _P0_6	=	0x0086
                    0087    169 _P0_7	=	0x0087
                    0088    170 _IT0	=	0x0088
                    0089    171 _IE0	=	0x0089
                    008A    172 _IT1	=	0x008a
                    008B    173 _IE1	=	0x008b
                    008C    174 _TR0	=	0x008c
                    008D    175 _TF0	=	0x008d
                    008E    176 _TR1	=	0x008e
                    008F    177 _TF1	=	0x008f
                    0090    178 _P1_0	=	0x0090
                    0091    179 _P1_1	=	0x0091
                    0092    180 _P1_2	=	0x0092
                    0093    181 _P1_3	=	0x0093
                    0094    182 _P1_4	=	0x0094
                    0095    183 _P1_5	=	0x0095
                    0096    184 _P1_6	=	0x0096
                    0097    185 _P1_7	=	0x0097
                    0098    186 _RI	=	0x0098
                    0099    187 _TI	=	0x0099
                    009A    188 _RB8	=	0x009a
                    009B    189 _TB8	=	0x009b
                    009C    190 _REN	=	0x009c
                    009D    191 _SM2	=	0x009d
                    009E    192 _SM1	=	0x009e
                    009F    193 _SM0	=	0x009f
                    00A0    194 _P2_0	=	0x00a0
                    00A1    195 _P2_1	=	0x00a1
                    00A2    196 _P2_2	=	0x00a2
                    00A3    197 _P2_3	=	0x00a3
                    00A4    198 _P2_4	=	0x00a4
                    00A5    199 _P2_5	=	0x00a5
                    00A6    200 _P2_6	=	0x00a6
                    00A7    201 _P2_7	=	0x00a7
                    00A8    202 _EX0	=	0x00a8
                    00A9    203 _ET0	=	0x00a9
                    00AA    204 _EX1	=	0x00aa
                    00AB    205 _ET1	=	0x00ab
                    00AC    206 _ES	=	0x00ac
                    00AF    207 _EA	=	0x00af
                    00B0    208 _P3_0	=	0x00b0
                    00B1    209 _P3_1	=	0x00b1
                    00B2    210 _P3_2	=	0x00b2
                    00B3    211 _P3_3	=	0x00b3
                    00B4    212 _P3_4	=	0x00b4
                    00B5    213 _P3_5	=	0x00b5
                    00B6    214 _P3_6	=	0x00b6
                    00B7    215 _P3_7	=	0x00b7
                    00B0    216 _RXD	=	0x00b0
                    00B1    217 _TXD	=	0x00b1
                    00B2    218 _INT0	=	0x00b2
                    00B3    219 _INT1	=	0x00b3
                    00B4    220 _T0	=	0x00b4
                    00B5    221 _T1	=	0x00b5
                    00B6    222 _WR	=	0x00b6
                    00B7    223 _RD	=	0x00b7
                    00B8    224 _PX0	=	0x00b8
                    00B9    225 _PT0	=	0x00b9
                    00BA    226 _PX1	=	0x00ba
                    00BB    227 _PT1	=	0x00bb
                    00BC    228 _PS	=	0x00bc
                    00D0    229 _P	=	0x00d0
                    00D1    230 _F1	=	0x00d1
                    00D2    231 _OV	=	0x00d2
                    00D3    232 _RS0	=	0x00d3
                    00D4    233 _RS1	=	0x00d4
                    00D5    234 _F0	=	0x00d5
                    00D6    235 _AC	=	0x00d6
                    00D7    236 _CY	=	0x00d7
                            237 ;--------------------------------------------------------
                            238 ; overlayable register banks
                            239 ;--------------------------------------------------------
                            240 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     241 	.ds 8
                            242 ;--------------------------------------------------------
                            243 ; internal ram data
                            244 ;--------------------------------------------------------
                            245 	.area DSEG    (DATA)
                            246 ;--------------------------------------------------------
                            247 ; overlayable items in internal ram 
                            248 ;--------------------------------------------------------
                            249 	.area OSEG    (OVR,DATA)
                            250 ;--------------------------------------------------------
                            251 ; Stack segment in internal ram 
                            252 ;--------------------------------------------------------
                            253 	.area	SSEG	(DATA)
   0000                     254 __start__stack:
   0000                     255 	.ds	1
                            256 
                            257 ;--------------------------------------------------------
                            258 ; indirectly addressable internal ram data
                            259 ;--------------------------------------------------------
                            260 	.area ISEG    (DATA)
                            261 ;--------------------------------------------------------
                            262 ; absolute internal ram data
                            263 ;--------------------------------------------------------
                            264 	.area IABS    (ABS,DATA)
                            265 	.area IABS    (ABS,DATA)
                            266 ;--------------------------------------------------------
                            267 ; bit data
                            268 ;--------------------------------------------------------
                            269 	.area BSEG    (BIT)
                            270 ;--------------------------------------------------------
                            271 ; paged external ram data
                            272 ;--------------------------------------------------------
                            273 	.area PSEG    (PAG,XDATA)
                            274 ;--------------------------------------------------------
                            275 ; external ram data
                            276 ;--------------------------------------------------------
                            277 	.area XSEG    (XDATA)
                            278 ;--------------------------------------------------------
                            279 ; absolute external ram data
                            280 ;--------------------------------------------------------
                            281 	.area XABS    (ABS,XDATA)
                            282 ;--------------------------------------------------------
                            283 ; external initialized ram data
                            284 ;--------------------------------------------------------
                            285 	.area XISEG   (XDATA)
                            286 	.area HOME    (CODE)
                            287 	.area GSINIT0 (CODE)
                            288 	.area GSINIT1 (CODE)
                            289 	.area GSINIT2 (CODE)
                            290 	.area GSINIT3 (CODE)
                            291 	.area GSINIT4 (CODE)
                            292 	.area GSINIT5 (CODE)
                            293 	.area GSINIT  (CODE)
                            294 	.area GSFINAL (CODE)
                            295 	.area CSEG    (CODE)
                            296 ;--------------------------------------------------------
                            297 ; interrupt vector 
                            298 ;--------------------------------------------------------
                            299 	.area HOME    (CODE)
   0000                     300 __interrupt_vect:
   0000 02s00r00            301 	ljmp	__sdcc_gsinit_startup
                            302 ;--------------------------------------------------------
                            303 ; global & static initialisations
                            304 ;--------------------------------------------------------
                            305 	.area HOME    (CODE)
                            306 	.area GSINIT  (CODE)
                            307 	.area GSFINAL (CODE)
                            308 	.area GSINIT  (CODE)
                            309 	.globl __sdcc_gsinit_startup
                            310 	.globl __sdcc_program_startup
                            311 	.globl __start__stack
                            312 	.globl __mcs51_genXINIT
                            313 	.globl __mcs51_genXRAMCLEAR
                            314 	.globl __mcs51_genRAMCLEAR
                            315 	.area GSFINAL (CODE)
   0000 02s00r03            316 	ljmp	__sdcc_program_startup
                            317 ;--------------------------------------------------------
                            318 ; Home
                            319 ;--------------------------------------------------------
                            320 	.area HOME    (CODE)
                            321 	.area HOME    (CODE)
   0003                     322 __sdcc_program_startup:
   0003 12s05r21            323 	lcall	_main
                            324 ;	return from main will lock up
   0006 80 FE               325 	sjmp .
                            326 ;--------------------------------------------------------
                            327 ; code
                            328 ;--------------------------------------------------------
                            329 	.area CSEG    (CODE)
                            330 ;------------------------------------------------------------
                            331 ;Allocation info for local variables in function 'uart_initialize'
                            332 ;------------------------------------------------------------
                            333 ;------------------------------------------------------------
                            334 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:24: void uart_initialize(void)
                            335 ;	-----------------------------------------
                            336 ;	 function uart_initialize
                            337 ;	-----------------------------------------
   0000                     338 _uart_initialize:
                    0002    339 	ar2 = 0x02
                    0003    340 	ar3 = 0x03
                    0004    341 	ar4 = 0x04
                    0005    342 	ar5 = 0x05
                    0006    343 	ar6 = 0x06
                    0007    344 	ar7 = 0x07
                    0000    345 	ar0 = 0x00
                    0001    346 	ar1 = 0x01
                            347 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:26: PCON&=0x7F;		// Clear SMOD of PCON, No Double Baud Rate
   0000 53 87 7F            348 	anl	_PCON,#0x7F
                            349 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:27: TMOD&=0x2F;TMOD|=0x20;	// Set Timer1 to Mode 2 (8-bit auto reload) for Baud Rate Generation
   0003 53 89 2F            350 	anl	_TMOD,#0x2F
   0006 43 89 20            351 	orl	_TMOD,#0x20
                            352 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:28: TH1=0xFD;		// Set Baud Rate to 9600 bps for 11.0592M Hz
   0009 75 8D FD            353 	mov	_TH1,#0xFD
                            354 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:29: SM0=0;SM1=1;		// Set UART to Mode 1 (8-bit UART)
   000C C2 9F               355 	clr	_SM0
   000E D2 9E               356 	setb	_SM1
                            357 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:30: REN=1;			// Set REN of SCON to Enable UART Receive
   0010 D2 9C               358 	setb	_REN
                            359 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:31: TR1=1;			// Set TR1 of TCON to Start Timer1
   0012 D2 8E               360 	setb	_TR1
                            361 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:32: TI=0;RI=0;		// Clear TI/RI of SCON to Get Ready to Send/Receive
   0014 C2 99               362 	clr	_TI
   0016 C2 98               363 	clr	_RI
   0018 22                  364 	ret
                            365 ;------------------------------------------------------------
                            366 ;Allocation info for local variables in function 'uart_put_char'
                            367 ;------------------------------------------------------------
                            368 ;c                         Allocated to registers 
                            369 ;------------------------------------------------------------
                            370 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:35: void uart_put_char(char c)	// Put Character to UART
                            371 ;	-----------------------------------------
                            372 ;	 function uart_put_char
                            373 ;	-----------------------------------------
   0019                     374 _uart_put_char:
   0019 85 82 99            375 	mov	_SBUF,dpl
                            376 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:38: while(TI==0);TI=0;
   001C                     377 00101$:
   001C 10 99 02            378 	jbc	_TI,00108$
   001F 80 FB               379 	sjmp	00101$
   0021                     380 00108$:
   0021 22                  381 	ret
                            382 ;------------------------------------------------------------
                            383 ;Allocation info for local variables in function 'uart_get_char'
                            384 ;------------------------------------------------------------
                            385 ;------------------------------------------------------------
                            386 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:41: char uart_get_char(void)	// Get Character from UART
                            387 ;	-----------------------------------------
                            388 ;	 function uart_get_char
                            389 ;	-----------------------------------------
   0022                     390 _uart_get_char:
                            391 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:43: while(RI==0);RI=0;
   0022                     392 00101$:
   0022 10 98 02            393 	jbc	_RI,00108$
   0025 80 FB               394 	sjmp	00101$
   0027                     395 00108$:
                            396 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:44: return SBUF;
   0027 85 99 82            397 	mov	dpl,_SBUF
   002A 22                  398 	ret
                            399 ;------------------------------------------------------------
                            400 ;Allocation info for local variables in function 'uart_get_char_echo'
                            401 ;------------------------------------------------------------
                            402 ;------------------------------------------------------------
                            403 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:47: char uart_get_char_echo(void)	// Get Character from UART with Echo, Require uart_put_char()
                            404 ;	-----------------------------------------
                            405 ;	 function uart_get_char_echo
                            406 ;	-----------------------------------------
   002B                     407 _uart_get_char_echo:
                            408 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:49: while(RI==0);RI=0;
   002B                     409 00101$:
   002B 10 98 02            410 	jbc	_RI,00108$
   002E 80 FB               411 	sjmp	00101$
   0030                     412 00108$:
                            413 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:50: uart_put_char(SBUF);
   0030 85 99 82            414 	mov	dpl,_SBUF
   0033 12s00r19            415 	lcall	_uart_put_char
                            416 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:51: return SBUF;
   0036 85 99 82            417 	mov	dpl,_SBUF
   0039 22                  418 	ret
                            419 ;------------------------------------------------------------
                            420 ;Allocation info for local variables in function 'uart_put_string'
                            421 ;------------------------------------------------------------
                            422 ;s                         Allocated to registers r2 r3 r4 
                            423 ;------------------------------------------------------------
                            424 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:54: void uart_put_string(char *s)	// Put String to UART, Require uart_put_char()
                            425 ;	-----------------------------------------
                            426 ;	 function uart_put_string
                            427 ;	-----------------------------------------
   003A                     428 _uart_put_string:
   003A AA 82               429 	mov	r2,dpl
   003C AB 83               430 	mov	r3,dph
   003E AC F0               431 	mov	r4,b
                            432 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:56: while(*s!=0){uart_put_char(*s);s++;}
   0040                     433 00101$:
   0040 8A 82               434 	mov	dpl,r2
   0042 8B 83               435 	mov	dph,r3
   0044 8C F0               436 	mov	b,r4
   0046 12s00r00            437 	lcall	__gptrget
   0049 FD                  438 	mov	r5,a
   004A 60 18               439 	jz	00104$
   004C 8D 82               440 	mov	dpl,r5
   004E C0 02               441 	push	ar2
   0050 C0 03               442 	push	ar3
   0052 C0 04               443 	push	ar4
   0054 12s00r19            444 	lcall	_uart_put_char
   0057 D0 04               445 	pop	ar4
   0059 D0 03               446 	pop	ar3
   005B D0 02               447 	pop	ar2
   005D 0A                  448 	inc	r2
   005E BA 00 DF            449 	cjne	r2,#0x00,00101$
   0061 0B                  450 	inc	r3
   0062 80 DC               451 	sjmp	00101$
   0064                     452 00104$:
   0064 22                  453 	ret
                            454 ;------------------------------------------------------------
                            455 ;Allocation info for local variables in function 'uart_get_string'
                            456 ;------------------------------------------------------------
                            457 ;s                         Allocated to registers r2 r3 r4 
                            458 ;------------------------------------------------------------
                            459 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:59: void uart_get_string(char *s)	// Get String from UART, Require uart_get_char_echo()
                            460 ;	-----------------------------------------
                            461 ;	 function uart_get_string
                            462 ;	-----------------------------------------
   0065                     463 _uart_get_string:
   0065 AA 82               464 	mov	r2,dpl
   0067 AB 83               465 	mov	r3,dph
   0069 AC F0               466 	mov	r4,b
                            467 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:61: while(((*s)=uart_get_char_echo())!=13)s++;
   006B                     468 00101$:
   006B C0 02               469 	push	ar2
   006D C0 03               470 	push	ar3
   006F C0 04               471 	push	ar4
   0071 12s00r2B            472 	lcall	_uart_get_char_echo
   0074 AD 82               473 	mov	r5,dpl
   0076 D0 04               474 	pop	ar4
   0078 D0 03               475 	pop	ar3
   007A D0 02               476 	pop	ar2
   007C 8A 82               477 	mov	dpl,r2
   007E 8B 83               478 	mov	dph,r3
   0080 8C F0               479 	mov	b,r4
   0082 ED                  480 	mov	a,r5
   0083 12s00r00            481 	lcall	__gptrput
   0086 BD 0D 02            482 	cjne	r5,#0x0D,00109$
   0089 80 07               483 	sjmp	00103$
   008B                     484 00109$:
   008B 0A                  485 	inc	r2
   008C BA 00 DC            486 	cjne	r2,#0x00,00101$
   008F 0B                  487 	inc	r3
   0090 80 D9               488 	sjmp	00101$
   0092                     489 00103$:
                            490 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:62: *s=0;
   0092 8A 82               491 	mov	dpl,r2
   0094 8B 83               492 	mov	dph,r3
   0096 8C F0               493 	mov	b,r4
   0098 E4                  494 	clr	a
   0099 02s00r00            495 	ljmp	__gptrput
                            496 ;------------------------------------------------------------
                            497 ;Allocation info for local variables in function 'uart_i2s'
                            498 ;------------------------------------------------------------
                            499 ;s                         Allocated to stack - offset -5
                            500 ;i                         Allocated to stack - offset 1
                            501 ;sign                      Allocated to stack - offset 3
                            502 ;len                       Allocated to registers r6 
                            503 ;p                         Allocated to stack - offset 4
                            504 ;sloc0                     Allocated to stack - offset 8
                            505 ;sloc1                     Allocated to stack - offset 7
                            506 ;sloc2                     Allocated to stack - offset 8
                            507 ;------------------------------------------------------------
                            508 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:65: void uart_i2s(int i,char *s)	// Convert Integer to String
                            509 ;	-----------------------------------------
                            510 ;	 function uart_i2s
                            511 ;	-----------------------------------------
   009C                     512 _uart_i2s:
   009C C0*00               513 	push	_bp
   009E 85 81*00            514 	mov	_bp,sp
   00A1 C0 82               515 	push	dpl
   00A3 C0 83               516 	push	dph
   00A5 E5 81               517 	mov	a,sp
   00A7 24 0A               518 	add	a,#0x0a
   00A9 F5 81               519 	mov	sp,a
                            520 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:68: sign='+';len=0;p=s;
   00AB E5*00               521 	mov	a,_bp
   00AD 24 03               522 	add	a,#0x03
   00AF F8                  523 	mov	r0,a
   00B0 76 2B               524 	mov	@r0,#0x2B
   00B2 E5*00               525 	mov	a,_bp
   00B4 24 FB               526 	add	a,#0xfb
   00B6 F8                  527 	mov	r0,a
   00B7 E5*00               528 	mov	a,_bp
   00B9 24 04               529 	add	a,#0x04
   00BB F9                  530 	mov	r1,a
   00BC E6                  531 	mov	a,@r0
   00BD F7                  532 	mov	@r1,a
   00BE 08                  533 	inc	r0
   00BF 09                  534 	inc	r1
   00C0 E6                  535 	mov	a,@r0
   00C1 F7                  536 	mov	@r1,a
   00C2 08                  537 	inc	r0
   00C3 09                  538 	inc	r1
   00C4 E6                  539 	mov	a,@r0
   00C5 F7                  540 	mov	@r1,a
                            541 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:69: if(i<0){sign='-';i=-i;}
   00C6 A8*00               542 	mov	r0,_bp
   00C8 08                  543 	inc	r0
   00C9 08                  544 	inc	r0
   00CA E6                  545 	mov	a,@r0
   00CB 30 E7 12            546 	jnb	acc.7,00115$
   00CE E5*00               547 	mov	a,_bp
   00D0 24 03               548 	add	a,#0x03
   00D2 F8                  549 	mov	r0,a
   00D3 76 2D               550 	mov	@r0,#0x2D
   00D5 A8*00               551 	mov	r0,_bp
   00D7 08                  552 	inc	r0
   00D8 C3                  553 	clr	c
   00D9 E4                  554 	clr	a
   00DA 96                  555 	subb	a,@r0
   00DB F6                  556 	mov	@r0,a
   00DC 08                  557 	inc	r0
   00DD E4                  558 	clr	a
   00DE 96                  559 	subb	a,@r0
   00DF F6                  560 	mov	@r0,a
                            561 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:70: do{*s=(i%10)+'0';s++;len++;i/=10;}while(i!=0);
   00E0                     562 00115$:
   00E0 E5*00               563 	mov	a,_bp
   00E2 24 04               564 	add	a,#0x04
   00E4 F8                  565 	mov	r0,a
   00E5 86 04               566 	mov	ar4,@r0
   00E7 08                  567 	inc	r0
   00E8 86 02               568 	mov	ar2,@r0
   00EA 08                  569 	inc	r0
   00EB 86 03               570 	mov	ar3,@r0
   00ED 7D 00               571 	mov	r5,#0x00
   00EF                     572 00103$:
   00EF C0 02               573 	push	ar2
   00F1 C0 03               574 	push	ar3
   00F3 C0 04               575 	push	ar4
   00F5 C0 05               576 	push	ar5
   00F7 74 0A               577 	mov	a,#0x0A
   00F9 C0 E0               578 	push	acc
   00FB E4                  579 	clr	a
   00FC C0 E0               580 	push	acc
   00FE A8*00               581 	mov	r0,_bp
   0100 08                  582 	inc	r0
   0101 86 82               583 	mov	dpl,@r0
   0103 08                  584 	inc	r0
   0104 86 83               585 	mov	dph,@r0
   0106 12s00r00            586 	lcall	__modsint
   0109 AE 82               587 	mov	r6,dpl
   010B 15 81               588 	dec	sp
   010D 15 81               589 	dec	sp
   010F D0 05               590 	pop	ar5
   0111 D0 04               591 	pop	ar4
   0113 D0 03               592 	pop	ar3
   0115 D0 02               593 	pop	ar2
   0117 74 30               594 	mov	a,#0x30
   0119 2E                  595 	add	a,r6
   011A 8C 82               596 	mov	dpl,r4
   011C 8A 83               597 	mov	dph,r2
   011E 8B F0               598 	mov	b,r3
   0120 12s00r00            599 	lcall	__gptrput
   0123 A3                  600 	inc	dptr
   0124 AC 82               601 	mov	r4,dpl
   0126 AA 83               602 	mov	r2,dph
   0128 0D                  603 	inc	r5
   0129 8D 06               604 	mov	ar6,r5
   012B C0 02               605 	push	ar2
   012D C0 03               606 	push	ar3
   012F C0 04               607 	push	ar4
   0131 C0 05               608 	push	ar5
   0133 74 0A               609 	mov	a,#0x0A
   0135 C0 E0               610 	push	acc
   0137 E4                  611 	clr	a
   0138 C0 E0               612 	push	acc
   013A A8*00               613 	mov	r0,_bp
   013C 08                  614 	inc	r0
   013D 86 82               615 	mov	dpl,@r0
   013F 08                  616 	inc	r0
   0140 86 83               617 	mov	dph,@r0
   0142 12s00r00            618 	lcall	__divsint
   0145 A8*00               619 	mov	r0,_bp
   0147 08                  620 	inc	r0
   0148 A6 82               621 	mov	@r0,dpl
   014A 08                  622 	inc	r0
   014B A6 83               623 	mov	@r0,dph
   014D 15 81               624 	dec	sp
   014F 15 81               625 	dec	sp
   0151 D0 05               626 	pop	ar5
   0153 D0 04               627 	pop	ar4
   0155 D0 03               628 	pop	ar3
   0157 D0 02               629 	pop	ar2
   0159 A8*00               630 	mov	r0,_bp
   015B 08                  631 	inc	r0
   015C E6                  632 	mov	a,@r0
   015D 08                  633 	inc	r0
   015E 46                  634 	orl	a,@r0
   015F 70 8E               635 	jnz	00103$
                            636 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:71: if(sign=='-'){*s='-';s++;len++;}
   0161 8D 06               637 	mov	ar6,r5
   0163 E5*00               638 	mov	a,_bp
   0165 24 03               639 	add	a,#0x03
   0167 F8                  640 	mov	r0,a
   0168 B6 2D 0E            641 	cjne	@r0,#0x2D,00119$
   016B 8C 82               642 	mov	dpl,r4
   016D 8A 83               643 	mov	dph,r2
   016F 8B F0               644 	mov	b,r3
   0171 74 2D               645 	mov	a,#0x2D
   0173 12s00r00            646 	lcall	__gptrput
   0176 ED                  647 	mov	a,r5
   0177 04                  648 	inc	a
   0178 FE                  649 	mov	r6,a
                            650 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:72: for(i=0;i<len/2;i++){p[len]=p[i];p[i]=p[len-1-i];p[len-1-i]=p[len];}
   0179                     651 00119$:
   0179 EE                  652 	mov	a,r6
   017A C3                  653 	clr	c
   017B 13                  654 	rrc	a
   017C FA                  655 	mov	r2,a
   017D A8*00               656 	mov	r0,_bp
   017F 08                  657 	inc	r0
   0180 E4                  658 	clr	a
   0181 F6                  659 	mov	@r0,a
   0182 08                  660 	inc	r0
   0183 F6                  661 	mov	@r0,a
   0184                     662 00108$:
   0184 8A 05               663 	mov	ar5,r2
   0186 7F 00               664 	mov	r7,#0x00
   0188 A8*00               665 	mov	r0,_bp
   018A 08                  666 	inc	r0
   018B C3                  667 	clr	c
   018C E6                  668 	mov	a,@r0
   018D 9D                  669 	subb	a,r5
   018E 08                  670 	inc	r0
   018F E6                  671 	mov	a,@r0
   0190 64 80               672 	xrl	a,#0x80
   0192 8F F0               673 	mov	b,r7
   0194 63 F0 80            674 	xrl	b,#0x80
   0197 95 F0               675 	subb	a,b
   0199 40 03               676 	jc	00126$
   019B 02s02r55            677 	ljmp	00111$
   019E                     678 00126$:
   019E C0 02               679 	push	ar2
   01A0 E5*00               680 	mov	a,_bp
   01A2 24 04               681 	add	a,#0x04
   01A4 F8                  682 	mov	r0,a
   01A5 EE                  683 	mov	a,r6
   01A6 26                  684 	add	a,@r0
   01A7 FB                  685 	mov	r3,a
   01A8 E4                  686 	clr	a
   01A9 08                  687 	inc	r0
   01AA 36                  688 	addc	a,@r0
   01AB FC                  689 	mov	r4,a
   01AC 08                  690 	inc	r0
   01AD 86 05               691 	mov	ar5,@r0
   01AF E5*00               692 	mov	a,_bp
   01B1 24 04               693 	add	a,#0x04
   01B3 F8                  694 	mov	r0,a
   01B4 A9*00               695 	mov	r1,_bp
   01B6 09                  696 	inc	r1
   01B7 E7                  697 	mov	a,@r1
   01B8 26                  698 	add	a,@r0
   01B9 C0 E0               699 	push	acc
   01BB 09                  700 	inc	r1
   01BC E7                  701 	mov	a,@r1
   01BD 08                  702 	inc	r0
   01BE 36                  703 	addc	a,@r0
   01BF C0 E0               704 	push	acc
   01C1 08                  705 	inc	r0
   01C2 E6                  706 	mov	a,@r0
   01C3 C0 E0               707 	push	acc
   01C5 E5*00               708 	mov	a,_bp
   01C7 24 0A               709 	add	a,#0x0a
   01C9 F8                  710 	mov	r0,a
   01CA D0 E0               711 	pop	acc
   01CC F6                  712 	mov	@r0,a
   01CD 18                  713 	dec	r0
   01CE D0 E0               714 	pop	acc
   01D0 F6                  715 	mov	@r0,a
   01D1 18                  716 	dec	r0
   01D2 D0 E0               717 	pop	acc
   01D4 F6                  718 	mov	@r0,a
   01D5 E5*00               719 	mov	a,_bp
   01D7 24 08               720 	add	a,#0x08
   01D9 F8                  721 	mov	r0,a
   01DA 86 82               722 	mov	dpl,@r0
   01DC 08                  723 	inc	r0
   01DD 86 83               724 	mov	dph,@r0
   01DF 08                  725 	inc	r0
   01E0 86 F0               726 	mov	b,@r0
   01E2 E5*00               727 	mov	a,_bp
   01E4 24 07               728 	add	a,#0x07
   01E6 F9                  729 	mov	r1,a
   01E7 12s00r00            730 	lcall	__gptrget
   01EA F7                  731 	mov	@r1,a
   01EB 8B 82               732 	mov	dpl,r3
   01ED 8C 83               733 	mov	dph,r4
   01EF 8D F0               734 	mov	b,r5
   01F1 E5*00               735 	mov	a,_bp
   01F3 24 07               736 	add	a,#0x07
   01F5 F8                  737 	mov	r0,a
   01F6 E6                  738 	mov	a,@r0
   01F7 12s00r00            739 	lcall	__gptrput
   01FA 8E 07               740 	mov	ar7,r6
   01FC 7D 00               741 	mov	r5,#0x00
   01FE 1F                  742 	dec	r7
   01FF BF FF 01            743 	cjne	r7,#0xff,00127$
   0202 1D                  744 	dec	r5
   0203                     745 00127$:
   0203 A8*00               746 	mov	r0,_bp
   0205 08                  747 	inc	r0
   0206 EF                  748 	mov	a,r7
   0207 C3                  749 	clr	c
   0208 96                  750 	subb	a,@r0
   0209 FF                  751 	mov	r7,a
   020A ED                  752 	mov	a,r5
   020B 08                  753 	inc	r0
   020C 96                  754 	subb	a,@r0
   020D FD                  755 	mov	r5,a
   020E E5*00               756 	mov	a,_bp
   0210 24 04               757 	add	a,#0x04
   0212 F8                  758 	mov	r0,a
   0213 EF                  759 	mov	a,r7
   0214 26                  760 	add	a,@r0
   0215 FF                  761 	mov	r7,a
   0216 ED                  762 	mov	a,r5
   0217 08                  763 	inc	r0
   0218 36                  764 	addc	a,@r0
   0219 FD                  765 	mov	r5,a
   021A 08                  766 	inc	r0
   021B 86 02               767 	mov	ar2,@r0
   021D 8F 82               768 	mov	dpl,r7
   021F 8D 83               769 	mov	dph,r5
   0221 8A F0               770 	mov	b,r2
   0223 12s00r00            771 	lcall	__gptrget
   0226 FB                  772 	mov	r3,a
   0227 E5*00               773 	mov	a,_bp
   0229 24 08               774 	add	a,#0x08
   022B F8                  775 	mov	r0,a
   022C 86 82               776 	mov	dpl,@r0
   022E 08                  777 	inc	r0
   022F 86 83               778 	mov	dph,@r0
   0231 08                  779 	inc	r0
   0232 86 F0               780 	mov	b,@r0
   0234 EB                  781 	mov	a,r3
   0235 12s00r00            782 	lcall	__gptrput
   0238 8F 82               783 	mov	dpl,r7
   023A 8D 83               784 	mov	dph,r5
   023C 8A F0               785 	mov	b,r2
   023E E5*00               786 	mov	a,_bp
   0240 24 07               787 	add	a,#0x07
   0242 F8                  788 	mov	r0,a
   0243 E6                  789 	mov	a,@r0
   0244 12s00r00            790 	lcall	__gptrput
   0247 A8*00               791 	mov	r0,_bp
   0249 08                  792 	inc	r0
   024A 06                  793 	inc	@r0
   024B B6 00 02            794 	cjne	@r0,#0x00,00128$
   024E 08                  795 	inc	r0
   024F 06                  796 	inc	@r0
   0250                     797 00128$:
   0250 D0 02               798 	pop	ar2
   0252 02s01r84            799 	ljmp	00108$
   0255                     800 00111$:
                            801 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:73: p[len]=0;
   0255 E5*00               802 	mov	a,_bp
   0257 24 04               803 	add	a,#0x04
   0259 F8                  804 	mov	r0,a
   025A EE                  805 	mov	a,r6
   025B 26                  806 	add	a,@r0
   025C FE                  807 	mov	r6,a
   025D E4                  808 	clr	a
   025E 08                  809 	inc	r0
   025F 36                  810 	addc	a,@r0
   0260 FA                  811 	mov	r2,a
   0261 08                  812 	inc	r0
   0262 86 03               813 	mov	ar3,@r0
   0264 8E 82               814 	mov	dpl,r6
   0266 8A 83               815 	mov	dph,r2
   0268 8B F0               816 	mov	b,r3
   026A E4                  817 	clr	a
   026B 12s00r00            818 	lcall	__gptrput
   026E 85*00 81            819 	mov	sp,_bp
   0271 D0*00               820 	pop	_bp
   0273 22                  821 	ret
                            822 ;------------------------------------------------------------
                            823 ;Allocation info for local variables in function 'uart_s2i'
                            824 ;------------------------------------------------------------
                            825 ;s                         Allocated to registers r2 r3 r4 
                            826 ;i                         Allocated to registers r5 r6 
                            827 ;sign                      Allocated to stack - offset 1
                            828 ;sloc0                     Allocated to stack - offset 7
                            829 ;sloc1                     Allocated to stack - offset 2
                            830 ;------------------------------------------------------------
                            831 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:76: int uart_s2i(char *s)	// Convert String to Integer
                            832 ;	-----------------------------------------
                            833 ;	 function uart_s2i
                            834 ;	-----------------------------------------
   0274                     835 _uart_s2i:
   0274 C0*00               836 	push	_bp
   0276 E5 81               837 	mov	a,sp
   0278 F5*00               838 	mov	_bp,a
   027A 24 04               839 	add	a,#0x04
   027C F5 81               840 	mov	sp,a
   027E AA 82               841 	mov	r2,dpl
   0280 AB 83               842 	mov	r3,dph
   0282 AC F0               843 	mov	r4,b
                            844 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:78: int i=0;char sign='+';
   0284 7D 00               845 	mov	r5,#0x00
   0286 7E 00               846 	mov	r6,#0x00
   0288 A8*00               847 	mov	r0,_bp
   028A 08                  848 	inc	r0
   028B 76 2B               849 	mov	@r0,#0x2B
                            850 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:79: if(*s=='-'){sign='-';s++;}
   028D 8A 82               851 	mov	dpl,r2
   028F 8B 83               852 	mov	dph,r3
   0291 8C F0               853 	mov	b,r4
   0293 12s00r00            854 	lcall	__gptrget
   0296 FF                  855 	mov	r7,a
   0297 BF 2D 0A            856 	cjne	r7,#0x2D,00112$
   029A A8*00               857 	mov	r0,_bp
   029C 08                  858 	inc	r0
   029D 76 2D               859 	mov	@r0,#0x2D
   029F 0A                  860 	inc	r2
   02A0 BA 00 01            861 	cjne	r2,#0x00,00117$
   02A3 0B                  862 	inc	r3
   02A4                     863 00117$:
                            864 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:80: while(*s!=0){i=i*10+(*s-'0');s++;}
   02A4                     865 00112$:
   02A4 A8*00               866 	mov	r0,_bp
   02A6 08                  867 	inc	r0
   02A7 08                  868 	inc	r0
   02A8 A6 02               869 	mov	@r0,ar2
   02AA 08                  870 	inc	r0
   02AB A6 03               871 	mov	@r0,ar3
   02AD 08                  872 	inc	r0
   02AE A6 04               873 	mov	@r0,ar4
   02B0                     874 00103$:
   02B0 A8*00               875 	mov	r0,_bp
   02B2 08                  876 	inc	r0
   02B3 08                  877 	inc	r0
   02B4 86 82               878 	mov	dpl,@r0
   02B6 08                  879 	inc	r0
   02B7 86 83               880 	mov	dph,@r0
   02B9 08                  881 	inc	r0
   02BA 86 F0               882 	mov	b,@r0
   02BC 12s00r00            883 	lcall	__gptrget
   02BF FB                  884 	mov	r3,a
   02C0 60 39               885 	jz	00105$
   02C2 C0 03               886 	push	ar3
   02C4 C0 05               887 	push	ar5
   02C6 C0 06               888 	push	ar6
   02C8 90 00 0A            889 	mov	dptr,#0x000A
   02CB 12s00r00            890 	lcall	__mulint
   02CE AF 82               891 	mov	r7,dpl
   02D0 AA 83               892 	mov	r2,dph
   02D2 15 81               893 	dec	sp
   02D4 15 81               894 	dec	sp
   02D6 D0 03               895 	pop	ar3
   02D8 EB                  896 	mov	a,r3
   02D9 33                  897 	rlc	a
   02DA 95 E0               898 	subb	a,acc
   02DC FC                  899 	mov	r4,a
   02DD EB                  900 	mov	a,r3
   02DE 24 D0               901 	add	a,#0xd0
   02E0 FB                  902 	mov	r3,a
   02E1 EC                  903 	mov	a,r4
   02E2 34 FF               904 	addc	a,#0xff
   02E4 FC                  905 	mov	r4,a
   02E5 EB                  906 	mov	a,r3
   02E6 2F                  907 	add	a,r7
   02E7 FF                  908 	mov	r7,a
   02E8 EC                  909 	mov	a,r4
   02E9 3A                  910 	addc	a,r2
   02EA FA                  911 	mov	r2,a
   02EB 8F 05               912 	mov	ar5,r7
   02ED 8A 06               913 	mov	ar6,r2
   02EF A8*00               914 	mov	r0,_bp
   02F1 08                  915 	inc	r0
   02F2 08                  916 	inc	r0
   02F3 06                  917 	inc	@r0
   02F4 B6 00 02            918 	cjne	@r0,#0x00,00119$
   02F7 08                  919 	inc	r0
   02F8 06                  920 	inc	@r0
   02F9                     921 00119$:
   02F9 80 B5               922 	sjmp	00103$
   02FB                     923 00105$:
                            924 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:81: if(sign=='-')i=-i;
   02FB A8*00               925 	mov	r0,_bp
   02FD 08                  926 	inc	r0
   02FE B6 2D 07            927 	cjne	@r0,#0x2D,00107$
   0301 C3                  928 	clr	c
   0302 E4                  929 	clr	a
   0303 9D                  930 	subb	a,r5
   0304 FD                  931 	mov	r5,a
   0305 E4                  932 	clr	a
   0306 9E                  933 	subb	a,r6
   0307 FE                  934 	mov	r6,a
   0308                     935 00107$:
                            936 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:82: return i;
   0308 8D 82               937 	mov	dpl,r5
   030A 8E 83               938 	mov	dph,r6
   030C 85*00 81            939 	mov	sp,_bp
   030F D0*00               940 	pop	_bp
   0311 22                  941 	ret
                            942 ;------------------------------------------------------------
                            943 ;Allocation info for local variables in function 'uart_put_integer'
                            944 ;------------------------------------------------------------
                            945 ;i                         Allocated to registers r2 r3 
                            946 ;s                         Allocated to stack - offset 1
                            947 ;------------------------------------------------------------
                            948 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:85: void uart_put_integer(int i)	// Put Integer to UART, Require uart_i2s(),uart_put_string()
                            949 ;	-----------------------------------------
                            950 ;	 function uart_put_integer
                            951 ;	-----------------------------------------
   0312                     952 _uart_put_integer:
   0312 C0*00               953 	push	_bp
   0314 E5 81               954 	mov	a,sp
   0316 F5*00               955 	mov	_bp,a
   0318 24 07               956 	add	a,#0x07
   031A F5 81               957 	mov	sp,a
   031C AA 82               958 	mov	r2,dpl
   031E AB 83               959 	mov	r3,dph
                            960 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:88: uart_i2s(i,s);uart_put_string(s);
   0320 AC*00               961 	mov	r4,_bp
   0322 0C                  962 	inc	r4
   0323 8C 05               963 	mov	ar5,r4
   0325 7E 00               964 	mov	r6,#0x00
   0327 7F 40               965 	mov	r7,#0x40
   0329 C0 04               966 	push	ar4
   032B C0 05               967 	push	ar5
   032D C0 06               968 	push	ar6
   032F C0 07               969 	push	ar7
   0331 8A 82               970 	mov	dpl,r2
   0333 8B 83               971 	mov	dph,r3
   0335 12s00r9C            972 	lcall	_uart_i2s
   0338 15 81               973 	dec	sp
   033A 15 81               974 	dec	sp
   033C 15 81               975 	dec	sp
   033E D0 04               976 	pop	ar4
   0340 7A 00               977 	mov	r2,#0x00
   0342 7B 40               978 	mov	r3,#0x40
   0344 8C 82               979 	mov	dpl,r4
   0346 8A 83               980 	mov	dph,r2
   0348 8B F0               981 	mov	b,r3
   034A 12s00r3A            982 	lcall	_uart_put_string
   034D 85*00 81            983 	mov	sp,_bp
   0350 D0*00               984 	pop	_bp
   0352 22                  985 	ret
                            986 ;------------------------------------------------------------
                            987 ;Allocation info for local variables in function 'uart_get_integer'
                            988 ;------------------------------------------------------------
                            989 ;s                         Allocated to stack - offset 1
                            990 ;------------------------------------------------------------
                            991 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:91: int uart_get_integer()		// Get Integer from UART, Require uart_get_string(),uart_s2i()
                            992 ;	-----------------------------------------
                            993 ;	 function uart_get_integer
                            994 ;	-----------------------------------------
   0353                     995 _uart_get_integer:
   0353 C0*00               996 	push	_bp
   0355 E5 81               997 	mov	a,sp
   0357 F5*00               998 	mov	_bp,a
   0359 24 07               999 	add	a,#0x07
   035B F5 81              1000 	mov	sp,a
                           1001 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:94: uart_get_string(s);
   035D AA*00              1002 	mov	r2,_bp
   035F 0A                 1003 	inc	r2
   0360 8A 03              1004 	mov	ar3,r2
   0362 7C 00              1005 	mov	r4,#0x00
   0364 7D 40              1006 	mov	r5,#0x40
   0366 8B 82              1007 	mov	dpl,r3
   0368 8C 83              1008 	mov	dph,r4
   036A 8D F0              1009 	mov	b,r5
   036C C0 02              1010 	push	ar2
   036E 12s00r65           1011 	lcall	_uart_get_string
   0371 D0 02              1012 	pop	ar2
                           1013 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:95: return uart_s2i(s);
   0373 7B 00              1014 	mov	r3,#0x00
   0375 7C 40              1015 	mov	r4,#0x40
   0377 8A 82              1016 	mov	dpl,r2
   0379 8B 83              1017 	mov	dph,r3
   037B 8C F0              1018 	mov	b,r4
   037D 12s02r74           1019 	lcall	_uart_s2i
   0380 85*00 81           1020 	mov	sp,_bp
   0383 D0*00              1021 	pop	_bp
   0385 22                 1022 	ret
                           1023 ;------------------------------------------------------------
                           1024 ;Allocation info for local variables in function 'uart_put_byte'
                           1025 ;------------------------------------------------------------
                           1026 ;byte_data                 Allocated to registers r2 
                           1027 ;------------------------------------------------------------
                           1028 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:98: void uart_put_byte(unsigned char byte_data)
                           1029 ;	-----------------------------------------
                           1030 ;	 function uart_put_byte
                           1031 ;	-----------------------------------------
   0386                    1032 _uart_put_byte:
                           1033 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:100: uart_put_char(uart_ASCII[byte_data/16]);uart_put_char(uart_ASCII[byte_data%16]);
   0386 E5 82              1034 	mov	a,dpl
   0388 FA                 1035 	mov	r2,a
   0389 C4                 1036 	swap	a
   038A 54 0F              1037 	anl	a,#0x0f
   038C 90s00r00           1038 	mov	dptr,#_uart_ASCII
   038F 93                 1039 	movc	a,@a+dptr
   0390 F5 82              1040 	mov	dpl,a
   0392 C0 02              1041 	push	ar2
   0394 12s00r19           1042 	lcall	_uart_put_char
   0397 D0 02              1043 	pop	ar2
   0399 74 0F              1044 	mov	a,#0x0F
   039B 5A                 1045 	anl	a,r2
   039C 90s00r00           1046 	mov	dptr,#_uart_ASCII
   039F 93                 1047 	movc	a,@a+dptr
   03A0 F5 82              1048 	mov	dpl,a
   03A2 02s00r19           1049 	ljmp	_uart_put_char
                           1050 ;------------------------------------------------------------
                           1051 ;Allocation info for local variables in function 'uart_put_word'
                           1052 ;------------------------------------------------------------
                           1053 ;word_data                 Allocated to registers r2 r3 
                           1054 ;------------------------------------------------------------
                           1055 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:103: void uart_put_word(unsigned int word_data)
                           1056 ;	-----------------------------------------
                           1057 ;	 function uart_put_word
                           1058 ;	-----------------------------------------
   03A5                    1059 _uart_put_word:
   03A5 AA 82              1060 	mov	r2,dpl
   03A7 AB 83              1061 	mov	r3,dph
                           1062 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:105: uart_put_byte(word_data/256);uart_put_byte(word_data%256);
   03A9 8B 04              1063 	mov	ar4,r3
   03AB 8C 82              1064 	mov	dpl,r4
   03AD C0 02              1065 	push	ar2
   03AF C0 03              1066 	push	ar3
   03B1 12s03r86           1067 	lcall	_uart_put_byte
   03B4 D0 03              1068 	pop	ar3
   03B6 D0 02              1069 	pop	ar2
   03B8 8A 82              1070 	mov	dpl,r2
   03BA 02s03r86           1071 	ljmp	_uart_put_byte
                           1072 ;------------------------------------------------------------
                           1073 ;Allocation info for local variables in function 'uart_get_nibble'
                           1074 ;------------------------------------------------------------
                           1075 ;c                         Allocated to registers r2 
                           1076 ;------------------------------------------------------------
                           1077 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:108: char uart_get_nibble()
                           1078 ;	-----------------------------------------
                           1079 ;	 function uart_get_nibble
                           1080 ;	-----------------------------------------
   03BD                    1081 _uart_get_nibble:
                           1082 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:111: c=uart_get_char_echo();
   03BD 12s00r2B           1083 	lcall	_uart_get_char_echo
   03C0 AA 82              1084 	mov	r2,dpl
                           1085 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:112: if('0'<=c && c<='9')return(c-'0');
   03C2 C3                 1086 	clr	c
   03C3 EA                 1087 	mov	a,r2
   03C4 64 80              1088 	xrl	a,#0x80
   03C6 94 B0              1089 	subb	a,#0xb0
   03C8 40 11              1090 	jc	00102$
   03CA 74 B9              1091 	mov	a,#(0x39 ^ 0x80)
   03CC 8A F0              1092 	mov	b,r2
   03CE 63 F0 80           1093 	xrl	b,#0x80
   03D1 95 F0              1094 	subb	a,b
   03D3 40 06              1095 	jc	00102$
   03D5 EA                 1096 	mov	a,r2
   03D6 24 D0              1097 	add	a,#0xd0
   03D8 F5 82              1098 	mov	dpl,a
   03DA 22                 1099 	ret
   03DB                    1100 00102$:
                           1101 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:113: if('A'<=c && c<='F')return(10+c-'A');
   03DB C3                 1102 	clr	c
   03DC EA                 1103 	mov	a,r2
   03DD 64 80              1104 	xrl	a,#0x80
   03DF 94 C1              1105 	subb	a,#0xc1
   03E1 40 11              1106 	jc	00105$
   03E3 74 C6              1107 	mov	a,#(0x46 ^ 0x80)
   03E5 8A F0              1108 	mov	b,r2
   03E7 63 F0 80           1109 	xrl	b,#0x80
   03EA 95 F0              1110 	subb	a,b
   03EC 40 06              1111 	jc	00105$
   03EE 74 C9              1112 	mov	a,#0xC9
   03F0 2A                 1113 	add	a,r2
   03F1 F5 82              1114 	mov	dpl,a
   03F3 22                 1115 	ret
   03F4                    1116 00105$:
                           1117 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:114: if('a'<=c && c<='f')return(10+c-'a');
   03F4 C3                 1118 	clr	c
   03F5 EA                 1119 	mov	a,r2
   03F6 64 80              1120 	xrl	a,#0x80
   03F8 94 E1              1121 	subb	a,#0xe1
   03FA 40 11              1122 	jc	00108$
   03FC 74 E6              1123 	mov	a,#(0x66 ^ 0x80)
   03FE 8A F0              1124 	mov	b,r2
   0400 63 F0 80           1125 	xrl	b,#0x80
   0403 95 F0              1126 	subb	a,b
   0405 40 06              1127 	jc	00108$
   0407 74 A9              1128 	mov	a,#0xA9
   0409 2A                 1129 	add	a,r2
   040A F5 82              1130 	mov	dpl,a
                           1131 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:115: return(0);
   040C 22                 1132 	ret
   040D                    1133 00108$:
   040D 75 82 00           1134 	mov	dpl,#0x00
   0410 22                 1135 	ret
                           1136 ;------------------------------------------------------------
                           1137 ;Allocation info for local variables in function 'uart_get_byte'
                           1138 ;------------------------------------------------------------
                           1139 ;------------------------------------------------------------
                           1140 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:118: unsigned char uart_get_byte()
                           1141 ;	-----------------------------------------
                           1142 ;	 function uart_get_byte
                           1143 ;	-----------------------------------------
   0411                    1144 _uart_get_byte:
                           1145 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:120: return(16*uart_get_nibble()+uart_get_nibble());
   0411 12s03rBD           1146 	lcall	_uart_get_nibble
   0414 E5 82              1147 	mov	a,dpl
   0416 C4                 1148 	swap	a
   0417 54 F0              1149 	anl	a,#0xf0
   0419 FA                 1150 	mov	r2,a
   041A C0 02              1151 	push	ar2
   041C 12s03rBD           1152 	lcall	_uart_get_nibble
   041F AB 82              1153 	mov	r3,dpl
   0421 D0 02              1154 	pop	ar2
   0423 EB                 1155 	mov	a,r3
   0424 2A                 1156 	add	a,r2
   0425 F5 82              1157 	mov	dpl,a
   0427 22                 1158 	ret
                           1159 ;------------------------------------------------------------
                           1160 ;Allocation info for local variables in function 'uart_get_word'
                           1161 ;------------------------------------------------------------
                           1162 ;------------------------------------------------------------
                           1163 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:123: unsigned int uart_get_word()
                           1164 ;	-----------------------------------------
                           1165 ;	 function uart_get_word
                           1166 ;	-----------------------------------------
   0428                    1167 _uart_get_word:
                           1168 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\/uart.c:125: return(256*uart_get_byte()+uart_get_byte());
   0428 12s04r11           1169 	lcall	_uart_get_byte
   042B AB 82              1170 	mov	r3,dpl
   042D 7A 00              1171 	mov	r2,#0x00
   042F C0 02              1172 	push	ar2
   0431 C0 03              1173 	push	ar3
   0433 12s04r11           1174 	lcall	_uart_get_byte
   0436 AC 82              1175 	mov	r4,dpl
   0438 D0 03              1176 	pop	ar3
   043A D0 02              1177 	pop	ar2
   043C 7D 00              1178 	mov	r5,#0x00
   043E EC                 1179 	mov	a,r4
   043F 2A                 1180 	add	a,r2
   0440 F5 82              1181 	mov	dpl,a
   0442 ED                 1182 	mov	a,r5
   0443 3B                 1183 	addc	a,r3
   0444 F5 83              1184 	mov	dph,a
   0446 22                 1185 	ret
                           1186 ;------------------------------------------------------------
                           1187 ;Allocation info for local variables in function 'keypad_get_key'
                           1188 ;------------------------------------------------------------
                           1189 ;key                       Allocated to registers r2 
                           1190 ;------------------------------------------------------------
                           1191 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:17: unsigned char keypad_get_key(void)
                           1192 ;	-----------------------------------------
                           1193 ;	 function keypad_get_key
                           1194 ;	-----------------------------------------
   0447                    1195 _keypad_get_key:
                           1196 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:20: KEYPAD_DO|=0x1F;
   0447 43 90 1F           1197 	orl	_P1,#0x1F
                           1198 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:21: while(KEYPAD_DA==0);
   044A                    1199 00101$:
   044A 30 94 FD           1200 	jnb	_P1_4,00101$
                           1201 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:22: key=KEYPAD_DO;key&=0x0F;
   044D AA 90              1202 	mov	r2,_P1
   044F 53 02 0F           1203 	anl	ar2,#0x0F
                           1204 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:23: while(KEYPAD_DA==1);
   0452                    1205 00104$:
   0452 20 94 FD           1206 	jb	_P1_4,00104$
                           1207 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:24: return key;
   0455 8A 82              1208 	mov	dpl,r2
   0457 22                 1209 	ret
                           1210 ;------------------------------------------------------------
                           1211 ;Allocation info for local variables in function 'keypad_get_key_echo'
                           1212 ;------------------------------------------------------------
                           1213 ;key                       Allocated to registers r2 
                           1214 ;------------------------------------------------------------
                           1215 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:27: unsigned char keypad_get_key_echo(void)
                           1216 ;	-----------------------------------------
                           1217 ;	 function keypad_get_key_echo
                           1218 ;	-----------------------------------------
   0458                    1219 _keypad_get_key_echo:
                           1220 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:30: KEYPAD_DO|=0x1F;
   0458 43 90 1F           1221 	orl	_P1,#0x1F
                           1222 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:31: while(KEYPAD_DA==0);
   045B                    1223 00101$:
   045B 30 94 FD           1224 	jnb	_P1_4,00101$
                           1225 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:32: key=KEYPAD_DO;key&=0x0F;
                           1226 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:33: uart_put_char(uart_ASCII[key]);
   045E E5 90              1227 	mov	a,_P1
   0460 54 0F              1228 	anl	a,#0x0F
   0462 FA                 1229 	mov	r2,a
   0463 90s00r00           1230 	mov	dptr,#_uart_ASCII
   0466 93                 1231 	movc	a,@a+dptr
   0467 F5 82              1232 	mov	dpl,a
   0469 C0 02              1233 	push	ar2
   046B 12s00r19           1234 	lcall	_uart_put_char
                           1235 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:34: uart_put_string("\r\n");
   046E 90s00r11           1236 	mov	dptr,#__str_0
   0471 75 F0 80           1237 	mov	b,#0x80
   0474 12s00r3A           1238 	lcall	_uart_put_string
   0477 D0 02              1239 	pop	ar2
                           1240 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:36: while(KEYPAD_DA==1);
   0479                    1241 00104$:
   0479 20 94 FD           1242 	jb	_P1_4,00104$
                           1243 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:37: return key;
   047C 8A 82              1244 	mov	dpl,r2
   047E 22                 1245 	ret
                           1246 ;------------------------------------------------------------
                           1247 ;Allocation info for local variables in function 'keypad_get_byte'
                           1248 ;------------------------------------------------------------
                           1249 ;------------------------------------------------------------
                           1250 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:40: unsigned char keypad_get_byte(void)
                           1251 ;	-----------------------------------------
                           1252 ;	 function keypad_get_byte
                           1253 ;	-----------------------------------------
   047F                    1254 _keypad_get_byte:
                           1255 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:42: return(keypad_get_key_echo()*16+keypad_get_key_echo());
   047F 12s04r58           1256 	lcall	_keypad_get_key_echo
   0482 E5 82              1257 	mov	a,dpl
   0484 C4                 1258 	swap	a
   0485 54 F0              1259 	anl	a,#0xf0
   0487 FA                 1260 	mov	r2,a
   0488 C0 02              1261 	push	ar2
   048A 12s04r58           1262 	lcall	_keypad_get_key_echo
   048D AB 82              1263 	mov	r3,dpl
   048F D0 02              1264 	pop	ar2
   0491 EB                 1265 	mov	a,r3
   0492 2A                 1266 	add	a,r2
   0493 F5 82              1267 	mov	dpl,a
   0495 22                 1268 	ret
                           1269 ;------------------------------------------------------------
                           1270 ;Allocation info for local variables in function 'keypad_get_word'
                           1271 ;------------------------------------------------------------
                           1272 ;------------------------------------------------------------
                           1273 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:45: unsigned int keypad_get_word(void)
                           1274 ;	-----------------------------------------
                           1275 ;	 function keypad_get_word
                           1276 ;	-----------------------------------------
   0496                    1277 _keypad_get_word:
                           1278 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:47: return(keypad_get_byte()*256+keypad_get_byte());
   0496 12s04r7F           1279 	lcall	_keypad_get_byte
   0499 AB 82              1280 	mov	r3,dpl
   049B 7A 00              1281 	mov	r2,#0x00
   049D C0 02              1282 	push	ar2
   049F C0 03              1283 	push	ar3
   04A1 12s04r7F           1284 	lcall	_keypad_get_byte
   04A4 AC 82              1285 	mov	r4,dpl
   04A6 D0 03              1286 	pop	ar3
   04A8 D0 02              1287 	pop	ar2
   04AA 7D 00              1288 	mov	r5,#0x00
   04AC EC                 1289 	mov	a,r4
   04AD 2A                 1290 	add	a,r2
   04AE F5 82              1291 	mov	dpl,a
   04B0 ED                 1292 	mov	a,r5
   04B1 3B                 1293 	addc	a,r3
   04B2 F5 83              1294 	mov	dph,a
   04B4 22                 1295 	ret
                           1296 ;------------------------------------------------------------
                           1297 ;Allocation info for local variables in function 'keypad_check_key'
                           1298 ;------------------------------------------------------------
                           1299 ;key                       Allocated to registers r2 
                           1300 ;------------------------------------------------------------
                           1301 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:50: unsigned char keypad_check_key(void)
                           1302 ;	-----------------------------------------
                           1303 ;	 function keypad_check_key
                           1304 ;	-----------------------------------------
   04B5                    1305 _keypad_check_key:
                           1306 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:53: KEYPAD_DO|=0x1F;
   04B5 43 90 1F           1307 	orl	_P1,#0x1F
                           1308 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:54: if(KEYPAD_DA==1)
   04B8 30 94 0B           1309 	jnb	_P1_4,00105$
                           1310 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:55: {key=KEYPAD_DO;key&=0x0F;while(KEYPAD_DA==1);return key;}
   04BB AA 90              1311 	mov	r2,_P1
   04BD 53 02 0F           1312 	anl	ar2,#0x0F
   04C0                    1313 00101$:
   04C0 20 94 FD           1314 	jb	_P1_4,00101$
   04C3 8A 82              1315 	mov	dpl,r2
                           1316 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:57: return KEYPAD_NULL;
   04C5 22                 1317 	ret
   04C6                    1318 00105$:
   04C6 75 82 10           1319 	mov	dpl,#0x10
   04C9 22                 1320 	ret
                           1321 ;------------------------------------------------------------
                           1322 ;Allocation info for local variables in function 'keypad_get_integer'
                           1323 ;------------------------------------------------------------
                           1324 ;value                     Allocated to registers r2 r3 
                           1325 ;key                       Allocated to registers r5 
                           1326 ;------------------------------------------------------------
                           1327 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:60: unsigned int keypad_get_integer(void)
                           1328 ;	-----------------------------------------
                           1329 ;	 function keypad_get_integer
                           1330 ;	-----------------------------------------
   04CA                    1331 _keypad_get_integer:
                           1332 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:62: unsigned int value=0;
   04CA 7A 00              1333 	mov	r2,#0x00
   04CC 7B 00              1334 	mov	r3,#0x00
                           1335 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:64: while((key=keypad_get_key())<0x0A)
   04CE                    1336 00101$:
   04CE C0 02              1337 	push	ar2
   04D0 C0 03              1338 	push	ar3
   04D2 12s04r47           1339 	lcall	_keypad_get_key
   04D5 AC 82              1340 	mov	r4,dpl
   04D7 D0 03              1341 	pop	ar3
   04D9 D0 02              1342 	pop	ar2
   04DB 8C 05              1343 	mov	ar5,r4
   04DD BC 0A 00           1344 	cjne	r4,#0x0A,00108$
   04E0                    1345 00108$:
   04E0 50 3A              1346 	jnc	00103$
                           1347 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:66: uart_put_char(uart_ASCII[key]);
   04E2 ED                 1348 	mov	a,r5
   04E3 90s00r00           1349 	mov	dptr,#_uart_ASCII
   04E6 93                 1350 	movc	a,@a+dptr
   04E7 F5 82              1351 	mov	dpl,a
   04E9 C0 02              1352 	push	ar2
   04EB C0 03              1353 	push	ar3
   04ED C0 05              1354 	push	ar5
   04EF 12s00r19           1355 	lcall	_uart_put_char
   04F2 D0 05              1356 	pop	ar5
   04F4 D0 03              1357 	pop	ar3
   04F6 D0 02              1358 	pop	ar2
                           1359 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:68: value=value*10+key;
   04F8 C0 05              1360 	push	ar5
   04FA C0 02              1361 	push	ar2
   04FC C0 03              1362 	push	ar3
   04FE 90 00 0A           1363 	mov	dptr,#0x000A
   0501 12s00r00           1364 	lcall	__mulint
   0504 AC 82              1365 	mov	r4,dpl
   0506 AE 83              1366 	mov	r6,dph
   0508 15 81              1367 	dec	sp
   050A 15 81              1368 	dec	sp
   050C D0 05              1369 	pop	ar5
   050E 7F 00              1370 	mov	r7,#0x00
   0510 ED                 1371 	mov	a,r5
   0511 2C                 1372 	add	a,r4
   0512 FC                 1373 	mov	r4,a
   0513 EF                 1374 	mov	a,r7
   0514 3E                 1375 	addc	a,r6
   0515 FE                 1376 	mov	r6,a
   0516 8C 02              1377 	mov	ar2,r4
   0518 8E 03              1378 	mov	ar3,r6
   051A 80 B2              1379 	sjmp	00101$
   051C                    1380 00103$:
                           1381 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:70: return value;
   051C 8A 82              1382 	mov	dpl,r2
   051E 8B 83              1383 	mov	dph,r3
   0520 22                 1384 	ret
                           1385 ;------------------------------------------------------------
                           1386 ;Allocation info for local variables in function 'main'
                           1387 ;------------------------------------------------------------
                           1388 ;i                         Allocated to registers r2 r3 
                           1389 ;j                         Allocated to registers r4 r5 
                           1390 ;------------------------------------------------------------
                           1391 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:72: void main(){
                           1392 ;	-----------------------------------------
                           1393 ;	 function main
                           1394 ;	-----------------------------------------
   0521                    1395 _main:
                           1396 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:73: uart_initialize();
   0521 12s00r00           1397 	lcall	_uart_initialize
                           1398 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:74: uart_put_string("Test:\r\n");
   0524 90s00r14           1399 	mov	dptr,#__str_1
   0527 75 F0 80           1400 	mov	b,#0x80
   052A 12s00r3A           1401 	lcall	_uart_put_string
                           1402 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:75: while(1){
   052D                    1403 00102$:
                           1404 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:77: uart_put_string("First:\r\n");
   052D 90s00r1C           1405 	mov	dptr,#__str_2
   0530 75 F0 80           1406 	mov	b,#0x80
   0533 12s00r3A           1407 	lcall	_uart_put_string
                           1408 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:78: i = keypad_get_key_echo();
   0536 12s04r58           1409 	lcall	_keypad_get_key_echo
   0539 AA 82              1410 	mov	r2,dpl
   053B 7B 00              1411 	mov	r3,#0x00
                           1412 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:79: uart_put_string("Second:\r\n");
   053D 90s00r25           1413 	mov	dptr,#__str_3
   0540 75 F0 80           1414 	mov	b,#0x80
   0543 C0 02              1415 	push	ar2
   0545 C0 03              1416 	push	ar3
   0547 12s00r3A           1417 	lcall	_uart_put_string
                           1418 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:80: j = keypad_get_key_echo();
   054A 12s04r58           1419 	lcall	_keypad_get_key_echo
   054D AC 82              1420 	mov	r4,dpl
   054F D0 03              1421 	pop	ar3
   0551 D0 02              1422 	pop	ar2
   0553 7D 00              1423 	mov	r5,#0x00
                           1424 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW11\hw11.c:81: uart_put_integer(i);uart_put_string(" * ");uart_put_integer(j);uart_put_string(" = ");uart_put_integer(i*j);uart_put_string("\r\n");
   0555 8A 82              1425 	mov	dpl,r2
   0557 8B 83              1426 	mov	dph,r3
   0559 C0 02              1427 	push	ar2
   055B C0 03              1428 	push	ar3
   055D C0 04              1429 	push	ar4
   055F C0 05              1430 	push	ar5
   0561 12s03r12           1431 	lcall	_uart_put_integer
   0564 90s00r2F           1432 	mov	dptr,#__str_4
   0567 75 F0 80           1433 	mov	b,#0x80
   056A 12s00r3A           1434 	lcall	_uart_put_string
   056D D0 05              1435 	pop	ar5
   056F D0 04              1436 	pop	ar4
   0571 8C 82              1437 	mov	dpl,r4
   0573 8D 83              1438 	mov	dph,r5
   0575 C0 04              1439 	push	ar4
   0577 C0 05              1440 	push	ar5
   0579 12s03r12           1441 	lcall	_uart_put_integer
   057C 90s00r33           1442 	mov	dptr,#__str_5
   057F 75 F0 80           1443 	mov	b,#0x80
   0582 12s00r3A           1444 	lcall	_uart_put_string
   0585 D0 05              1445 	pop	ar5
   0587 D0 04              1446 	pop	ar4
   0589 D0 03              1447 	pop	ar3
   058B D0 02              1448 	pop	ar2
   058D C0 04              1449 	push	ar4
   058F C0 05              1450 	push	ar5
   0591 8A 82              1451 	mov	dpl,r2
   0593 8B 83              1452 	mov	dph,r3
   0595 12s00r00           1453 	lcall	__mulint
   0598 AA 82              1454 	mov	r2,dpl
   059A AB 83              1455 	mov	r3,dph
   059C 15 81              1456 	dec	sp
   059E 15 81              1457 	dec	sp
   05A0 8A 82              1458 	mov	dpl,r2
   05A2 8B 83              1459 	mov	dph,r3
   05A4 12s03r12           1460 	lcall	_uart_put_integer
   05A7 90s00r11           1461 	mov	dptr,#__str_0
   05AA 75 F0 80           1462 	mov	b,#0x80
   05AD 12s00r3A           1463 	lcall	_uart_put_string
   05B0 02s05r2D           1464 	ljmp	00102$
                           1465 	.area CSEG    (CODE)
                           1466 	.area CONST   (CODE)
   0000                    1467 _uart_ASCII:
   0000 30 31 32 33 34 35  1468 	.ascii "0123456789ABCDEF"
        36 37 38 39 41 42
        43 44 45 46
   0010 00                 1469 	.db 0x00
   0011                    1470 __str_0:
   0011 0D                 1471 	.db 0x0D
   0012 0A                 1472 	.db 0x0A
   0013 00                 1473 	.db 0x00
   0014                    1474 __str_1:
   0014 54 65 73 74 3A     1475 	.ascii "Test:"
   0019 0D                 1476 	.db 0x0D
   001A 0A                 1477 	.db 0x0A
   001B 00                 1478 	.db 0x00
   001C                    1479 __str_2:
   001C 46 69 72 73 74 3A  1480 	.ascii "First:"
   0022 0D                 1481 	.db 0x0D
   0023 0A                 1482 	.db 0x0A
   0024 00                 1483 	.db 0x00
   0025                    1484 __str_3:
   0025 53 65 63 6F 6E 64  1485 	.ascii "Second:"
        3A
   002C 0D                 1486 	.db 0x0D
   002D 0A                 1487 	.db 0x0A
   002E 00                 1488 	.db 0x00
   002F                    1489 __str_4:
   002F 20 2A 20           1490 	.ascii " * "
   0032 00                 1491 	.db 0x00
   0033                    1492 __str_5:
   0033 20 3D 20           1493 	.ascii " = "
   0036 00                 1494 	.db 0x00
                           1495 	.area XINIT   (CODE)
                           1496 	.area CABS    (ABS,CODE)
