                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6083 (Dec 17 2010) (MINGW32)
                              4 ; This file was generated Mon Dec 26 11:19:12 2022
                              5 ;--------------------------------------------------------
                              6 	.module SEEPRO_1
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _uart_ASCII
                             13 	.globl _ASCII
                             14 	.globl _main
                             15 	.globl _ACC_7
                             16 	.globl _CY
                             17 	.globl _AC
                             18 	.globl _F0
                             19 	.globl _RS1
                             20 	.globl _RS0
                             21 	.globl _OV
                             22 	.globl _FL
                             23 	.globl _P
                             24 	.globl _PS
                             25 	.globl _PT1
                             26 	.globl _PX1
                             27 	.globl _PT0
                             28 	.globl _PX0
                             29 	.globl _RD
                             30 	.globl _WR
                             31 	.globl _T1
                             32 	.globl _T0
                             33 	.globl _INT1
                             34 	.globl _INT0
                             35 	.globl _TXD
                             36 	.globl _RXD
                             37 	.globl _P3_7
                             38 	.globl _P3_6
                             39 	.globl _P3_5
                             40 	.globl _P3_4
                             41 	.globl _P3_3
                             42 	.globl _P3_2
                             43 	.globl _P3_1
                             44 	.globl _P3_0
                             45 	.globl _EA
                             46 	.globl _ES
                             47 	.globl _ET1
                             48 	.globl _EX1
                             49 	.globl _ET0
                             50 	.globl _EX0
                             51 	.globl _P2_7
                             52 	.globl _P2_6
                             53 	.globl _P2_5
                             54 	.globl _P2_4
                             55 	.globl _P2_3
                             56 	.globl _P2_2
                             57 	.globl _P2_1
                             58 	.globl _P2_0
                             59 	.globl _SM0
                             60 	.globl _SM1
                             61 	.globl _SM2
                             62 	.globl _REN
                             63 	.globl _TB8
                             64 	.globl _RB8
                             65 	.globl _TI
                             66 	.globl _RI
                             67 	.globl _P1_7
                             68 	.globl _P1_6
                             69 	.globl _P1_5
                             70 	.globl _P1_4
                             71 	.globl _P1_3
                             72 	.globl _P1_2
                             73 	.globl _P1_1
                             74 	.globl _P1_0
                             75 	.globl _TF1
                             76 	.globl _TR1
                             77 	.globl _TF0
                             78 	.globl _TR0
                             79 	.globl _IE1
                             80 	.globl _IT1
                             81 	.globl _IE0
                             82 	.globl _IT0
                             83 	.globl _P0_7
                             84 	.globl _P0_6
                             85 	.globl _P0_5
                             86 	.globl _P0_4
                             87 	.globl _P0_3
                             88 	.globl _P0_2
                             89 	.globl _P0_1
                             90 	.globl _P0_0
                             91 	.globl _F1
                             92 	.globl _B
                             93 	.globl _A
                             94 	.globl _ACC
                             95 	.globl _PSW
                             96 	.globl _IP
                             97 	.globl _P3
                             98 	.globl _IE
                             99 	.globl _P2
                            100 	.globl _SBUF
                            101 	.globl _SCON
                            102 	.globl _P1
                            103 	.globl _TH1
                            104 	.globl _TH0
                            105 	.globl _TL1
                            106 	.globl _TL0
                            107 	.globl _TMOD
                            108 	.globl _TCON
                            109 	.globl _PCON
                            110 	.globl _DPH
                            111 	.globl _DPL
                            112 	.globl _SP
                            113 	.globl _P0
                            114 	.globl _clcd_initialize
                            115 	.globl _clcd_write_instruction
                            116 	.globl _clcd_wait
                            117 	.globl _clcd_cls
                            118 	.globl _clcd_set_cursor
                            119 	.globl _clcd_put_char
                            120 	.globl _clcd_put_string
                            121 	.globl _clcd_put_byte
                            122 	.globl _clcd_put_word
                            123 	.globl _i2s
                            124 	.globl _clcd_put_int
                            125 	.globl _i2c_start
                            126 	.globl _i2c_stop
                            127 	.globl _i2c_shift_out
                            128 	.globl _i2c_shift_in
                            129 	.globl _seeprom_write_byte
                            130 	.globl _seeprom_read_byte
                            131 	.globl _uart_initialize
                            132 	.globl _uart_put_char
                            133 	.globl _uart_get_char
                            134 	.globl _uart_get_char_echo
                            135 	.globl _uart_put_string
                            136 	.globl _uart_get_string
                            137 	.globl _uart_i2s
                            138 	.globl _uart_s2i
                            139 	.globl _uart_put_integer
                            140 	.globl _uart_get_integer
                            141 	.globl _uart_put_byte
                            142 	.globl _uart_put_word
                            143 	.globl _uart_get_nibble
                            144 	.globl _uart_get_byte
                            145 	.globl _uart_get_word
                            146 	.globl _delay
                            147 ;--------------------------------------------------------
                            148 ; special function registers
                            149 ;--------------------------------------------------------
                            150 	.area RSEG    (ABS,DATA)
   0000                     151 	.org 0x0000
                    0080    152 _P0	=	0x0080
                    0081    153 _SP	=	0x0081
                    0082    154 _DPL	=	0x0082
                    0083    155 _DPH	=	0x0083
                    0087    156 _PCON	=	0x0087
                    0088    157 _TCON	=	0x0088
                    0089    158 _TMOD	=	0x0089
                    008A    159 _TL0	=	0x008a
                    008B    160 _TL1	=	0x008b
                    008C    161 _TH0	=	0x008c
                    008D    162 _TH1	=	0x008d
                    0090    163 _P1	=	0x0090
                    0098    164 _SCON	=	0x0098
                    0099    165 _SBUF	=	0x0099
                    00A0    166 _P2	=	0x00a0
                    00A8    167 _IE	=	0x00a8
                    00B0    168 _P3	=	0x00b0
                    00B8    169 _IP	=	0x00b8
                    00D0    170 _PSW	=	0x00d0
                    00E0    171 _ACC	=	0x00e0
                    00E0    172 _A	=	0x00e0
                    00F0    173 _B	=	0x00f0
                            174 ;--------------------------------------------------------
                            175 ; special function bits
                            176 ;--------------------------------------------------------
                            177 	.area RSEG    (ABS,DATA)
   0000                     178 	.org 0x0000
                    00D1    179 _F1	=	0x00d1
                    0080    180 _P0_0	=	0x0080
                    0081    181 _P0_1	=	0x0081
                    0082    182 _P0_2	=	0x0082
                    0083    183 _P0_3	=	0x0083
                    0084    184 _P0_4	=	0x0084
                    0085    185 _P0_5	=	0x0085
                    0086    186 _P0_6	=	0x0086
                    0087    187 _P0_7	=	0x0087
                    0088    188 _IT0	=	0x0088
                    0089    189 _IE0	=	0x0089
                    008A    190 _IT1	=	0x008a
                    008B    191 _IE1	=	0x008b
                    008C    192 _TR0	=	0x008c
                    008D    193 _TF0	=	0x008d
                    008E    194 _TR1	=	0x008e
                    008F    195 _TF1	=	0x008f
                    0090    196 _P1_0	=	0x0090
                    0091    197 _P1_1	=	0x0091
                    0092    198 _P1_2	=	0x0092
                    0093    199 _P1_3	=	0x0093
                    0094    200 _P1_4	=	0x0094
                    0095    201 _P1_5	=	0x0095
                    0096    202 _P1_6	=	0x0096
                    0097    203 _P1_7	=	0x0097
                    0098    204 _RI	=	0x0098
                    0099    205 _TI	=	0x0099
                    009A    206 _RB8	=	0x009a
                    009B    207 _TB8	=	0x009b
                    009C    208 _REN	=	0x009c
                    009D    209 _SM2	=	0x009d
                    009E    210 _SM1	=	0x009e
                    009F    211 _SM0	=	0x009f
                    00A0    212 _P2_0	=	0x00a0
                    00A1    213 _P2_1	=	0x00a1
                    00A2    214 _P2_2	=	0x00a2
                    00A3    215 _P2_3	=	0x00a3
                    00A4    216 _P2_4	=	0x00a4
                    00A5    217 _P2_5	=	0x00a5
                    00A6    218 _P2_6	=	0x00a6
                    00A7    219 _P2_7	=	0x00a7
                    00A8    220 _EX0	=	0x00a8
                    00A9    221 _ET0	=	0x00a9
                    00AA    222 _EX1	=	0x00aa
                    00AB    223 _ET1	=	0x00ab
                    00AC    224 _ES	=	0x00ac
                    00AF    225 _EA	=	0x00af
                    00B0    226 _P3_0	=	0x00b0
                    00B1    227 _P3_1	=	0x00b1
                    00B2    228 _P3_2	=	0x00b2
                    00B3    229 _P3_3	=	0x00b3
                    00B4    230 _P3_4	=	0x00b4
                    00B5    231 _P3_5	=	0x00b5
                    00B6    232 _P3_6	=	0x00b6
                    00B7    233 _P3_7	=	0x00b7
                    00B0    234 _RXD	=	0x00b0
                    00B1    235 _TXD	=	0x00b1
                    00B2    236 _INT0	=	0x00b2
                    00B3    237 _INT1	=	0x00b3
                    00B4    238 _T0	=	0x00b4
                    00B5    239 _T1	=	0x00b5
                    00B6    240 _WR	=	0x00b6
                    00B7    241 _RD	=	0x00b7
                    00B8    242 _PX0	=	0x00b8
                    00B9    243 _PT0	=	0x00b9
                    00BA    244 _PX1	=	0x00ba
                    00BB    245 _PT1	=	0x00bb
                    00BC    246 _PS	=	0x00bc
                    00D0    247 _P	=	0x00d0
                    00D1    248 _FL	=	0x00d1
                    00D2    249 _OV	=	0x00d2
                    00D3    250 _RS0	=	0x00d3
                    00D4    251 _RS1	=	0x00d4
                    00D5    252 _F0	=	0x00d5
                    00D6    253 _AC	=	0x00d6
                    00D7    254 _CY	=	0x00d7
                    00E7    255 _ACC_7	=	0x00e7
                            256 ;--------------------------------------------------------
                            257 ; overlayable register banks
                            258 ;--------------------------------------------------------
                            259 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     260 	.ds 8
                            261 ;--------------------------------------------------------
                            262 ; internal ram data
                            263 ;--------------------------------------------------------
                            264 	.area DSEG    (DATA)
                            265 ;--------------------------------------------------------
                            266 ; overlayable items in internal ram 
                            267 ;--------------------------------------------------------
                            268 	.area OSEG    (OVR,DATA)
                            269 ;--------------------------------------------------------
                            270 ; Stack segment in internal ram 
                            271 ;--------------------------------------------------------
                            272 	.area	SSEG	(DATA)
   0000                     273 __start__stack:
   0000                     274 	.ds	1
                            275 
                            276 ;--------------------------------------------------------
                            277 ; indirectly addressable internal ram data
                            278 ;--------------------------------------------------------
                            279 	.area ISEG    (DATA)
                            280 ;--------------------------------------------------------
                            281 ; absolute internal ram data
                            282 ;--------------------------------------------------------
                            283 	.area IABS    (ABS,DATA)
                            284 	.area IABS    (ABS,DATA)
                            285 ;--------------------------------------------------------
                            286 ; bit data
                            287 ;--------------------------------------------------------
                            288 	.area BSEG    (BIT)
                            289 ;--------------------------------------------------------
                            290 ; paged external ram data
                            291 ;--------------------------------------------------------
                            292 	.area PSEG    (PAG,XDATA)
                            293 ;--------------------------------------------------------
                            294 ; external ram data
                            295 ;--------------------------------------------------------
                            296 	.area XSEG    (XDATA)
                            297 ;--------------------------------------------------------
                            298 ; absolute external ram data
                            299 ;--------------------------------------------------------
                            300 	.area XABS    (ABS,XDATA)
                            301 ;--------------------------------------------------------
                            302 ; external initialized ram data
                            303 ;--------------------------------------------------------
                            304 	.area XISEG   (XDATA)
                            305 	.area HOME    (CODE)
                            306 	.area GSINIT0 (CODE)
                            307 	.area GSINIT1 (CODE)
                            308 	.area GSINIT2 (CODE)
                            309 	.area GSINIT3 (CODE)
                            310 	.area GSINIT4 (CODE)
                            311 	.area GSINIT5 (CODE)
                            312 	.area GSINIT  (CODE)
                            313 	.area GSFINAL (CODE)
                            314 	.area CSEG    (CODE)
                            315 ;--------------------------------------------------------
                            316 ; interrupt vector 
                            317 ;--------------------------------------------------------
                            318 	.area HOME    (CODE)
   0000                     319 __interrupt_vect:
   0000 02s00r00            320 	ljmp	__sdcc_gsinit_startup
                            321 ;--------------------------------------------------------
                            322 ; global & static initialisations
                            323 ;--------------------------------------------------------
                            324 	.area HOME    (CODE)
                            325 	.area GSINIT  (CODE)
                            326 	.area GSFINAL (CODE)
                            327 	.area GSINIT  (CODE)
                            328 	.globl __sdcc_gsinit_startup
                            329 	.globl __sdcc_program_startup
                            330 	.globl __start__stack
                            331 	.globl __mcs51_genXINIT
                            332 	.globl __mcs51_genXRAMCLEAR
                            333 	.globl __mcs51_genRAMCLEAR
                            334 	.area GSFINAL (CODE)
   0000 02s00r03            335 	ljmp	__sdcc_program_startup
                            336 ;--------------------------------------------------------
                            337 ; Home
                            338 ;--------------------------------------------------------
                            339 	.area HOME    (CODE)
                            340 	.area HOME    (CODE)
   0003                     341 __sdcc_program_startup:
   0003 12s0Ar69            342 	lcall	_main
                            343 ;	return from main will lock up
   0006 80 FE               344 	sjmp .
                            345 ;--------------------------------------------------------
                            346 ; code
                            347 ;--------------------------------------------------------
                            348 	.area CSEG    (CODE)
                            349 ;------------------------------------------------------------
                            350 ;Allocation info for local variables in function 'clcd_initialize'
                            351 ;------------------------------------------------------------
                            352 ;------------------------------------------------------------
                            353 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:25: void clcd_initialize(void) {
                            354 ;	-----------------------------------------
                            355 ;	 function clcd_initialize
                            356 ;	-----------------------------------------
   0000                     357 _clcd_initialize:
                    0002    358 	ar2 = 0x02
                    0003    359 	ar3 = 0x03
                    0004    360 	ar4 = 0x04
                    0005    361 	ar5 = 0x05
                    0006    362 	ar6 = 0x06
                    0007    363 	ar7 = 0x07
                    0000    364 	ar0 = 0x00
                    0001    365 	ar1 = 0x01
                            366 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:26: clcd_write_instruction(0x38);  // 8-bit interface, 2 lines, 5x7 dots
   0000 75 82 38            367 	mov	dpl,#0x38
   0003 12s00r18            368 	lcall	_clcd_write_instruction
                            369 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:27: clcd_write_instruction(0x0F);  // display on, cursor on, cursor blinking
   0006 75 82 0F            370 	mov	dpl,#0x0F
   0009 12s00r18            371 	lcall	_clcd_write_instruction
                            372 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:28: clcd_write_instruction(0x06);  // move cursor right when read/write
   000C 75 82 06            373 	mov	dpl,#0x06
   000F 12s00r18            374 	lcall	_clcd_write_instruction
                            375 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:29: clcd_write_instruction(0x01);  // clear display, cursor home
   0012 75 82 01            376 	mov	dpl,#0x01
   0015 02s00r18            377 	ljmp	_clcd_write_instruction
                            378 ;------------------------------------------------------------
                            379 ;Allocation info for local variables in function 'clcd_write_instruction'
                            380 ;------------------------------------------------------------
                            381 ;instruction               Allocated to registers r2 
                            382 ;------------------------------------------------------------
                            383 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:32: void clcd_write_instruction(unsigned char instruction) {
                            384 ;	-----------------------------------------
                            385 ;	 function clcd_write_instruction
                            386 ;	-----------------------------------------
   0018                     387 _clcd_write_instruction:
   0018 AA 82               388 	mov	r2,dpl
                            389 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:33: clcd_wait();
   001A C0 02               390 	push	ar2
   001C 12s00r2C            391 	lcall	_clcd_wait
   001F D0 02               392 	pop	ar2
                            393 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:34: CLCD_RS = 0;
   0021 C2 A0               394 	clr	_P2_0
                            395 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:35: CLCD_RW = 0;
   0023 C2 A1               396 	clr	_P2_1
                            397 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:36: CLCD_DB = instruction;
   0025 8A 90               398 	mov	_P1,r2
                            399 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:37: CLCD_E = 1;
   0027 D2 A2               400 	setb	_P2_2
                            401 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:38: CLCD_E = 0;
   0029 C2 A2               402 	clr	_P2_2
   002B 22                  403 	ret
                            404 ;------------------------------------------------------------
                            405 ;Allocation info for local variables in function 'clcd_wait'
                            406 ;------------------------------------------------------------
                            407 ;------------------------------------------------------------
                            408 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:41: void clcd_wait(void) {
                            409 ;	-----------------------------------------
                            410 ;	 function clcd_wait
                            411 ;	-----------------------------------------
   002C                     412 _clcd_wait:
                            413 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:42: CLCD_DB = 0xFF;
   002C 75 90 FF            414 	mov	_P1,#0xFF
                            415 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:43: CLCD_RS = 0;
   002F C2 A0               416 	clr	_P2_0
                            417 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:44: CLCD_RW = 1;
   0031 D2 A1               418 	setb	_P2_1
                            419 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:45: do {
   0033                     420 00101$:
                            421 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:46: CLCD_E = 1;
   0033 D2 A2               422 	setb	_P2_2
                            423 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:47: ACC = CLCD_DB;
   0035 85 90 E0            424 	mov	_ACC,_P1
                            425 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:48: CLCD_E = 0;
   0038 C2 A2               426 	clr	_P2_2
   003A 20 E7 F6            427 	jb	_ACC_7,00101$
   003D 22                  428 	ret
                            429 ;------------------------------------------------------------
                            430 ;Allocation info for local variables in function 'clcd_cls'
                            431 ;------------------------------------------------------------
                            432 ;------------------------------------------------------------
                            433 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:52: void clcd_cls(void) {
                            434 ;	-----------------------------------------
                            435 ;	 function clcd_cls
                            436 ;	-----------------------------------------
   003E                     437 _clcd_cls:
                            438 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:53: clcd_write_instruction(0x01);
   003E 75 82 01            439 	mov	dpl,#0x01
   0041 02s00r18            440 	ljmp	_clcd_write_instruction
                            441 ;------------------------------------------------------------
                            442 ;Allocation info for local variables in function 'clcd_set_cursor'
                            443 ;------------------------------------------------------------
                            444 ;column                    Allocated to stack - offset -4
                            445 ;row                       Allocated to registers r2 r3 
                            446 ;instruction               Allocated to registers r4 r5 
                            447 ;------------------------------------------------------------
                            448 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:56: void clcd_set_cursor(unsigned int row, unsigned int column) {
                            449 ;	-----------------------------------------
                            450 ;	 function clcd_set_cursor
                            451 ;	-----------------------------------------
   0044                     452 _clcd_set_cursor:
   0044 C0*00               453 	push	_bp
   0046 85 81*00            454 	mov	_bp,sp
   0049 AA 82               455 	mov	r2,dpl
   004B AB 83               456 	mov	r3,dph
                            457 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:57: unsigned int instruction = 0x80;
   004D 7C 80               458 	mov	r4,#0x80
   004F 7D 00               459 	mov	r5,#0x00
                            460 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:58: if (row == 1)
   0051 BA 01 07            461 	cjne	r2,#0x01,00102$
   0054 BB 00 04            462 	cjne	r3,#0x00,00102$
                            463 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:59: instruction += 0x40;
   0057 7C C0               464 	mov	r4,#0xC0
   0059 7D 00               465 	mov	r5,#0x00
   005B                     466 00102$:
                            467 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:60: instruction += column;
   005B E5*00               468 	mov	a,_bp
   005D 24 FC               469 	add	a,#0xfc
   005F F8                  470 	mov	r0,a
   0060 E6                  471 	mov	a,@r0
   0061 2C                  472 	add	a,r4
   0062 FC                  473 	mov	r4,a
   0063 08                  474 	inc	r0
   0064 E6                  475 	mov	a,@r0
   0065 3D                  476 	addc	a,r5
                            477 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:61: clcd_write_instruction(instruction);
   0066 8C 82               478 	mov	dpl,r4
   0068 12s00r18            479 	lcall	_clcd_write_instruction
   006B D0*00               480 	pop	_bp
   006D 22                  481 	ret
                            482 ;------------------------------------------------------------
                            483 ;Allocation info for local variables in function 'clcd_put_char'
                            484 ;------------------------------------------------------------
                            485 ;c                         Allocated to registers r2 
                            486 ;------------------------------------------------------------
                            487 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:64: void clcd_put_char(char c) {
                            488 ;	-----------------------------------------
                            489 ;	 function clcd_put_char
                            490 ;	-----------------------------------------
   006E                     491 _clcd_put_char:
   006E AA 82               492 	mov	r2,dpl
                            493 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:65: clcd_wait();
   0070 C0 02               494 	push	ar2
   0072 12s00r2C            495 	lcall	_clcd_wait
   0075 D0 02               496 	pop	ar2
                            497 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:66: CLCD_RS = 1;
   0077 D2 A0               498 	setb	_P2_0
                            499 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:67: CLCD_RW = 0;
   0079 C2 A1               500 	clr	_P2_1
                            501 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:68: CLCD_DB = c;
   007B 8A 90               502 	mov	_P1,r2
                            503 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:69: CLCD_E = 1;
   007D D2 A2               504 	setb	_P2_2
                            505 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:70: CLCD_E = 0;
   007F C2 A2               506 	clr	_P2_2
   0081 22                  507 	ret
                            508 ;------------------------------------------------------------
                            509 ;Allocation info for local variables in function 'clcd_put_string'
                            510 ;------------------------------------------------------------
                            511 ;s                         Allocated to registers r2 r3 r4 
                            512 ;------------------------------------------------------------
                            513 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:73: void clcd_put_string(char* s) {
                            514 ;	-----------------------------------------
                            515 ;	 function clcd_put_string
                            516 ;	-----------------------------------------
   0082                     517 _clcd_put_string:
   0082 AA 82               518 	mov	r2,dpl
   0084 AB 83               519 	mov	r3,dph
   0086 AC F0               520 	mov	r4,b
                            521 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:74: while (*s != 0) {
   0088                     522 00101$:
   0088 8A 82               523 	mov	dpl,r2
   008A 8B 83               524 	mov	dph,r3
   008C 8C F0               525 	mov	b,r4
   008E 12s00r00            526 	lcall	__gptrget
   0091 FD                  527 	mov	r5,a
   0092 60 18               528 	jz	00104$
                            529 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:75: clcd_put_char(*s);
   0094 8D 82               530 	mov	dpl,r5
   0096 C0 02               531 	push	ar2
   0098 C0 03               532 	push	ar3
   009A C0 04               533 	push	ar4
   009C 12s00r6E            534 	lcall	_clcd_put_char
   009F D0 04               535 	pop	ar4
   00A1 D0 03               536 	pop	ar3
   00A3 D0 02               537 	pop	ar2
                            538 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:76: s++;
   00A5 0A                  539 	inc	r2
   00A6 BA 00 DF            540 	cjne	r2,#0x00,00101$
   00A9 0B                  541 	inc	r3
   00AA 80 DC               542 	sjmp	00101$
   00AC                     543 00104$:
   00AC 22                  544 	ret
                            545 ;------------------------------------------------------------
                            546 ;Allocation info for local variables in function 'clcd_put_byte'
                            547 ;------------------------------------------------------------
                            548 ;byte_data                 Allocated to registers r2 
                            549 ;------------------------------------------------------------
                            550 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:80: void clcd_put_byte(unsigned char byte_data) {
                            551 ;	-----------------------------------------
                            552 ;	 function clcd_put_byte
                            553 ;	-----------------------------------------
   00AD                     554 _clcd_put_byte:
                            555 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:81: clcd_put_char(ASCII[byte_data / 16]);
   00AD E5 82               556 	mov	a,dpl
   00AF FA                  557 	mov	r2,a
   00B0 C4                  558 	swap	a
   00B1 54 0F               559 	anl	a,#0x0f
   00B3 90s00r00            560 	mov	dptr,#_ASCII
   00B6 93                  561 	movc	a,@a+dptr
   00B7 F5 82               562 	mov	dpl,a
   00B9 C0 02               563 	push	ar2
   00BB 12s00r6E            564 	lcall	_clcd_put_char
   00BE D0 02               565 	pop	ar2
                            566 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:82: clcd_put_char(ASCII[byte_data % 16]);
   00C0 74 0F               567 	mov	a,#0x0F
   00C2 5A                  568 	anl	a,r2
   00C3 90s00r00            569 	mov	dptr,#_ASCII
   00C6 93                  570 	movc	a,@a+dptr
   00C7 F5 82               571 	mov	dpl,a
   00C9 02s00r6E            572 	ljmp	_clcd_put_char
                            573 ;------------------------------------------------------------
                            574 ;Allocation info for local variables in function 'clcd_put_word'
                            575 ;------------------------------------------------------------
                            576 ;word_data                 Allocated to registers r2 r3 
                            577 ;------------------------------------------------------------
                            578 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:85: void clcd_put_word(unsigned int word_data) {
                            579 ;	-----------------------------------------
                            580 ;	 function clcd_put_word
                            581 ;	-----------------------------------------
   00CC                     582 _clcd_put_word:
   00CC AA 82               583 	mov	r2,dpl
   00CE AB 83               584 	mov	r3,dph
                            585 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:86: clcd_put_byte(word_data / 256);
   00D0 8B 04               586 	mov	ar4,r3
   00D2 8C 82               587 	mov	dpl,r4
   00D4 C0 02               588 	push	ar2
   00D6 C0 03               589 	push	ar3
   00D8 12s00rAD            590 	lcall	_clcd_put_byte
   00DB D0 03               591 	pop	ar3
   00DD D0 02               592 	pop	ar2
                            593 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:87: clcd_put_byte(word_data % 256);
   00DF 8A 82               594 	mov	dpl,r2
   00E1 02s00rAD            595 	ljmp	_clcd_put_byte
                            596 ;------------------------------------------------------------
                            597 ;Allocation info for local variables in function 'i2s'
                            598 ;------------------------------------------------------------
                            599 ;s                         Allocated to stack - offset -5
                            600 ;i                         Allocated to stack - offset 1
                            601 ;sign                      Allocated to stack - offset 3
                            602 ;len                       Allocated to registers r6 
                            603 ;p                         Allocated to stack - offset 4
                            604 ;sloc0                     Allocated to stack - offset 8
                            605 ;sloc1                     Allocated to stack - offset 7
                            606 ;sloc2                     Allocated to stack - offset 8
                            607 ;------------------------------------------------------------
                            608 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:90: void i2s(int i, char* s) {
                            609 ;	-----------------------------------------
                            610 ;	 function i2s
                            611 ;	-----------------------------------------
   00E4                     612 _i2s:
   00E4 C0*00               613 	push	_bp
   00E6 85 81*00            614 	mov	_bp,sp
   00E9 C0 82               615 	push	dpl
   00EB C0 83               616 	push	dph
   00ED E5 81               617 	mov	a,sp
   00EF 24 0A               618 	add	a,#0x0a
   00F1 F5 81               619 	mov	sp,a
                            620 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:94: sign = '+';
   00F3 E5*00               621 	mov	a,_bp
   00F5 24 03               622 	add	a,#0x03
   00F7 F8                  623 	mov	r0,a
   00F8 76 2B               624 	mov	@r0,#0x2B
                            625 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:96: p = s;
   00FA E5*00               626 	mov	a,_bp
   00FC 24 FB               627 	add	a,#0xfb
   00FE F8                  628 	mov	r0,a
   00FF E5*00               629 	mov	a,_bp
   0101 24 04               630 	add	a,#0x04
   0103 F9                  631 	mov	r1,a
   0104 E6                  632 	mov	a,@r0
   0105 F7                  633 	mov	@r1,a
   0106 08                  634 	inc	r0
   0107 09                  635 	inc	r1
   0108 E6                  636 	mov	a,@r0
   0109 F7                  637 	mov	@r1,a
   010A 08                  638 	inc	r0
   010B 09                  639 	inc	r1
   010C E6                  640 	mov	a,@r0
   010D F7                  641 	mov	@r1,a
                            642 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:97: if (i < 0) {
   010E A8*00               643 	mov	r0,_bp
   0110 08                  644 	inc	r0
   0111 08                  645 	inc	r0
   0112 E6                  646 	mov	a,@r0
   0113 30 E7 12            647 	jnb	acc.7,00115$
                            648 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:98: sign = '-';
   0116 E5*00               649 	mov	a,_bp
   0118 24 03               650 	add	a,#0x03
   011A F8                  651 	mov	r0,a
   011B 76 2D               652 	mov	@r0,#0x2D
                            653 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:99: i = -i;
   011D A8*00               654 	mov	r0,_bp
   011F 08                  655 	inc	r0
   0120 C3                  656 	clr	c
   0121 E4                  657 	clr	a
   0122 96                  658 	subb	a,@r0
   0123 F6                  659 	mov	@r0,a
   0124 08                  660 	inc	r0
   0125 E4                  661 	clr	a
   0126 96                  662 	subb	a,@r0
   0127 F6                  663 	mov	@r0,a
                            664 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:101: do {
   0128                     665 00115$:
   0128 E5*00               666 	mov	a,_bp
   012A 24 04               667 	add	a,#0x04
   012C F8                  668 	mov	r0,a
   012D 86 04               669 	mov	ar4,@r0
   012F 08                  670 	inc	r0
   0130 86 02               671 	mov	ar2,@r0
   0132 08                  672 	inc	r0
   0133 86 03               673 	mov	ar3,@r0
   0135 7D 00               674 	mov	r5,#0x00
   0137                     675 00103$:
                            676 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:102: *s = (i % 10) + '0';
   0137 C0 02               677 	push	ar2
   0139 C0 03               678 	push	ar3
   013B C0 04               679 	push	ar4
   013D C0 05               680 	push	ar5
   013F 74 0A               681 	mov	a,#0x0A
   0141 C0 E0               682 	push	acc
   0143 E4                  683 	clr	a
   0144 C0 E0               684 	push	acc
   0146 A8*00               685 	mov	r0,_bp
   0148 08                  686 	inc	r0
   0149 86 82               687 	mov	dpl,@r0
   014B 08                  688 	inc	r0
   014C 86 83               689 	mov	dph,@r0
   014E 12s00r00            690 	lcall	__modsint
   0151 AE 82               691 	mov	r6,dpl
   0153 15 81               692 	dec	sp
   0155 15 81               693 	dec	sp
   0157 D0 05               694 	pop	ar5
   0159 D0 04               695 	pop	ar4
   015B D0 03               696 	pop	ar3
   015D D0 02               697 	pop	ar2
   015F 74 30               698 	mov	a,#0x30
   0161 2E                  699 	add	a,r6
   0162 8C 82               700 	mov	dpl,r4
   0164 8A 83               701 	mov	dph,r2
   0166 8B F0               702 	mov	b,r3
   0168 12s00r00            703 	lcall	__gptrput
   016B A3                  704 	inc	dptr
   016C AC 82               705 	mov	r4,dpl
   016E AA 83               706 	mov	r2,dph
                            707 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:103: s++;
                            708 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:104: len++;
   0170 0D                  709 	inc	r5
   0171 8D 06               710 	mov	ar6,r5
                            711 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:105: i /= 10;
   0173 C0 02               712 	push	ar2
   0175 C0 03               713 	push	ar3
   0177 C0 04               714 	push	ar4
   0179 C0 05               715 	push	ar5
   017B 74 0A               716 	mov	a,#0x0A
   017D C0 E0               717 	push	acc
   017F E4                  718 	clr	a
   0180 C0 E0               719 	push	acc
   0182 A8*00               720 	mov	r0,_bp
   0184 08                  721 	inc	r0
   0185 86 82               722 	mov	dpl,@r0
   0187 08                  723 	inc	r0
   0188 86 83               724 	mov	dph,@r0
   018A 12s00r00            725 	lcall	__divsint
   018D A8*00               726 	mov	r0,_bp
   018F 08                  727 	inc	r0
   0190 A6 82               728 	mov	@r0,dpl
   0192 08                  729 	inc	r0
   0193 A6 83               730 	mov	@r0,dph
   0195 15 81               731 	dec	sp
   0197 15 81               732 	dec	sp
   0199 D0 05               733 	pop	ar5
   019B D0 04               734 	pop	ar4
   019D D0 03               735 	pop	ar3
   019F D0 02               736 	pop	ar2
                            737 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:106: } while (i != 0);
   01A1 A8*00               738 	mov	r0,_bp
   01A3 08                  739 	inc	r0
   01A4 E6                  740 	mov	a,@r0
   01A5 08                  741 	inc	r0
   01A6 46                  742 	orl	a,@r0
   01A7 70 8E               743 	jnz	00103$
                            744 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:107: if (sign == '-') {
   01A9 8D 06               745 	mov	ar6,r5
   01AB E5*00               746 	mov	a,_bp
   01AD 24 03               747 	add	a,#0x03
   01AF F8                  748 	mov	r0,a
   01B0 B6 2D 0E            749 	cjne	@r0,#0x2D,00119$
                            750 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:108: *s = '-';
   01B3 8C 82               751 	mov	dpl,r4
   01B5 8A 83               752 	mov	dph,r2
   01B7 8B F0               753 	mov	b,r3
   01B9 74 2D               754 	mov	a,#0x2D
   01BB 12s00r00            755 	lcall	__gptrput
                            756 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:110: len++;
   01BE ED                  757 	mov	a,r5
   01BF 04                  758 	inc	a
   01C0 FE                  759 	mov	r6,a
                            760 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:112: for (i = 0; i < len / 2; i++) {
   01C1                     761 00119$:
   01C1 EE                  762 	mov	a,r6
   01C2 C3                  763 	clr	c
   01C3 13                  764 	rrc	a
   01C4 FA                  765 	mov	r2,a
   01C5 A8*00               766 	mov	r0,_bp
   01C7 08                  767 	inc	r0
   01C8 E4                  768 	clr	a
   01C9 F6                  769 	mov	@r0,a
   01CA 08                  770 	inc	r0
   01CB F6                  771 	mov	@r0,a
   01CC                     772 00108$:
   01CC 8A 05               773 	mov	ar5,r2
   01CE 7F 00               774 	mov	r7,#0x00
   01D0 A8*00               775 	mov	r0,_bp
   01D2 08                  776 	inc	r0
   01D3 C3                  777 	clr	c
   01D4 E6                  778 	mov	a,@r0
   01D5 9D                  779 	subb	a,r5
   01D6 08                  780 	inc	r0
   01D7 E6                  781 	mov	a,@r0
   01D8 64 80               782 	xrl	a,#0x80
   01DA 8F F0               783 	mov	b,r7
   01DC 63 F0 80            784 	xrl	b,#0x80
   01DF 95 F0               785 	subb	a,b
   01E1 40 03               786 	jc	00126$
   01E3 02s02r9D            787 	ljmp	00111$
   01E6                     788 00126$:
                            789 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:113: p[len] = p[i];
   01E6 C0 02               790 	push	ar2
   01E8 E5*00               791 	mov	a,_bp
   01EA 24 04               792 	add	a,#0x04
   01EC F8                  793 	mov	r0,a
   01ED EE                  794 	mov	a,r6
   01EE 26                  795 	add	a,@r0
   01EF FB                  796 	mov	r3,a
   01F0 E4                  797 	clr	a
   01F1 08                  798 	inc	r0
   01F2 36                  799 	addc	a,@r0
   01F3 FC                  800 	mov	r4,a
   01F4 08                  801 	inc	r0
   01F5 86 05               802 	mov	ar5,@r0
   01F7 E5*00               803 	mov	a,_bp
   01F9 24 04               804 	add	a,#0x04
   01FB F8                  805 	mov	r0,a
   01FC A9*00               806 	mov	r1,_bp
   01FE 09                  807 	inc	r1
   01FF E7                  808 	mov	a,@r1
   0200 26                  809 	add	a,@r0
   0201 C0 E0               810 	push	acc
   0203 09                  811 	inc	r1
   0204 E7                  812 	mov	a,@r1
   0205 08                  813 	inc	r0
   0206 36                  814 	addc	a,@r0
   0207 C0 E0               815 	push	acc
   0209 08                  816 	inc	r0
   020A E6                  817 	mov	a,@r0
   020B C0 E0               818 	push	acc
   020D E5*00               819 	mov	a,_bp
   020F 24 0A               820 	add	a,#0x0a
   0211 F8                  821 	mov	r0,a
   0212 D0 E0               822 	pop	acc
   0214 F6                  823 	mov	@r0,a
   0215 18                  824 	dec	r0
   0216 D0 E0               825 	pop	acc
   0218 F6                  826 	mov	@r0,a
   0219 18                  827 	dec	r0
   021A D0 E0               828 	pop	acc
   021C F6                  829 	mov	@r0,a
   021D E5*00               830 	mov	a,_bp
   021F 24 08               831 	add	a,#0x08
   0221 F8                  832 	mov	r0,a
   0222 86 82               833 	mov	dpl,@r0
   0224 08                  834 	inc	r0
   0225 86 83               835 	mov	dph,@r0
   0227 08                  836 	inc	r0
   0228 86 F0               837 	mov	b,@r0
   022A E5*00               838 	mov	a,_bp
   022C 24 07               839 	add	a,#0x07
   022E F9                  840 	mov	r1,a
   022F 12s00r00            841 	lcall	__gptrget
   0232 F7                  842 	mov	@r1,a
   0233 8B 82               843 	mov	dpl,r3
   0235 8C 83               844 	mov	dph,r4
   0237 8D F0               845 	mov	b,r5
   0239 E5*00               846 	mov	a,_bp
   023B 24 07               847 	add	a,#0x07
   023D F8                  848 	mov	r0,a
   023E E6                  849 	mov	a,@r0
   023F 12s00r00            850 	lcall	__gptrput
                            851 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:114: p[i] = p[len - 1 - i];
   0242 8E 07               852 	mov	ar7,r6
   0244 7D 00               853 	mov	r5,#0x00
   0246 1F                  854 	dec	r7
   0247 BF FF 01            855 	cjne	r7,#0xff,00127$
   024A 1D                  856 	dec	r5
   024B                     857 00127$:
   024B A8*00               858 	mov	r0,_bp
   024D 08                  859 	inc	r0
   024E EF                  860 	mov	a,r7
   024F C3                  861 	clr	c
   0250 96                  862 	subb	a,@r0
   0251 FF                  863 	mov	r7,a
   0252 ED                  864 	mov	a,r5
   0253 08                  865 	inc	r0
   0254 96                  866 	subb	a,@r0
   0255 FD                  867 	mov	r5,a
   0256 E5*00               868 	mov	a,_bp
   0258 24 04               869 	add	a,#0x04
   025A F8                  870 	mov	r0,a
   025B EF                  871 	mov	a,r7
   025C 26                  872 	add	a,@r0
   025D FF                  873 	mov	r7,a
   025E ED                  874 	mov	a,r5
   025F 08                  875 	inc	r0
   0260 36                  876 	addc	a,@r0
   0261 FD                  877 	mov	r5,a
   0262 08                  878 	inc	r0
   0263 86 02               879 	mov	ar2,@r0
   0265 8F 82               880 	mov	dpl,r7
   0267 8D 83               881 	mov	dph,r5
   0269 8A F0               882 	mov	b,r2
   026B 12s00r00            883 	lcall	__gptrget
   026E FB                  884 	mov	r3,a
   026F E5*00               885 	mov	a,_bp
   0271 24 08               886 	add	a,#0x08
   0273 F8                  887 	mov	r0,a
   0274 86 82               888 	mov	dpl,@r0
   0276 08                  889 	inc	r0
   0277 86 83               890 	mov	dph,@r0
   0279 08                  891 	inc	r0
   027A 86 F0               892 	mov	b,@r0
   027C EB                  893 	mov	a,r3
   027D 12s00r00            894 	lcall	__gptrput
                            895 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:115: p[len - 1 - i] = p[len];
   0280 8F 82               896 	mov	dpl,r7
   0282 8D 83               897 	mov	dph,r5
   0284 8A F0               898 	mov	b,r2
   0286 E5*00               899 	mov	a,_bp
   0288 24 07               900 	add	a,#0x07
   028A F8                  901 	mov	r0,a
   028B E6                  902 	mov	a,@r0
   028C 12s00r00            903 	lcall	__gptrput
                            904 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:112: for (i = 0; i < len / 2; i++) {
   028F A8*00               905 	mov	r0,_bp
   0291 08                  906 	inc	r0
   0292 06                  907 	inc	@r0
   0293 B6 00 02            908 	cjne	@r0,#0x00,00128$
   0296 08                  909 	inc	r0
   0297 06                  910 	inc	@r0
   0298                     911 00128$:
   0298 D0 02               912 	pop	ar2
   029A 02s01rCC            913 	ljmp	00108$
   029D                     914 00111$:
                            915 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:117: p[len] = 0;
   029D E5*00               916 	mov	a,_bp
   029F 24 04               917 	add	a,#0x04
   02A1 F8                  918 	mov	r0,a
   02A2 EE                  919 	mov	a,r6
   02A3 26                  920 	add	a,@r0
   02A4 FE                  921 	mov	r6,a
   02A5 E4                  922 	clr	a
   02A6 08                  923 	inc	r0
   02A7 36                  924 	addc	a,@r0
   02A8 FA                  925 	mov	r2,a
   02A9 08                  926 	inc	r0
   02AA 86 03               927 	mov	ar3,@r0
   02AC 8E 82               928 	mov	dpl,r6
   02AE 8A 83               929 	mov	dph,r2
   02B0 8B F0               930 	mov	b,r3
   02B2 E4                  931 	clr	a
   02B3 12s00r00            932 	lcall	__gptrput
   02B6 85*00 81            933 	mov	sp,_bp
   02B9 D0*00               934 	pop	_bp
   02BB 22                  935 	ret
                            936 ;------------------------------------------------------------
                            937 ;Allocation info for local variables in function 'clcd_put_int'
                            938 ;------------------------------------------------------------
                            939 ;i                         Allocated to registers r2 r3 
                            940 ;s                         Allocated to stack - offset 1
                            941 ;------------------------------------------------------------
                            942 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:120: void clcd_put_int(int i) {
                            943 ;	-----------------------------------------
                            944 ;	 function clcd_put_int
                            945 ;	-----------------------------------------
   02BC                     946 _clcd_put_int:
   02BC C0*00               947 	push	_bp
   02BE E5 81               948 	mov	a,sp
   02C0 F5*00               949 	mov	_bp,a
   02C2 24 07               950 	add	a,#0x07
   02C4 F5 81               951 	mov	sp,a
   02C6 AA 82               952 	mov	r2,dpl
   02C8 AB 83               953 	mov	r3,dph
                            954 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:122: i2s(i, s);
   02CA AC*00               955 	mov	r4,_bp
   02CC 0C                  956 	inc	r4
   02CD 8C 05               957 	mov	ar5,r4
   02CF 7E 00               958 	mov	r6,#0x00
   02D1 7F 40               959 	mov	r7,#0x40
   02D3 C0 04               960 	push	ar4
   02D5 C0 05               961 	push	ar5
   02D7 C0 06               962 	push	ar6
   02D9 C0 07               963 	push	ar7
   02DB 8A 82               964 	mov	dpl,r2
   02DD 8B 83               965 	mov	dph,r3
   02DF 12s00rE4            966 	lcall	_i2s
   02E2 15 81               967 	dec	sp
   02E4 15 81               968 	dec	sp
   02E6 15 81               969 	dec	sp
   02E8 D0 04               970 	pop	ar4
                            971 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/clcd.c:123: clcd_put_string(s);
   02EA 7A 00               972 	mov	r2,#0x00
   02EC 7B 40               973 	mov	r3,#0x40
   02EE 8C 82               974 	mov	dpl,r4
   02F0 8A 83               975 	mov	dph,r2
   02F2 8B F0               976 	mov	b,r3
   02F4 12s00r82            977 	lcall	_clcd_put_string
   02F7 85*00 81            978 	mov	sp,_bp
   02FA D0*00               979 	pop	_bp
   02FC 22                  980 	ret
                            981 ;------------------------------------------------------------
                            982 ;Allocation info for local variables in function 'i2c_start'
                            983 ;------------------------------------------------------------
                            984 ;------------------------------------------------------------
                            985 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:16: unsigned char i2c_start(void) {
                            986 ;	-----------------------------------------
                            987 ;	 function i2c_start
                            988 ;	-----------------------------------------
   02FD                     989 _i2c_start:
                            990 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:17: SDA = 1;
   02FD D2 81               991 	setb	_P0_1
                            992 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:18: SCL = 1;
   02FF D2 80               993 	setb	_P0_0
                            994 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:19: if (SDA == 0) return (i2c_ER);
   0301 20 81 04            995 	jb	_P0_1,00102$
   0304 75 82 01            996 	mov	dpl,#0x01
   0307 22                  997 	ret
   0308                     998 00102$:
                            999 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:20: if (SCL == 0) return (i2c_ER);
   0308 20 80 04           1000 	jb	_P0_0,00104$
   030B 75 82 01           1001 	mov	dpl,#0x01
   030E 22                 1002 	ret
   030F                    1003 00104$:
                           1004 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:21: SDA = 0;
   030F C2 81              1005 	clr	_P0_1
                           1006 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:22: SCL=0;
   0311 C2 80              1007 	clr	_P0_0
                           1008 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:23: return (i2c_OK);
   0313 75 82 00           1009 	mov	dpl,#0x00
   0316 22                 1010 	ret
                           1011 ;------------------------------------------------------------
                           1012 ;Allocation info for local variables in function 'i2c_stop'
                           1013 ;------------------------------------------------------------
                           1014 ;------------------------------------------------------------
                           1015 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:26: void i2c_stop(void) {
                           1016 ;	-----------------------------------------
                           1017 ;	 function i2c_stop
                           1018 ;	-----------------------------------------
   0317                    1019 _i2c_stop:
                           1020 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:27: SDA = 0; SCL = 1; SDA = 1;
   0317 C2 81              1021 	clr	_P0_1
   0319 D2 80              1022 	setb	_P0_0
   031B D2 81              1023 	setb	_P0_1
   031D 22                 1024 	ret
                           1025 ;------------------------------------------------------------
                           1026 ;Allocation info for local variables in function 'i2c_shift_out'
                           1027 ;------------------------------------------------------------
                           1028 ;buffer                    Allocated to registers r2 
                           1029 ;i                         Allocated to registers r3 
                           1030 ;ack                       Allocated to registers 
                           1031 ;------------------------------------------------------------
                           1032 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:30: unsigned char i2c_shift_out(unsigned char buffer) {
                           1033 ;	-----------------------------------------
                           1034 ;	 function i2c_shift_out
                           1035 ;	-----------------------------------------
   031E                    1036 _i2c_shift_out:
   031E AA 82              1037 	mov	r2,dpl
                           1038 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:33: for (i = 0; i < 8; i++) {
   0320 7B 00              1039 	mov	r3,#0x00
   0322                    1040 00104$:
   0322 BB 08 00           1041 	cjne	r3,#0x08,00114$
   0325                    1042 00114$:
   0325 50 15              1043 	jnc	00107$
                           1044 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:34: if (buffer >= 128) SDA = 1; else SDA = 0;
   0327 BA 80 00           1045 	cjne	r2,#0x80,00116$
   032A                    1046 00116$:
   032A 40 04              1047 	jc	00102$
   032C D2 81              1048 	setb	_P0_1
   032E 80 02              1049 	sjmp	00103$
   0330                    1050 00102$:
   0330 C2 81              1051 	clr	_P0_1
   0332                    1052 00103$:
                           1053 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:35: SCL = 1; SCL = 0;
   0332 D2 80              1054 	setb	_P0_0
   0334 C2 80              1055 	clr	_P0_0
                           1056 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:36: buffer *= 2;
   0336 EA                 1057 	mov	a,r2
   0337 2A                 1058 	add	a,r2
   0338 FA                 1059 	mov	r2,a
                           1060 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:33: for (i = 0; i < 8; i++) {
   0339 0B                 1061 	inc	r3
   033A 80 E6              1062 	sjmp	00104$
   033C                    1063 00107$:
                           1064 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:38: SDA = 1; SCL = 1; ack = SDA; SCL = 0;
   033C D2 81              1065 	setb	_P0_1
   033E D2 80              1066 	setb	_P0_0
   0340 A2 81              1067 	mov	c,_P0_1
   0342 E4                 1068 	clr	a
   0343 33                 1069 	rlc	a
   0344 F5 82              1070 	mov	dpl,a
   0346 C2 80              1071 	clr	_P0_0
                           1072 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:39: return ack;
   0348 22                 1073 	ret
                           1074 ;------------------------------------------------------------
                           1075 ;Allocation info for local variables in function 'i2c_shift_in'
                           1076 ;------------------------------------------------------------
                           1077 ;ack                       Allocated to registers r2 
                           1078 ;i                         Allocated to registers r4 
                           1079 ;buffer                    Allocated to registers r3 
                           1080 ;------------------------------------------------------------
                           1081 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:42: unsigned char i2c_shift_in(unsigned char ack) {
                           1082 ;	-----------------------------------------
                           1083 ;	 function i2c_shift_in
                           1084 ;	-----------------------------------------
   0349                    1085 _i2c_shift_in:
   0349 AA 82              1086 	mov	r2,dpl
                           1087 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:44: unsigned char buffer = 0;
   034B 7B 00              1088 	mov	r3,#0x00
                           1089 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:45: SDA = 1;
   034D D2 81              1090 	setb	_P0_1
                           1091 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:46: for (i = 0; i < 8; i++) {
   034F 7C 00              1092 	mov	r4,#0x00
   0351                    1093 00103$:
   0351 BC 08 00           1094 	cjne	r4,#0x08,00113$
   0354                    1095 00113$:
   0354 50 0E              1096 	jnc	00106$
                           1097 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:47: buffer *= 2;
   0356 EB                 1098 	mov	a,r3
   0357 2B                 1099 	add	a,r3
   0358 FB                 1100 	mov	r3,a
                           1101 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:48: SCL = 1;
   0359 D2 80              1102 	setb	_P0_0
                           1103 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:49: if (SDA == 1) buffer += 1;
   035B 30 81 01           1104 	jnb	_P0_1,00102$
   035E 0B                 1105 	inc	r3
   035F                    1106 00102$:
                           1107 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:50: SCL = 0;
   035F C2 80              1108 	clr	_P0_0
                           1109 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:46: for (i = 0; i < 8; i++) {
   0361 0C                 1110 	inc	r4
   0362 80 ED              1111 	sjmp	00103$
   0364                    1112 00106$:
                           1113 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:52: SDA = ack;
   0364 EA                 1114 	mov	a,r2
   0365 24 FF              1115 	add	a,#0xff
   0367 92 81              1116 	mov	_P0_1,c
                           1117 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:53: SCL = 1; SCL = 0;
   0369 D2 80              1118 	setb	_P0_0
   036B C2 80              1119 	clr	_P0_0
                           1120 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/i2c.c:54: return buffer;
   036D 8B 82              1121 	mov	dpl,r3
   036F 22                 1122 	ret
                           1123 ;------------------------------------------------------------
                           1124 ;Allocation info for local variables in function 'seeprom_write_byte'
                           1125 ;------------------------------------------------------------
                           1126 ;seeprom_memory_address    Allocated to stack - offset -4
                           1127 ;seeprom_byte_data         Allocated to stack - offset -5
                           1128 ;seeprom_device_address    Allocated to registers r2 
                           1129 ;------------------------------------------------------------
                           1130 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:8: void seeprom_write_byte(unsigned char seeprom_device_address, unsigned int seeprom_memory_address, unsigned char seeprom_byte_data)
                           1131 ;	-----------------------------------------
                           1132 ;	 function seeprom_write_byte
                           1133 ;	-----------------------------------------
   0370                    1134 _seeprom_write_byte:
   0370 C0*00              1135 	push	_bp
   0372 85 81*00           1136 	mov	_bp,sp
                           1137 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:10: seeprom_write_byte_start:
   0375 E5 82              1138 	mov	a,dpl
   0377 25 82              1139 	add	a,dpl
   0379 FA                 1140 	mov	r2,a
   037A 43 02 A0           1141 	orl	ar2,#0xA0
   037D E5*00              1142 	mov	a,_bp
   037F 24 FC              1143 	add	a,#0xfc
   0381 F8                 1144 	mov	r0,a
   0382 08                 1145 	inc	r0
   0383 86 03              1146 	mov	ar3,@r0
   0385 7C 00              1147 	mov	r4,#0x00
   0387 E5*00              1148 	mov	a,_bp
   0389 24 FC              1149 	add	a,#0xfc
   038B F8                 1150 	mov	r0,a
   038C 86 05              1151 	mov	ar5,@r0
   038E 7E 00              1152 	mov	r6,#0x00
   0390                    1153 00101$:
                           1154 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:11: if(i2c_start()==i2c_ER)
   0390 C0 02              1155 	push	ar2
   0392 C0 03              1156 	push	ar3
   0394 C0 04              1157 	push	ar4
   0396 C0 05              1158 	push	ar5
   0398 C0 06              1159 	push	ar6
   039A 12s02rFD           1160 	lcall	_i2c_start
   039D AF 82              1161 	mov	r7,dpl
   039F D0 06              1162 	pop	ar6
   03A1 D0 05              1163 	pop	ar5
   03A3 D0 04              1164 	pop	ar4
   03A5 D0 03              1165 	pop	ar3
   03A7 D0 02              1166 	pop	ar2
   03A9 BF 01 02           1167 	cjne	r7,#0x01,00120$
   03AC 80 E2              1168 	sjmp	00101$
   03AE                    1169 00120$:
                           1170 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:13: if(i2c_shift_out(0xA0|(seeprom_device_address*2+0))==i2c_NACK)
   03AE 8A 82              1171 	mov	dpl,r2
   03B0 C0 02              1172 	push	ar2
   03B2 C0 03              1173 	push	ar3
   03B4 C0 04              1174 	push	ar4
   03B6 C0 05              1175 	push	ar5
   03B8 C0 06              1176 	push	ar6
   03BA 12s03r1E           1177 	lcall	_i2c_shift_out
   03BD AF 82              1178 	mov	r7,dpl
   03BF D0 06              1179 	pop	ar6
   03C1 D0 05              1180 	pop	ar5
   03C3 D0 04              1181 	pop	ar4
   03C5 D0 03              1182 	pop	ar3
   03C7 D0 02              1183 	pop	ar2
   03C9 BF 01 19           1184 	cjne	r7,#0x01,00105$
                           1185 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:14: {i2c_stop();goto seeprom_write_byte_start;}
   03CC C0 02              1186 	push	ar2
   03CE C0 03              1187 	push	ar3
   03D0 C0 04              1188 	push	ar4
   03D2 C0 05              1189 	push	ar5
   03D4 C0 06              1190 	push	ar6
   03D6 12s03r17           1191 	lcall	_i2c_stop
   03D9 D0 06              1192 	pop	ar6
   03DB D0 05              1193 	pop	ar5
   03DD D0 04              1194 	pop	ar4
   03DF D0 03              1195 	pop	ar3
   03E1 D0 02              1196 	pop	ar2
   03E3 80 AB              1197 	sjmp	00101$
   03E5                    1198 00105$:
                           1199 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:15: if(i2c_shift_out(seeprom_memory_address/256)==i2c_NACK)
   03E5 8B 82              1200 	mov	dpl,r3
   03E7 C0 02              1201 	push	ar2
   03E9 C0 03              1202 	push	ar3
   03EB C0 04              1203 	push	ar4
   03ED C0 05              1204 	push	ar5
   03EF C0 06              1205 	push	ar6
   03F1 12s03r1E           1206 	lcall	_i2c_shift_out
   03F4 AF 82              1207 	mov	r7,dpl
   03F6 D0 06              1208 	pop	ar6
   03F8 D0 05              1209 	pop	ar5
   03FA D0 04              1210 	pop	ar4
   03FC D0 03              1211 	pop	ar3
   03FE D0 02              1212 	pop	ar2
   0400 BF 01 1A           1213 	cjne	r7,#0x01,00107$
                           1214 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:16: {i2c_stop();goto seeprom_write_byte_start;}
   0403 C0 02              1215 	push	ar2
   0405 C0 03              1216 	push	ar3
   0407 C0 04              1217 	push	ar4
   0409 C0 05              1218 	push	ar5
   040B C0 06              1219 	push	ar6
   040D 12s03r17           1220 	lcall	_i2c_stop
   0410 D0 06              1221 	pop	ar6
   0412 D0 05              1222 	pop	ar5
   0414 D0 04              1223 	pop	ar4
   0416 D0 03              1224 	pop	ar3
   0418 D0 02              1225 	pop	ar2
   041A 02s03r90           1226 	ljmp	00101$
   041D                    1227 00107$:
                           1228 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:17: if(i2c_shift_out(seeprom_memory_address%256)==i2c_NACK)
   041D 8D 82              1229 	mov	dpl,r5
   041F C0 02              1230 	push	ar2
   0421 C0 03              1231 	push	ar3
   0423 C0 04              1232 	push	ar4
   0425 C0 05              1233 	push	ar5
   0427 C0 06              1234 	push	ar6
   0429 12s03r1E           1235 	lcall	_i2c_shift_out
   042C AF 82              1236 	mov	r7,dpl
   042E D0 06              1237 	pop	ar6
   0430 D0 05              1238 	pop	ar5
   0432 D0 04              1239 	pop	ar4
   0434 D0 03              1240 	pop	ar3
   0436 D0 02              1241 	pop	ar2
   0438 BF 01 1A           1242 	cjne	r7,#0x01,00109$
                           1243 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:18: {i2c_stop();goto seeprom_write_byte_start;}
   043B C0 02              1244 	push	ar2
   043D C0 03              1245 	push	ar3
   043F C0 04              1246 	push	ar4
   0441 C0 05              1247 	push	ar5
   0443 C0 06              1248 	push	ar6
   0445 12s03r17           1249 	lcall	_i2c_stop
   0448 D0 06              1250 	pop	ar6
   044A D0 05              1251 	pop	ar5
   044C D0 04              1252 	pop	ar4
   044E D0 03              1253 	pop	ar3
   0450 D0 02              1254 	pop	ar2
   0452 02s03r90           1255 	ljmp	00101$
   0455                    1256 00109$:
                           1257 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:19: if(i2c_shift_out(seeprom_byte_data)==i2c_NACK)
   0455 E5*00              1258 	mov	a,_bp
   0457 24 FB              1259 	add	a,#0xfb
   0459 F8                 1260 	mov	r0,a
   045A 86 82              1261 	mov	dpl,@r0
   045C C0 02              1262 	push	ar2
   045E C0 03              1263 	push	ar3
   0460 C0 04              1264 	push	ar4
   0462 C0 05              1265 	push	ar5
   0464 C0 06              1266 	push	ar6
   0466 12s03r1E           1267 	lcall	_i2c_shift_out
   0469 AF 82              1268 	mov	r7,dpl
   046B D0 06              1269 	pop	ar6
   046D D0 05              1270 	pop	ar5
   046F D0 04              1271 	pop	ar4
   0471 D0 03              1272 	pop	ar3
   0473 D0 02              1273 	pop	ar2
   0475 BF 01 1A           1274 	cjne	r7,#0x01,00111$
                           1275 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:20: {i2c_stop();goto seeprom_write_byte_start;}
   0478 C0 02              1276 	push	ar2
   047A C0 03              1277 	push	ar3
   047C C0 04              1278 	push	ar4
   047E C0 05              1279 	push	ar5
   0480 C0 06              1280 	push	ar6
   0482 12s03r17           1281 	lcall	_i2c_stop
   0485 D0 06              1282 	pop	ar6
   0487 D0 05              1283 	pop	ar5
   0489 D0 04              1284 	pop	ar4
   048B D0 03              1285 	pop	ar3
   048D D0 02              1286 	pop	ar2
   048F 02s03r90           1287 	ljmp	00101$
   0492                    1288 00111$:
                           1289 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:21: i2c_stop();
   0492 12s03r17           1290 	lcall	_i2c_stop
   0495 D0*00              1291 	pop	_bp
   0497 22                 1292 	ret
                           1293 ;------------------------------------------------------------
                           1294 ;Allocation info for local variables in function 'seeprom_read_byte'
                           1295 ;------------------------------------------------------------
                           1296 ;seeprom_memory_address    Allocated to stack - offset -4
                           1297 ;seeprom_device_address    Allocated to registers r2 
                           1298 ;seeprom_byte_data         Allocated to registers r2 
                           1299 ;------------------------------------------------------------
                           1300 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:24: unsigned char seeprom_read_byte(unsigned char seeprom_device_address, unsigned int seeprom_memory_address)
                           1301 ;	-----------------------------------------
                           1302 ;	 function seeprom_read_byte
                           1303 ;	-----------------------------------------
   0498                    1304 _seeprom_read_byte:
   0498 C0*00              1305 	push	_bp
   049A 85 81*00           1306 	mov	_bp,sp
                           1307 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:27: seeprom_read_byte_start:
   049D E5 82              1308 	mov	a,dpl
   049F 25 82              1309 	add	a,dpl
   04A1 FA                 1310 	mov	r2,a
   04A2 74 A0              1311 	mov	a,#0xA0
   04A4 4A                 1312 	orl	a,r2
   04A5 FB                 1313 	mov	r3,a
   04A6 E5*00              1314 	mov	a,_bp
   04A8 24 FC              1315 	add	a,#0xfc
   04AA F8                 1316 	mov	r0,a
   04AB 08                 1317 	inc	r0
   04AC 86 04              1318 	mov	ar4,@r0
   04AE 7D 00              1319 	mov	r5,#0x00
   04B0 E5*00              1320 	mov	a,_bp
   04B2 24 FC              1321 	add	a,#0xfc
   04B4 F8                 1322 	mov	r0,a
   04B5 86 06              1323 	mov	ar6,@r0
   04B7 7F 00              1324 	mov	r7,#0x00
   04B9 EA                 1325 	mov	a,r2
   04BA 04                 1326 	inc	a
   04BB 44 A0              1327 	orl	a,#0xA0
   04BD FA                 1328 	mov	r2,a
   04BE                    1329 00101$:
                           1330 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:28: if(i2c_start()==i2c_ER)
   04BE C0 02              1331 	push	ar2
   04C0 C0 03              1332 	push	ar3
   04C2 C0 04              1333 	push	ar4
   04C4 C0 05              1334 	push	ar5
   04C6 C0 06              1335 	push	ar6
   04C8 C0 07              1336 	push	ar7
   04CA 12s02rFD           1337 	lcall	_i2c_start
   04CD AA 82              1338 	mov	r2,dpl
   04CF D0 07              1339 	pop	ar7
   04D1 D0 06              1340 	pop	ar6
   04D3 D0 05              1341 	pop	ar5
   04D5 D0 04              1342 	pop	ar4
   04D7 D0 03              1343 	pop	ar3
   04D9 BA 01 04           1344 	cjne	r2,#0x01,00123$
   04DC D0 02              1345 	pop	ar2
   04DE 80 DE              1346 	sjmp	00101$
   04E0                    1347 00123$:
                           1348 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:30: if(i2c_shift_out(0xA0|(seeprom_device_address*2+0))==i2c_NACK)
   04E0 8B 82              1349 	mov	dpl,r3
   04E2 C0 03              1350 	push	ar3
   04E4 C0 04              1351 	push	ar4
   04E6 C0 05              1352 	push	ar5
   04E8 C0 06              1353 	push	ar6
   04EA C0 07              1354 	push	ar7
   04EC 12s03r1E           1355 	lcall	_i2c_shift_out
   04EF AA 82              1356 	mov	r2,dpl
   04F1 D0 07              1357 	pop	ar7
   04F3 D0 06              1358 	pop	ar6
   04F5 D0 05              1359 	pop	ar5
   04F7 D0 04              1360 	pop	ar4
   04F9 D0 03              1361 	pop	ar3
   04FB BA 01 02           1362 	cjne	r2,#0x01,00124$
   04FE 80 04              1363 	sjmp	00125$
   0500                    1364 00124$:
   0500 D0 02              1365 	pop	ar2
   0502 80 1B              1366 	sjmp	00105$
   0504                    1367 00125$:
                           1368 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:31: {i2c_stop();goto seeprom_read_byte_start;}
   0504 C0 03              1369 	push	ar3
   0506 C0 04              1370 	push	ar4
   0508 C0 05              1371 	push	ar5
   050A C0 06              1372 	push	ar6
   050C C0 07              1373 	push	ar7
   050E 12s03r17           1374 	lcall	_i2c_stop
   0511 D0 07              1375 	pop	ar7
   0513 D0 06              1376 	pop	ar6
   0515 D0 05              1377 	pop	ar5
   0517 D0 04              1378 	pop	ar4
   0519 D0 03              1379 	pop	ar3
   051B D0 02              1380 	pop	ar2
   051D 80 9F              1381 	sjmp	00101$
   051F                    1382 00105$:
                           1383 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:32: if(i2c_shift_out(seeprom_memory_address/256)==i2c_NACK)
   051F C0 02              1384 	push	ar2
   0521 8C 82              1385 	mov	dpl,r4
   0523 C0 03              1386 	push	ar3
   0525 C0 04              1387 	push	ar4
   0527 C0 05              1388 	push	ar5
   0529 C0 06              1389 	push	ar6
   052B C0 07              1390 	push	ar7
   052D 12s03r1E           1391 	lcall	_i2c_shift_out
   0530 AA 82              1392 	mov	r2,dpl
   0532 D0 07              1393 	pop	ar7
   0534 D0 06              1394 	pop	ar6
   0536 D0 05              1395 	pop	ar5
   0538 D0 04              1396 	pop	ar4
   053A D0 03              1397 	pop	ar3
   053C BA 01 02           1398 	cjne	r2,#0x01,00126$
   053F 80 04              1399 	sjmp	00127$
   0541                    1400 00126$:
   0541 D0 02              1401 	pop	ar2
   0543 80 1C              1402 	sjmp	00107$
   0545                    1403 00127$:
                           1404 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:33: {i2c_stop();goto seeprom_read_byte_start;}
   0545 C0 03              1405 	push	ar3
   0547 C0 04              1406 	push	ar4
   0549 C0 05              1407 	push	ar5
   054B C0 06              1408 	push	ar6
   054D C0 07              1409 	push	ar7
   054F 12s03r17           1410 	lcall	_i2c_stop
   0552 D0 07              1411 	pop	ar7
   0554 D0 06              1412 	pop	ar6
   0556 D0 05              1413 	pop	ar5
   0558 D0 04              1414 	pop	ar4
   055A D0 03              1415 	pop	ar3
   055C D0 02              1416 	pop	ar2
   055E 02s04rBE           1417 	ljmp	00101$
   0561                    1418 00107$:
                           1419 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:34: if(i2c_shift_out(seeprom_memory_address%256)==i2c_NACK)
   0561 C0 02              1420 	push	ar2
   0563 8E 82              1421 	mov	dpl,r6
   0565 C0 03              1422 	push	ar3
   0567 C0 04              1423 	push	ar4
   0569 C0 05              1424 	push	ar5
   056B C0 06              1425 	push	ar6
   056D C0 07              1426 	push	ar7
   056F 12s03r1E           1427 	lcall	_i2c_shift_out
   0572 AA 82              1428 	mov	r2,dpl
   0574 D0 07              1429 	pop	ar7
   0576 D0 06              1430 	pop	ar6
   0578 D0 05              1431 	pop	ar5
   057A D0 04              1432 	pop	ar4
   057C D0 03              1433 	pop	ar3
   057E BA 01 02           1434 	cjne	r2,#0x01,00128$
   0581 80 04              1435 	sjmp	00129$
   0583                    1436 00128$:
   0583 D0 02              1437 	pop	ar2
   0585 80 1C              1438 	sjmp	00109$
   0587                    1439 00129$:
                           1440 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:35: {i2c_stop();goto seeprom_read_byte_start;}
   0587 C0 03              1441 	push	ar3
   0589 C0 04              1442 	push	ar4
   058B C0 05              1443 	push	ar5
   058D C0 06              1444 	push	ar6
   058F C0 07              1445 	push	ar7
   0591 12s03r17           1446 	lcall	_i2c_stop
   0594 D0 07              1447 	pop	ar7
   0596 D0 06              1448 	pop	ar6
   0598 D0 05              1449 	pop	ar5
   059A D0 04              1450 	pop	ar4
   059C D0 03              1451 	pop	ar3
   059E D0 02              1452 	pop	ar2
   05A0 02s04rBE           1453 	ljmp	00101$
   05A3                    1454 00109$:
                           1455 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:36: if(i2c_start()==i2c_ER)
   05A3 C0 02              1456 	push	ar2
   05A5 C0 03              1457 	push	ar3
   05A7 C0 04              1458 	push	ar4
   05A9 C0 05              1459 	push	ar5
   05AB C0 06              1460 	push	ar6
   05AD C0 07              1461 	push	ar7
   05AF 12s02rFD           1462 	lcall	_i2c_start
   05B2 AA 82              1463 	mov	r2,dpl
   05B4 D0 07              1464 	pop	ar7
   05B6 D0 06              1465 	pop	ar6
   05B8 D0 05              1466 	pop	ar5
   05BA D0 04              1467 	pop	ar4
   05BC D0 03              1468 	pop	ar3
   05BE BA 01 05           1469 	cjne	r2,#0x01,00130$
   05C1 D0 02              1470 	pop	ar2
   05C3 02s04rBE           1471 	ljmp	00101$
   05C6                    1472 00130$:
   05C6 D0 02              1473 	pop	ar2
                           1474 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:38: if(i2c_shift_out(0xA0|(seeprom_device_address*2+1))==i2c_NACK)
   05C8 C0 03              1475 	push	ar3
   05CA 8A 82              1476 	mov	dpl,r2
   05CC C0 02              1477 	push	ar2
   05CE C0 04              1478 	push	ar4
   05D0 C0 05              1479 	push	ar5
   05D2 C0 06              1480 	push	ar6
   05D4 C0 07              1481 	push	ar7
   05D6 12s03r1E           1482 	lcall	_i2c_shift_out
   05D9 AB 82              1483 	mov	r3,dpl
   05DB D0 07              1484 	pop	ar7
   05DD D0 06              1485 	pop	ar6
   05DF D0 05              1486 	pop	ar5
   05E1 D0 04              1487 	pop	ar4
   05E3 D0 02              1488 	pop	ar2
   05E5 BB 01 02           1489 	cjne	r3,#0x01,00131$
   05E8 80 04              1490 	sjmp	00132$
   05EA                    1491 00131$:
   05EA D0 03              1492 	pop	ar3
   05EC 80 20              1493 	sjmp	00113$
   05EE                    1494 00132$:
   05EE D0 03              1495 	pop	ar3
                           1496 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:39: {i2c_stop();goto seeprom_read_byte_start;}
   05F0 C0 02              1497 	push	ar2
   05F2 C0 03              1498 	push	ar3
   05F4 C0 04              1499 	push	ar4
   05F6 C0 05              1500 	push	ar5
   05F8 C0 06              1501 	push	ar6
   05FA C0 07              1502 	push	ar7
   05FC 12s03r17           1503 	lcall	_i2c_stop
   05FF D0 07              1504 	pop	ar7
   0601 D0 06              1505 	pop	ar6
   0603 D0 05              1506 	pop	ar5
   0605 D0 04              1507 	pop	ar4
   0607 D0 03              1508 	pop	ar3
   0609 D0 02              1509 	pop	ar2
   060B 02s04rBE           1510 	ljmp	00101$
   060E                    1511 00113$:
                           1512 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:40: seeprom_byte_data=i2c_shift_in(i2c_NACK);
   060E 75 82 01           1513 	mov	dpl,#0x01
   0611 12s03r49           1514 	lcall	_i2c_shift_in
   0614 AA 82              1515 	mov	r2,dpl
                           1516 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:41: i2c_stop();
   0616 C0 02              1517 	push	ar2
   0618 12s03r17           1518 	lcall	_i2c_stop
   061B D0 02              1519 	pop	ar2
                           1520 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/seeprom.c:42: return seeprom_byte_data;
   061D 8A 82              1521 	mov	dpl,r2
   061F D0*00              1522 	pop	_bp
   0621 22                 1523 	ret
                           1524 ;------------------------------------------------------------
                           1525 ;Allocation info for local variables in function 'uart_initialize'
                           1526 ;------------------------------------------------------------
                           1527 ;------------------------------------------------------------
                           1528 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:24: void uart_initialize(void)
                           1529 ;	-----------------------------------------
                           1530 ;	 function uart_initialize
                           1531 ;	-----------------------------------------
   0622                    1532 _uart_initialize:
                           1533 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:26: PCON&=0x7F;		// Clear SMOD of PCON, No Double Baud Rate
   0622 53 87 7F           1534 	anl	_PCON,#0x7F
                           1535 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:27: TMOD&=0x2F;TMOD|=0x20;	// Set Timer1 to Mode 2 (8-bit auto reload) for Baud Rate Generation
   0625 53 89 2F           1536 	anl	_TMOD,#0x2F
   0628 43 89 20           1537 	orl	_TMOD,#0x20
                           1538 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:28: TH1=0xFD;		// Set Baud Rate to 9600 bps for 11.0592M Hz
   062B 75 8D FD           1539 	mov	_TH1,#0xFD
                           1540 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:29: SM0=0;SM1=1;		// Set UART to Mode 1 (8-bit UART)
   062E C2 9F              1541 	clr	_SM0
   0630 D2 9E              1542 	setb	_SM1
                           1543 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:30: REN=1;			// Set REN of SCON to Enable UART Receive
   0632 D2 9C              1544 	setb	_REN
                           1545 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:31: TR1=1;			// Set TR1 of TCON to Start Timer1
   0634 D2 8E              1546 	setb	_TR1
                           1547 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:32: TI=0;RI=0;		// Clear TI/RI of SCON to Get Ready to Send/Receive
   0636 C2 99              1548 	clr	_TI
   0638 C2 98              1549 	clr	_RI
   063A 22                 1550 	ret
                           1551 ;------------------------------------------------------------
                           1552 ;Allocation info for local variables in function 'uart_put_char'
                           1553 ;------------------------------------------------------------
                           1554 ;c                         Allocated to registers 
                           1555 ;------------------------------------------------------------
                           1556 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:35: void uart_put_char(char c)	// Put Character to UART
                           1557 ;	-----------------------------------------
                           1558 ;	 function uart_put_char
                           1559 ;	-----------------------------------------
   063B                    1560 _uart_put_char:
   063B 85 82 99           1561 	mov	_SBUF,dpl
                           1562 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:38: while(TI==0);TI=0;
   063E                    1563 00101$:
   063E 10 99 02           1564 	jbc	_TI,00108$
   0641 80 FB              1565 	sjmp	00101$
   0643                    1566 00108$:
   0643 22                 1567 	ret
                           1568 ;------------------------------------------------------------
                           1569 ;Allocation info for local variables in function 'uart_get_char'
                           1570 ;------------------------------------------------------------
                           1571 ;------------------------------------------------------------
                           1572 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:41: char uart_get_char(void)	// Get Character from UART
                           1573 ;	-----------------------------------------
                           1574 ;	 function uart_get_char
                           1575 ;	-----------------------------------------
   0644                    1576 _uart_get_char:
                           1577 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:43: while(RI==0);RI=0;
   0644                    1578 00101$:
   0644 10 98 02           1579 	jbc	_RI,00108$
   0647 80 FB              1580 	sjmp	00101$
   0649                    1581 00108$:
                           1582 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:44: return SBUF;
   0649 85 99 82           1583 	mov	dpl,_SBUF
   064C 22                 1584 	ret
                           1585 ;------------------------------------------------------------
                           1586 ;Allocation info for local variables in function 'uart_get_char_echo'
                           1587 ;------------------------------------------------------------
                           1588 ;------------------------------------------------------------
                           1589 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:47: char uart_get_char_echo(void)	// Get Character from UART with Echo, Require uart_put_char()
                           1590 ;	-----------------------------------------
                           1591 ;	 function uart_get_char_echo
                           1592 ;	-----------------------------------------
   064D                    1593 _uart_get_char_echo:
                           1594 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:49: while(RI==0);RI=0;
   064D                    1595 00101$:
   064D 10 98 02           1596 	jbc	_RI,00108$
   0650 80 FB              1597 	sjmp	00101$
   0652                    1598 00108$:
                           1599 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:50: uart_put_char(SBUF);
   0652 85 99 82           1600 	mov	dpl,_SBUF
   0655 12s06r3B           1601 	lcall	_uart_put_char
                           1602 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:51: return SBUF;
   0658 85 99 82           1603 	mov	dpl,_SBUF
   065B 22                 1604 	ret
                           1605 ;------------------------------------------------------------
                           1606 ;Allocation info for local variables in function 'uart_put_string'
                           1607 ;------------------------------------------------------------
                           1608 ;s                         Allocated to registers r2 r3 r4 
                           1609 ;------------------------------------------------------------
                           1610 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:54: void uart_put_string(char *s)	// Put String to UART, Require uart_put_char()
                           1611 ;	-----------------------------------------
                           1612 ;	 function uart_put_string
                           1613 ;	-----------------------------------------
   065C                    1614 _uart_put_string:
   065C AA 82              1615 	mov	r2,dpl
   065E AB 83              1616 	mov	r3,dph
   0660 AC F0              1617 	mov	r4,b
                           1618 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:56: while(*s!=0){uart_put_char(*s);s++;}
   0662                    1619 00101$:
   0662 8A 82              1620 	mov	dpl,r2
   0664 8B 83              1621 	mov	dph,r3
   0666 8C F0              1622 	mov	b,r4
   0668 12s00r00           1623 	lcall	__gptrget
   066B FD                 1624 	mov	r5,a
   066C 60 18              1625 	jz	00104$
   066E 8D 82              1626 	mov	dpl,r5
   0670 C0 02              1627 	push	ar2
   0672 C0 03              1628 	push	ar3
   0674 C0 04              1629 	push	ar4
   0676 12s06r3B           1630 	lcall	_uart_put_char
   0679 D0 04              1631 	pop	ar4
   067B D0 03              1632 	pop	ar3
   067D D0 02              1633 	pop	ar2
   067F 0A                 1634 	inc	r2
   0680 BA 00 DF           1635 	cjne	r2,#0x00,00101$
   0683 0B                 1636 	inc	r3
   0684 80 DC              1637 	sjmp	00101$
   0686                    1638 00104$:
   0686 22                 1639 	ret
                           1640 ;------------------------------------------------------------
                           1641 ;Allocation info for local variables in function 'uart_get_string'
                           1642 ;------------------------------------------------------------
                           1643 ;s                         Allocated to registers r2 r3 r4 
                           1644 ;------------------------------------------------------------
                           1645 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:59: void uart_get_string(char *s)	// Get String from UART, Require uart_get_char_echo()
                           1646 ;	-----------------------------------------
                           1647 ;	 function uart_get_string
                           1648 ;	-----------------------------------------
   0687                    1649 _uart_get_string:
   0687 AA 82              1650 	mov	r2,dpl
   0689 AB 83              1651 	mov	r3,dph
   068B AC F0              1652 	mov	r4,b
                           1653 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:61: while(((*s)=uart_get_char())!=13)s++;
   068D                    1654 00101$:
   068D C0 02              1655 	push	ar2
   068F C0 03              1656 	push	ar3
   0691 C0 04              1657 	push	ar4
   0693 12s06r44           1658 	lcall	_uart_get_char
   0696 AD 82              1659 	mov	r5,dpl
   0698 D0 04              1660 	pop	ar4
   069A D0 03              1661 	pop	ar3
   069C D0 02              1662 	pop	ar2
   069E 8A 82              1663 	mov	dpl,r2
   06A0 8B 83              1664 	mov	dph,r3
   06A2 8C F0              1665 	mov	b,r4
   06A4 ED                 1666 	mov	a,r5
   06A5 12s00r00           1667 	lcall	__gptrput
   06A8 BD 0D 02           1668 	cjne	r5,#0x0D,00109$
   06AB 80 07              1669 	sjmp	00103$
   06AD                    1670 00109$:
   06AD 0A                 1671 	inc	r2
   06AE BA 00 DC           1672 	cjne	r2,#0x00,00101$
   06B1 0B                 1673 	inc	r3
   06B2 80 D9              1674 	sjmp	00101$
   06B4                    1675 00103$:
                           1676 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:62: *s=0;
   06B4 8A 82              1677 	mov	dpl,r2
   06B6 8B 83              1678 	mov	dph,r3
   06B8 8C F0              1679 	mov	b,r4
   06BA E4                 1680 	clr	a
   06BB 02s00r00           1681 	ljmp	__gptrput
                           1682 ;------------------------------------------------------------
                           1683 ;Allocation info for local variables in function 'uart_i2s'
                           1684 ;------------------------------------------------------------
                           1685 ;s                         Allocated to stack - offset -5
                           1686 ;i                         Allocated to stack - offset 1
                           1687 ;sign                      Allocated to stack - offset 3
                           1688 ;len                       Allocated to registers r6 
                           1689 ;p                         Allocated to stack - offset 4
                           1690 ;sloc0                     Allocated to stack - offset 8
                           1691 ;sloc1                     Allocated to stack - offset 7
                           1692 ;sloc2                     Allocated to stack - offset 8
                           1693 ;------------------------------------------------------------
                           1694 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:65: void uart_i2s(int i,char *s)	// Convert Integer to String
                           1695 ;	-----------------------------------------
                           1696 ;	 function uart_i2s
                           1697 ;	-----------------------------------------
   06BE                    1698 _uart_i2s:
   06BE C0*00              1699 	push	_bp
   06C0 85 81*00           1700 	mov	_bp,sp
   06C3 C0 82              1701 	push	dpl
   06C5 C0 83              1702 	push	dph
   06C7 E5 81              1703 	mov	a,sp
   06C9 24 0A              1704 	add	a,#0x0a
   06CB F5 81              1705 	mov	sp,a
                           1706 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:68: sign='+';len=0;p=s;
   06CD E5*00              1707 	mov	a,_bp
   06CF 24 03              1708 	add	a,#0x03
   06D1 F8                 1709 	mov	r0,a
   06D2 76 2B              1710 	mov	@r0,#0x2B
   06D4 E5*00              1711 	mov	a,_bp
   06D6 24 FB              1712 	add	a,#0xfb
   06D8 F8                 1713 	mov	r0,a
   06D9 E5*00              1714 	mov	a,_bp
   06DB 24 04              1715 	add	a,#0x04
   06DD F9                 1716 	mov	r1,a
   06DE E6                 1717 	mov	a,@r0
   06DF F7                 1718 	mov	@r1,a
   06E0 08                 1719 	inc	r0
   06E1 09                 1720 	inc	r1
   06E2 E6                 1721 	mov	a,@r0
   06E3 F7                 1722 	mov	@r1,a
   06E4 08                 1723 	inc	r0
   06E5 09                 1724 	inc	r1
   06E6 E6                 1725 	mov	a,@r0
   06E7 F7                 1726 	mov	@r1,a
                           1727 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:69: if(i<0){sign='-';i=-i;}
   06E8 A8*00              1728 	mov	r0,_bp
   06EA 08                 1729 	inc	r0
   06EB 08                 1730 	inc	r0
   06EC E6                 1731 	mov	a,@r0
   06ED 30 E7 12           1732 	jnb	acc.7,00115$
   06F0 E5*00              1733 	mov	a,_bp
   06F2 24 03              1734 	add	a,#0x03
   06F4 F8                 1735 	mov	r0,a
   06F5 76 2D              1736 	mov	@r0,#0x2D
   06F7 A8*00              1737 	mov	r0,_bp
   06F9 08                 1738 	inc	r0
   06FA C3                 1739 	clr	c
   06FB E4                 1740 	clr	a
   06FC 96                 1741 	subb	a,@r0
   06FD F6                 1742 	mov	@r0,a
   06FE 08                 1743 	inc	r0
   06FF E4                 1744 	clr	a
   0700 96                 1745 	subb	a,@r0
   0701 F6                 1746 	mov	@r0,a
                           1747 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:70: do{*s=(i%10)+'0';s++;len++;i/=10;}while(i!=0);
   0702                    1748 00115$:
   0702 E5*00              1749 	mov	a,_bp
   0704 24 04              1750 	add	a,#0x04
   0706 F8                 1751 	mov	r0,a
   0707 86 04              1752 	mov	ar4,@r0
   0709 08                 1753 	inc	r0
   070A 86 02              1754 	mov	ar2,@r0
   070C 08                 1755 	inc	r0
   070D 86 03              1756 	mov	ar3,@r0
   070F 7D 00              1757 	mov	r5,#0x00
   0711                    1758 00103$:
   0711 C0 02              1759 	push	ar2
   0713 C0 03              1760 	push	ar3
   0715 C0 04              1761 	push	ar4
   0717 C0 05              1762 	push	ar5
   0719 74 0A              1763 	mov	a,#0x0A
   071B C0 E0              1764 	push	acc
   071D E4                 1765 	clr	a
   071E C0 E0              1766 	push	acc
   0720 A8*00              1767 	mov	r0,_bp
   0722 08                 1768 	inc	r0
   0723 86 82              1769 	mov	dpl,@r0
   0725 08                 1770 	inc	r0
   0726 86 83              1771 	mov	dph,@r0
   0728 12s00r00           1772 	lcall	__modsint
   072B AE 82              1773 	mov	r6,dpl
   072D 15 81              1774 	dec	sp
   072F 15 81              1775 	dec	sp
   0731 D0 05              1776 	pop	ar5
   0733 D0 04              1777 	pop	ar4
   0735 D0 03              1778 	pop	ar3
   0737 D0 02              1779 	pop	ar2
   0739 74 30              1780 	mov	a,#0x30
   073B 2E                 1781 	add	a,r6
   073C 8C 82              1782 	mov	dpl,r4
   073E 8A 83              1783 	mov	dph,r2
   0740 8B F0              1784 	mov	b,r3
   0742 12s00r00           1785 	lcall	__gptrput
   0745 A3                 1786 	inc	dptr
   0746 AC 82              1787 	mov	r4,dpl
   0748 AA 83              1788 	mov	r2,dph
   074A 0D                 1789 	inc	r5
   074B 8D 06              1790 	mov	ar6,r5
   074D C0 02              1791 	push	ar2
   074F C0 03              1792 	push	ar3
   0751 C0 04              1793 	push	ar4
   0753 C0 05              1794 	push	ar5
   0755 74 0A              1795 	mov	a,#0x0A
   0757 C0 E0              1796 	push	acc
   0759 E4                 1797 	clr	a
   075A C0 E0              1798 	push	acc
   075C A8*00              1799 	mov	r0,_bp
   075E 08                 1800 	inc	r0
   075F 86 82              1801 	mov	dpl,@r0
   0761 08                 1802 	inc	r0
   0762 86 83              1803 	mov	dph,@r0
   0764 12s00r00           1804 	lcall	__divsint
   0767 A8*00              1805 	mov	r0,_bp
   0769 08                 1806 	inc	r0
   076A A6 82              1807 	mov	@r0,dpl
   076C 08                 1808 	inc	r0
   076D A6 83              1809 	mov	@r0,dph
   076F 15 81              1810 	dec	sp
   0771 15 81              1811 	dec	sp
   0773 D0 05              1812 	pop	ar5
   0775 D0 04              1813 	pop	ar4
   0777 D0 03              1814 	pop	ar3
   0779 D0 02              1815 	pop	ar2
   077B A8*00              1816 	mov	r0,_bp
   077D 08                 1817 	inc	r0
   077E E6                 1818 	mov	a,@r0
   077F 08                 1819 	inc	r0
   0780 46                 1820 	orl	a,@r0
   0781 70 8E              1821 	jnz	00103$
                           1822 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:71: if(sign=='-'){*s='-';s++;len++;}
   0783 8D 06              1823 	mov	ar6,r5
   0785 E5*00              1824 	mov	a,_bp
   0787 24 03              1825 	add	a,#0x03
   0789 F8                 1826 	mov	r0,a
   078A B6 2D 0E           1827 	cjne	@r0,#0x2D,00119$
   078D 8C 82              1828 	mov	dpl,r4
   078F 8A 83              1829 	mov	dph,r2
   0791 8B F0              1830 	mov	b,r3
   0793 74 2D              1831 	mov	a,#0x2D
   0795 12s00r00           1832 	lcall	__gptrput
   0798 ED                 1833 	mov	a,r5
   0799 04                 1834 	inc	a
   079A FE                 1835 	mov	r6,a
                           1836 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:72: for(i=0;i<len/2;i++){p[len]=p[i];p[i]=p[len-1-i];p[len-1-i]=p[len];}
   079B                    1837 00119$:
   079B EE                 1838 	mov	a,r6
   079C C3                 1839 	clr	c
   079D 13                 1840 	rrc	a
   079E FA                 1841 	mov	r2,a
   079F A8*00              1842 	mov	r0,_bp
   07A1 08                 1843 	inc	r0
   07A2 E4                 1844 	clr	a
   07A3 F6                 1845 	mov	@r0,a
   07A4 08                 1846 	inc	r0
   07A5 F6                 1847 	mov	@r0,a
   07A6                    1848 00108$:
   07A6 8A 05              1849 	mov	ar5,r2
   07A8 7F 00              1850 	mov	r7,#0x00
   07AA A8*00              1851 	mov	r0,_bp
   07AC 08                 1852 	inc	r0
   07AD C3                 1853 	clr	c
   07AE E6                 1854 	mov	a,@r0
   07AF 9D                 1855 	subb	a,r5
   07B0 08                 1856 	inc	r0
   07B1 E6                 1857 	mov	a,@r0
   07B2 64 80              1858 	xrl	a,#0x80
   07B4 8F F0              1859 	mov	b,r7
   07B6 63 F0 80           1860 	xrl	b,#0x80
   07B9 95 F0              1861 	subb	a,b
   07BB 40 03              1862 	jc	00126$
   07BD 02s08r77           1863 	ljmp	00111$
   07C0                    1864 00126$:
   07C0 C0 02              1865 	push	ar2
   07C2 E5*00              1866 	mov	a,_bp
   07C4 24 04              1867 	add	a,#0x04
   07C6 F8                 1868 	mov	r0,a
   07C7 EE                 1869 	mov	a,r6
   07C8 26                 1870 	add	a,@r0
   07C9 FB                 1871 	mov	r3,a
   07CA E4                 1872 	clr	a
   07CB 08                 1873 	inc	r0
   07CC 36                 1874 	addc	a,@r0
   07CD FC                 1875 	mov	r4,a
   07CE 08                 1876 	inc	r0
   07CF 86 05              1877 	mov	ar5,@r0
   07D1 E5*00              1878 	mov	a,_bp
   07D3 24 04              1879 	add	a,#0x04
   07D5 F8                 1880 	mov	r0,a
   07D6 A9*00              1881 	mov	r1,_bp
   07D8 09                 1882 	inc	r1
   07D9 E7                 1883 	mov	a,@r1
   07DA 26                 1884 	add	a,@r0
   07DB C0 E0              1885 	push	acc
   07DD 09                 1886 	inc	r1
   07DE E7                 1887 	mov	a,@r1
   07DF 08                 1888 	inc	r0
   07E0 36                 1889 	addc	a,@r0
   07E1 C0 E0              1890 	push	acc
   07E3 08                 1891 	inc	r0
   07E4 E6                 1892 	mov	a,@r0
   07E5 C0 E0              1893 	push	acc
   07E7 E5*00              1894 	mov	a,_bp
   07E9 24 0A              1895 	add	a,#0x0a
   07EB F8                 1896 	mov	r0,a
   07EC D0 E0              1897 	pop	acc
   07EE F6                 1898 	mov	@r0,a
   07EF 18                 1899 	dec	r0
   07F0 D0 E0              1900 	pop	acc
   07F2 F6                 1901 	mov	@r0,a
   07F3 18                 1902 	dec	r0
   07F4 D0 E0              1903 	pop	acc
   07F6 F6                 1904 	mov	@r0,a
   07F7 E5*00              1905 	mov	a,_bp
   07F9 24 08              1906 	add	a,#0x08
   07FB F8                 1907 	mov	r0,a
   07FC 86 82              1908 	mov	dpl,@r0
   07FE 08                 1909 	inc	r0
   07FF 86 83              1910 	mov	dph,@r0
   0801 08                 1911 	inc	r0
   0802 86 F0              1912 	mov	b,@r0
   0804 E5*00              1913 	mov	a,_bp
   0806 24 07              1914 	add	a,#0x07
   0808 F9                 1915 	mov	r1,a
   0809 12s00r00           1916 	lcall	__gptrget
   080C F7                 1917 	mov	@r1,a
   080D 8B 82              1918 	mov	dpl,r3
   080F 8C 83              1919 	mov	dph,r4
   0811 8D F0              1920 	mov	b,r5
   0813 E5*00              1921 	mov	a,_bp
   0815 24 07              1922 	add	a,#0x07
   0817 F8                 1923 	mov	r0,a
   0818 E6                 1924 	mov	a,@r0
   0819 12s00r00           1925 	lcall	__gptrput
   081C 8E 07              1926 	mov	ar7,r6
   081E 7D 00              1927 	mov	r5,#0x00
   0820 1F                 1928 	dec	r7
   0821 BF FF 01           1929 	cjne	r7,#0xff,00127$
   0824 1D                 1930 	dec	r5
   0825                    1931 00127$:
   0825 A8*00              1932 	mov	r0,_bp
   0827 08                 1933 	inc	r0
   0828 EF                 1934 	mov	a,r7
   0829 C3                 1935 	clr	c
   082A 96                 1936 	subb	a,@r0
   082B FF                 1937 	mov	r7,a
   082C ED                 1938 	mov	a,r5
   082D 08                 1939 	inc	r0
   082E 96                 1940 	subb	a,@r0
   082F FD                 1941 	mov	r5,a
   0830 E5*00              1942 	mov	a,_bp
   0832 24 04              1943 	add	a,#0x04
   0834 F8                 1944 	mov	r0,a
   0835 EF                 1945 	mov	a,r7
   0836 26                 1946 	add	a,@r0
   0837 FF                 1947 	mov	r7,a
   0838 ED                 1948 	mov	a,r5
   0839 08                 1949 	inc	r0
   083A 36                 1950 	addc	a,@r0
   083B FD                 1951 	mov	r5,a
   083C 08                 1952 	inc	r0
   083D 86 02              1953 	mov	ar2,@r0
   083F 8F 82              1954 	mov	dpl,r7
   0841 8D 83              1955 	mov	dph,r5
   0843 8A F0              1956 	mov	b,r2
   0845 12s00r00           1957 	lcall	__gptrget
   0848 FB                 1958 	mov	r3,a
   0849 E5*00              1959 	mov	a,_bp
   084B 24 08              1960 	add	a,#0x08
   084D F8                 1961 	mov	r0,a
   084E 86 82              1962 	mov	dpl,@r0
   0850 08                 1963 	inc	r0
   0851 86 83              1964 	mov	dph,@r0
   0853 08                 1965 	inc	r0
   0854 86 F0              1966 	mov	b,@r0
   0856 EB                 1967 	mov	a,r3
   0857 12s00r00           1968 	lcall	__gptrput
   085A 8F 82              1969 	mov	dpl,r7
   085C 8D 83              1970 	mov	dph,r5
   085E 8A F0              1971 	mov	b,r2
   0860 E5*00              1972 	mov	a,_bp
   0862 24 07              1973 	add	a,#0x07
   0864 F8                 1974 	mov	r0,a
   0865 E6                 1975 	mov	a,@r0
   0866 12s00r00           1976 	lcall	__gptrput
   0869 A8*00              1977 	mov	r0,_bp
   086B 08                 1978 	inc	r0
   086C 06                 1979 	inc	@r0
   086D B6 00 02           1980 	cjne	@r0,#0x00,00128$
   0870 08                 1981 	inc	r0
   0871 06                 1982 	inc	@r0
   0872                    1983 00128$:
   0872 D0 02              1984 	pop	ar2
   0874 02s07rA6           1985 	ljmp	00108$
   0877                    1986 00111$:
                           1987 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:73: p[len]=0;
   0877 E5*00              1988 	mov	a,_bp
   0879 24 04              1989 	add	a,#0x04
   087B F8                 1990 	mov	r0,a
   087C EE                 1991 	mov	a,r6
   087D 26                 1992 	add	a,@r0
   087E FE                 1993 	mov	r6,a
   087F E4                 1994 	clr	a
   0880 08                 1995 	inc	r0
   0881 36                 1996 	addc	a,@r0
   0882 FA                 1997 	mov	r2,a
   0883 08                 1998 	inc	r0
   0884 86 03              1999 	mov	ar3,@r0
   0886 8E 82              2000 	mov	dpl,r6
   0888 8A 83              2001 	mov	dph,r2
   088A 8B F0              2002 	mov	b,r3
   088C E4                 2003 	clr	a
   088D 12s00r00           2004 	lcall	__gptrput
   0890 85*00 81           2005 	mov	sp,_bp
   0893 D0*00              2006 	pop	_bp
   0895 22                 2007 	ret
                           2008 ;------------------------------------------------------------
                           2009 ;Allocation info for local variables in function 'uart_s2i'
                           2010 ;------------------------------------------------------------
                           2011 ;s                         Allocated to registers r2 r3 r4 
                           2012 ;i                         Allocated to registers r5 r6 
                           2013 ;sign                      Allocated to stack - offset 1
                           2014 ;sloc0                     Allocated to stack - offset 7
                           2015 ;sloc1                     Allocated to stack - offset 2
                           2016 ;------------------------------------------------------------
                           2017 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:76: int uart_s2i(char *s)	// Convert String to Integer
                           2018 ;	-----------------------------------------
                           2019 ;	 function uart_s2i
                           2020 ;	-----------------------------------------
   0896                    2021 _uart_s2i:
   0896 C0*00              2022 	push	_bp
   0898 E5 81              2023 	mov	a,sp
   089A F5*00              2024 	mov	_bp,a
   089C 24 04              2025 	add	a,#0x04
   089E F5 81              2026 	mov	sp,a
   08A0 AA 82              2027 	mov	r2,dpl
   08A2 AB 83              2028 	mov	r3,dph
   08A4 AC F0              2029 	mov	r4,b
                           2030 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:78: int i=0;char sign='+';
   08A6 7D 00              2031 	mov	r5,#0x00
   08A8 7E 00              2032 	mov	r6,#0x00
   08AA A8*00              2033 	mov	r0,_bp
   08AC 08                 2034 	inc	r0
   08AD 76 2B              2035 	mov	@r0,#0x2B
                           2036 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:79: if(*s=='-'){sign='-';s++;}
   08AF 8A 82              2037 	mov	dpl,r2
   08B1 8B 83              2038 	mov	dph,r3
   08B3 8C F0              2039 	mov	b,r4
   08B5 12s00r00           2040 	lcall	__gptrget
   08B8 FF                 2041 	mov	r7,a
   08B9 BF 2D 0A           2042 	cjne	r7,#0x2D,00112$
   08BC A8*00              2043 	mov	r0,_bp
   08BE 08                 2044 	inc	r0
   08BF 76 2D              2045 	mov	@r0,#0x2D
   08C1 0A                 2046 	inc	r2
   08C2 BA 00 01           2047 	cjne	r2,#0x00,00117$
   08C5 0B                 2048 	inc	r3
   08C6                    2049 00117$:
                           2050 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:80: while(*s!=0){i=i*10+(*s-'0');s++;}
   08C6                    2051 00112$:
   08C6 A8*00              2052 	mov	r0,_bp
   08C8 08                 2053 	inc	r0
   08C9 08                 2054 	inc	r0
   08CA A6 02              2055 	mov	@r0,ar2
   08CC 08                 2056 	inc	r0
   08CD A6 03              2057 	mov	@r0,ar3
   08CF 08                 2058 	inc	r0
   08D0 A6 04              2059 	mov	@r0,ar4
   08D2                    2060 00103$:
   08D2 A8*00              2061 	mov	r0,_bp
   08D4 08                 2062 	inc	r0
   08D5 08                 2063 	inc	r0
   08D6 86 82              2064 	mov	dpl,@r0
   08D8 08                 2065 	inc	r0
   08D9 86 83              2066 	mov	dph,@r0
   08DB 08                 2067 	inc	r0
   08DC 86 F0              2068 	mov	b,@r0
   08DE 12s00r00           2069 	lcall	__gptrget
   08E1 FB                 2070 	mov	r3,a
   08E2 60 39              2071 	jz	00105$
   08E4 C0 03              2072 	push	ar3
   08E6 C0 05              2073 	push	ar5
   08E8 C0 06              2074 	push	ar6
   08EA 90 00 0A           2075 	mov	dptr,#0x000A
   08ED 12s00r00           2076 	lcall	__mulint
   08F0 AF 82              2077 	mov	r7,dpl
   08F2 AA 83              2078 	mov	r2,dph
   08F4 15 81              2079 	dec	sp
   08F6 15 81              2080 	dec	sp
   08F8 D0 03              2081 	pop	ar3
   08FA EB                 2082 	mov	a,r3
   08FB 33                 2083 	rlc	a
   08FC 95 E0              2084 	subb	a,acc
   08FE FC                 2085 	mov	r4,a
   08FF EB                 2086 	mov	a,r3
   0900 24 D0              2087 	add	a,#0xd0
   0902 FB                 2088 	mov	r3,a
   0903 EC                 2089 	mov	a,r4
   0904 34 FF              2090 	addc	a,#0xff
   0906 FC                 2091 	mov	r4,a
   0907 EB                 2092 	mov	a,r3
   0908 2F                 2093 	add	a,r7
   0909 FF                 2094 	mov	r7,a
   090A EC                 2095 	mov	a,r4
   090B 3A                 2096 	addc	a,r2
   090C FA                 2097 	mov	r2,a
   090D 8F 05              2098 	mov	ar5,r7
   090F 8A 06              2099 	mov	ar6,r2
   0911 A8*00              2100 	mov	r0,_bp
   0913 08                 2101 	inc	r0
   0914 08                 2102 	inc	r0
   0915 06                 2103 	inc	@r0
   0916 B6 00 02           2104 	cjne	@r0,#0x00,00119$
   0919 08                 2105 	inc	r0
   091A 06                 2106 	inc	@r0
   091B                    2107 00119$:
   091B 80 B5              2108 	sjmp	00103$
   091D                    2109 00105$:
                           2110 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:81: if(sign=='-')i=-i;
   091D A8*00              2111 	mov	r0,_bp
   091F 08                 2112 	inc	r0
   0920 B6 2D 07           2113 	cjne	@r0,#0x2D,00107$
   0923 C3                 2114 	clr	c
   0924 E4                 2115 	clr	a
   0925 9D                 2116 	subb	a,r5
   0926 FD                 2117 	mov	r5,a
   0927 E4                 2118 	clr	a
   0928 9E                 2119 	subb	a,r6
   0929 FE                 2120 	mov	r6,a
   092A                    2121 00107$:
                           2122 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:82: return i;
   092A 8D 82              2123 	mov	dpl,r5
   092C 8E 83              2124 	mov	dph,r6
   092E 85*00 81           2125 	mov	sp,_bp
   0931 D0*00              2126 	pop	_bp
   0933 22                 2127 	ret
                           2128 ;------------------------------------------------------------
                           2129 ;Allocation info for local variables in function 'uart_put_integer'
                           2130 ;------------------------------------------------------------
                           2131 ;i                         Allocated to registers r2 r3 
                           2132 ;s                         Allocated to stack - offset 1
                           2133 ;------------------------------------------------------------
                           2134 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:85: void uart_put_integer(int i)	// Put Integer to UART, Require uart_i2s(),uart_put_string()
                           2135 ;	-----------------------------------------
                           2136 ;	 function uart_put_integer
                           2137 ;	-----------------------------------------
   0934                    2138 _uart_put_integer:
   0934 C0*00              2139 	push	_bp
   0936 E5 81              2140 	mov	a,sp
   0938 F5*00              2141 	mov	_bp,a
   093A 24 07              2142 	add	a,#0x07
   093C F5 81              2143 	mov	sp,a
   093E AA 82              2144 	mov	r2,dpl
   0940 AB 83              2145 	mov	r3,dph
                           2146 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:88: uart_i2s(i,s);uart_put_string(s);
   0942 AC*00              2147 	mov	r4,_bp
   0944 0C                 2148 	inc	r4
   0945 8C 05              2149 	mov	ar5,r4
   0947 7E 00              2150 	mov	r6,#0x00
   0949 7F 40              2151 	mov	r7,#0x40
   094B C0 04              2152 	push	ar4
   094D C0 05              2153 	push	ar5
   094F C0 06              2154 	push	ar6
   0951 C0 07              2155 	push	ar7
   0953 8A 82              2156 	mov	dpl,r2
   0955 8B 83              2157 	mov	dph,r3
   0957 12s06rBE           2158 	lcall	_uart_i2s
   095A 15 81              2159 	dec	sp
   095C 15 81              2160 	dec	sp
   095E 15 81              2161 	dec	sp
   0960 D0 04              2162 	pop	ar4
   0962 7A 00              2163 	mov	r2,#0x00
   0964 7B 40              2164 	mov	r3,#0x40
   0966 8C 82              2165 	mov	dpl,r4
   0968 8A 83              2166 	mov	dph,r2
   096A 8B F0              2167 	mov	b,r3
   096C 12s06r5C           2168 	lcall	_uart_put_string
   096F 85*00 81           2169 	mov	sp,_bp
   0972 D0*00              2170 	pop	_bp
   0974 22                 2171 	ret
                           2172 ;------------------------------------------------------------
                           2173 ;Allocation info for local variables in function 'uart_get_integer'
                           2174 ;------------------------------------------------------------
                           2175 ;s                         Allocated to stack - offset 1
                           2176 ;------------------------------------------------------------
                           2177 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:91: int uart_get_integer()		// Get Integer from UART, Require uart_get_string(),uart_s2i()
                           2178 ;	-----------------------------------------
                           2179 ;	 function uart_get_integer
                           2180 ;	-----------------------------------------
   0975                    2181 _uart_get_integer:
   0975 C0*00              2182 	push	_bp
   0977 E5 81              2183 	mov	a,sp
   0979 F5*00              2184 	mov	_bp,a
   097B 24 07              2185 	add	a,#0x07
   097D F5 81              2186 	mov	sp,a
                           2187 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:94: uart_get_string(s);
   097F AA*00              2188 	mov	r2,_bp
   0981 0A                 2189 	inc	r2
   0982 8A 03              2190 	mov	ar3,r2
   0984 7C 00              2191 	mov	r4,#0x00
   0986 7D 40              2192 	mov	r5,#0x40
   0988 8B 82              2193 	mov	dpl,r3
   098A 8C 83              2194 	mov	dph,r4
   098C 8D F0              2195 	mov	b,r5
   098E C0 02              2196 	push	ar2
   0990 12s06r87           2197 	lcall	_uart_get_string
   0993 D0 02              2198 	pop	ar2
                           2199 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:95: return uart_s2i(s);
   0995 7B 00              2200 	mov	r3,#0x00
   0997 7C 40              2201 	mov	r4,#0x40
   0999 8A 82              2202 	mov	dpl,r2
   099B 8B 83              2203 	mov	dph,r3
   099D 8C F0              2204 	mov	b,r4
   099F 12s08r96           2205 	lcall	_uart_s2i
   09A2 85*00 81           2206 	mov	sp,_bp
   09A5 D0*00              2207 	pop	_bp
   09A7 22                 2208 	ret
                           2209 ;------------------------------------------------------------
                           2210 ;Allocation info for local variables in function 'uart_put_byte'
                           2211 ;------------------------------------------------------------
                           2212 ;byte_data                 Allocated to registers r2 
                           2213 ;------------------------------------------------------------
                           2214 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:98: void uart_put_byte(unsigned char byte_data)
                           2215 ;	-----------------------------------------
                           2216 ;	 function uart_put_byte
                           2217 ;	-----------------------------------------
   09A8                    2218 _uart_put_byte:
                           2219 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:100: uart_put_char(uart_ASCII[byte_data/16]);uart_put_char(uart_ASCII[byte_data%16]);
   09A8 E5 82              2220 	mov	a,dpl
   09AA FA                 2221 	mov	r2,a
   09AB C4                 2222 	swap	a
   09AC 54 0F              2223 	anl	a,#0x0f
   09AE 90s00r11           2224 	mov	dptr,#_uart_ASCII
   09B1 93                 2225 	movc	a,@a+dptr
   09B2 F5 82              2226 	mov	dpl,a
   09B4 C0 02              2227 	push	ar2
   09B6 12s06r3B           2228 	lcall	_uart_put_char
   09B9 D0 02              2229 	pop	ar2
   09BB 74 0F              2230 	mov	a,#0x0F
   09BD 5A                 2231 	anl	a,r2
   09BE 90s00r11           2232 	mov	dptr,#_uart_ASCII
   09C1 93                 2233 	movc	a,@a+dptr
   09C2 F5 82              2234 	mov	dpl,a
   09C4 02s06r3B           2235 	ljmp	_uart_put_char
                           2236 ;------------------------------------------------------------
                           2237 ;Allocation info for local variables in function 'uart_put_word'
                           2238 ;------------------------------------------------------------
                           2239 ;word_data                 Allocated to registers r2 r3 
                           2240 ;------------------------------------------------------------
                           2241 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:103: void uart_put_word(unsigned int word_data)
                           2242 ;	-----------------------------------------
                           2243 ;	 function uart_put_word
                           2244 ;	-----------------------------------------
   09C7                    2245 _uart_put_word:
   09C7 AA 82              2246 	mov	r2,dpl
   09C9 AB 83              2247 	mov	r3,dph
                           2248 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:105: uart_put_byte(word_data/256);uart_put_byte(word_data%256);
   09CB 8B 04              2249 	mov	ar4,r3
   09CD 8C 82              2250 	mov	dpl,r4
   09CF C0 02              2251 	push	ar2
   09D1 C0 03              2252 	push	ar3
   09D3 12s09rA8           2253 	lcall	_uart_put_byte
   09D6 D0 03              2254 	pop	ar3
   09D8 D0 02              2255 	pop	ar2
   09DA 8A 82              2256 	mov	dpl,r2
   09DC 02s09rA8           2257 	ljmp	_uart_put_byte
                           2258 ;------------------------------------------------------------
                           2259 ;Allocation info for local variables in function 'uart_get_nibble'
                           2260 ;------------------------------------------------------------
                           2261 ;c                         Allocated to registers r2 
                           2262 ;------------------------------------------------------------
                           2263 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:108: char uart_get_nibble()
                           2264 ;	-----------------------------------------
                           2265 ;	 function uart_get_nibble
                           2266 ;	-----------------------------------------
   09DF                    2267 _uart_get_nibble:
                           2268 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:111: c=uart_get_char_echo();
   09DF 12s06r4D           2269 	lcall	_uart_get_char_echo
   09E2 AA 82              2270 	mov	r2,dpl
                           2271 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:112: if('0'<=c && c<='9')return(c-'0');
   09E4 C3                 2272 	clr	c
   09E5 EA                 2273 	mov	a,r2
   09E6 64 80              2274 	xrl	a,#0x80
   09E8 94 B0              2275 	subb	a,#0xb0
   09EA 40 11              2276 	jc	00102$
   09EC 74 B9              2277 	mov	a,#(0x39 ^ 0x80)
   09EE 8A F0              2278 	mov	b,r2
   09F0 63 F0 80           2279 	xrl	b,#0x80
   09F3 95 F0              2280 	subb	a,b
   09F5 40 06              2281 	jc	00102$
   09F7 EA                 2282 	mov	a,r2
   09F8 24 D0              2283 	add	a,#0xd0
   09FA F5 82              2284 	mov	dpl,a
   09FC 22                 2285 	ret
   09FD                    2286 00102$:
                           2287 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:113: if('A'<=c && c<='F')return(10+c-'A');
   09FD C3                 2288 	clr	c
   09FE EA                 2289 	mov	a,r2
   09FF 64 80              2290 	xrl	a,#0x80
   0A01 94 C1              2291 	subb	a,#0xc1
   0A03 40 11              2292 	jc	00105$
   0A05 74 C6              2293 	mov	a,#(0x46 ^ 0x80)
   0A07 8A F0              2294 	mov	b,r2
   0A09 63 F0 80           2295 	xrl	b,#0x80
   0A0C 95 F0              2296 	subb	a,b
   0A0E 40 06              2297 	jc	00105$
   0A10 74 C9              2298 	mov	a,#0xC9
   0A12 2A                 2299 	add	a,r2
   0A13 F5 82              2300 	mov	dpl,a
   0A15 22                 2301 	ret
   0A16                    2302 00105$:
                           2303 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:114: if('a'<=c && c<='f')return(10+c-'a');
   0A16 C3                 2304 	clr	c
   0A17 EA                 2305 	mov	a,r2
   0A18 64 80              2306 	xrl	a,#0x80
   0A1A 94 E1              2307 	subb	a,#0xe1
   0A1C 40 11              2308 	jc	00108$
   0A1E 74 E6              2309 	mov	a,#(0x66 ^ 0x80)
   0A20 8A F0              2310 	mov	b,r2
   0A22 63 F0 80           2311 	xrl	b,#0x80
   0A25 95 F0              2312 	subb	a,b
   0A27 40 06              2313 	jc	00108$
   0A29 74 A9              2314 	mov	a,#0xA9
   0A2B 2A                 2315 	add	a,r2
   0A2C F5 82              2316 	mov	dpl,a
                           2317 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:115: return(0);
   0A2E 22                 2318 	ret
   0A2F                    2319 00108$:
   0A2F 75 82 00           2320 	mov	dpl,#0x00
   0A32 22                 2321 	ret
                           2322 ;------------------------------------------------------------
                           2323 ;Allocation info for local variables in function 'uart_get_byte'
                           2324 ;------------------------------------------------------------
                           2325 ;------------------------------------------------------------
                           2326 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:118: unsigned char uart_get_byte()
                           2327 ;	-----------------------------------------
                           2328 ;	 function uart_get_byte
                           2329 ;	-----------------------------------------
   0A33                    2330 _uart_get_byte:
                           2331 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:120: return(16*uart_get_nibble()+uart_get_nibble());
   0A33 12s09rDF           2332 	lcall	_uart_get_nibble
   0A36 E5 82              2333 	mov	a,dpl
   0A38 C4                 2334 	swap	a
   0A39 54 F0              2335 	anl	a,#0xf0
   0A3B FA                 2336 	mov	r2,a
   0A3C C0 02              2337 	push	ar2
   0A3E 12s09rDF           2338 	lcall	_uart_get_nibble
   0A41 AB 82              2339 	mov	r3,dpl
   0A43 D0 02              2340 	pop	ar2
   0A45 EB                 2341 	mov	a,r3
   0A46 2A                 2342 	add	a,r2
   0A47 F5 82              2343 	mov	dpl,a
   0A49 22                 2344 	ret
                           2345 ;------------------------------------------------------------
                           2346 ;Allocation info for local variables in function 'uart_get_word'
                           2347 ;------------------------------------------------------------
                           2348 ;------------------------------------------------------------
                           2349 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:123: unsigned int uart_get_word()
                           2350 ;	-----------------------------------------
                           2351 ;	 function uart_get_word
                           2352 ;	-----------------------------------------
   0A4A                    2353 _uart_get_word:
                           2354 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\/uart.c:125: return(256*uart_get_byte()+uart_get_byte());
   0A4A 12s0Ar33           2355 	lcall	_uart_get_byte
   0A4D AB 82              2356 	mov	r3,dpl
   0A4F 7A 00              2357 	mov	r2,#0x00
   0A51 C0 02              2358 	push	ar2
   0A53 C0 03              2359 	push	ar3
   0A55 12s0Ar33           2360 	lcall	_uart_get_byte
   0A58 AC 82              2361 	mov	r4,dpl
   0A5A D0 03              2362 	pop	ar3
   0A5C D0 02              2363 	pop	ar2
   0A5E 7D 00              2364 	mov	r5,#0x00
   0A60 EC                 2365 	mov	a,r4
   0A61 2A                 2366 	add	a,r2
   0A62 F5 82              2367 	mov	dpl,a
   0A64 ED                 2368 	mov	a,r5
   0A65 3B                 2369 	addc	a,r3
   0A66 F5 83              2370 	mov	dph,a
   0A68 22                 2371 	ret
                           2372 ;------------------------------------------------------------
                           2373 ;Allocation info for local variables in function 'main'
                           2374 ;------------------------------------------------------------
                           2375 ;s                         Allocated to registers r2 
                           2376 ;addr                      Allocated to registers r3 r4 
                           2377 ;val                       Allocated to registers r5 
                           2378 ;------------------------------------------------------------
                           2379 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:15: void main() {
                           2380 ;	-----------------------------------------
                           2381 ;	 function main
                           2382 ;	-----------------------------------------
   0A69                    2383 _main:
                           2384 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:19: uart_initialize();
   0A69 12s06r22           2385 	lcall	_uart_initialize
                           2386 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:20: clcd_initialize();
   0A6C 12s00r00           2387 	lcall	_clcd_initialize
                           2388 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:22: while (1) {
   0A6F                    2389 00106$:
                           2390 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:23: clcd_set_cursor(0, 0);
   0A6F E4                 2391 	clr	a
   0A70 C0 E0              2392 	push	acc
   0A72 C0 E0              2393 	push	acc
   0A74 90 00 00           2394 	mov	dptr,#0x0000
   0A77 12s00r44           2395 	lcall	_clcd_set_cursor
   0A7A 15 81              2396 	dec	sp
   0A7C 15 81              2397 	dec	sp
                           2398 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:24: uart_put_string("\n[ Write:0 |  Read:1 ]");
   0A7E 90s00r22           2399 	mov	dptr,#__str_0
   0A81 75 F0 80           2400 	mov	b,#0x80
   0A84 12s06r5C           2401 	lcall	_uart_put_string
                           2402 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:25: s = uart_get_char_echo();
   0A87 12s06r4D           2403 	lcall	_uart_get_char_echo
   0A8A AA 82              2404 	mov	r2,dpl
                           2405 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:26: uart_put_string("\r\n");
   0A8C 90s00r39           2406 	mov	dptr,#__str_1
   0A8F 75 F0 80           2407 	mov	b,#0x80
   0A92 C0 02              2408 	push	ar2
   0A94 12s06r5C           2409 	lcall	_uart_put_string
   0A97 D0 02              2410 	pop	ar2
                           2411 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:27: if (s == '0') {
   0A99 BA 30 02           2412 	cjne	r2,#0x30,00113$
   0A9C 80 03              2413 	sjmp	00114$
   0A9E                    2414 00113$:
   0A9E 02s0Br48           2415 	ljmp	00102$
   0AA1                    2416 00114$:
                           2417 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:28: clcd_set_cursor(0, 0);
   0AA1 C0 02              2418 	push	ar2
   0AA3 E4                 2419 	clr	a
   0AA4 C0 E0              2420 	push	acc
   0AA6 C0 E0              2421 	push	acc
   0AA8 90 00 00           2422 	mov	dptr,#0x0000
   0AAB 12s00r44           2423 	lcall	_clcd_set_cursor
   0AAE 15 81              2424 	dec	sp
   0AB0 15 81              2425 	dec	sp
                           2426 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:29: clcd_put_string("Write       ");
   0AB2 90s00r3C           2427 	mov	dptr,#__str_2
   0AB5 75 F0 80           2428 	mov	b,#0x80
   0AB8 12s00r82           2429 	lcall	_clcd_put_string
                           2430 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:31: uart_put_string("Address: ");
   0ABB 90s00r49           2431 	mov	dptr,#__str_3
   0ABE 75 F0 80           2432 	mov	b,#0x80
   0AC1 12s06r5C           2433 	lcall	_uart_put_string
                           2434 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:32: addr = uart_get_word();
   0AC4 12s0Ar4A           2435 	lcall	_uart_get_word
   0AC7 AB 82              2436 	mov	r3,dpl
   0AC9 AC 83              2437 	mov	r4,dph
                           2438 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:33: uart_put_string("\r\n");
   0ACB 90s00r39           2439 	mov	dptr,#__str_1
   0ACE 75 F0 80           2440 	mov	b,#0x80
   0AD1 C0 03              2441 	push	ar3
   0AD3 C0 04              2442 	push	ar4
   0AD5 12s06r5C           2443 	lcall	_uart_put_string
                           2444 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:34: uart_put_string("Data: ");
   0AD8 90s00r53           2445 	mov	dptr,#__str_4
   0ADB 75 F0 80           2446 	mov	b,#0x80
   0ADE 12s06r5C           2447 	lcall	_uart_put_string
                           2448 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:35: val = uart_get_byte();
   0AE1 12s0Ar33           2449 	lcall	_uart_get_byte
   0AE4 AD 82              2450 	mov	r5,dpl
                           2451 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:36: uart_put_string("\r\n");
   0AE6 90s00r39           2452 	mov	dptr,#__str_1
   0AE9 75 F0 80           2453 	mov	b,#0x80
   0AEC C0 05              2454 	push	ar5
   0AEE 12s06r5C           2455 	lcall	_uart_put_string
   0AF1 D0 05              2456 	pop	ar5
   0AF3 D0 04              2457 	pop	ar4
   0AF5 D0 03              2458 	pop	ar3
                           2459 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:37: seeprom_write_byte(0, addr, val);
   0AF7 C0 03              2460 	push	ar3
   0AF9 C0 04              2461 	push	ar4
   0AFB C0 05              2462 	push	ar5
   0AFD C0 05              2463 	push	ar5
   0AFF C0 03              2464 	push	ar3
   0B01 C0 04              2465 	push	ar4
   0B03 75 82 00           2466 	mov	dpl,#0x00
   0B06 12s03r70           2467 	lcall	_seeprom_write_byte
   0B09 15 81              2468 	dec	sp
   0B0B 15 81              2469 	dec	sp
   0B0D 15 81              2470 	dec	sp
                           2471 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:41: clcd_set_cursor(1, 0);
   0B0F E4                 2472 	clr	a
   0B10 C0 E0              2473 	push	acc
   0B12 C0 E0              2474 	push	acc
   0B14 90 00 01           2475 	mov	dptr,#0x0001
   0B17 12s00r44           2476 	lcall	_clcd_set_cursor
   0B1A 15 81              2477 	dec	sp
   0B1C 15 81              2478 	dec	sp
                           2479 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:42: clcd_put_string("A: ");
   0B1E 90s00r5A           2480 	mov	dptr,#__str_5
   0B21 75 F0 80           2481 	mov	b,#0x80
   0B24 12s00r82           2482 	lcall	_clcd_put_string
   0B27 D0 05              2483 	pop	ar5
   0B29 D0 04              2484 	pop	ar4
   0B2B D0 03              2485 	pop	ar3
                           2486 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:43: clcd_put_int(addr);
   0B2D 8B 82              2487 	mov	dpl,r3
   0B2F 8C 83              2488 	mov	dph,r4
   0B31 C0 05              2489 	push	ar5
   0B33 12s02rBC           2490 	lcall	_clcd_put_int
                           2491 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:44: clcd_put_string("|D: ");
   0B36 90s00r5E           2492 	mov	dptr,#__str_6
   0B39 75 F0 80           2493 	mov	b,#0x80
   0B3C 12s00r82           2494 	lcall	_clcd_put_string
   0B3F D0 05              2495 	pop	ar5
                           2496 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:45: clcd_put_byte(val);
   0B41 8D 82              2497 	mov	dpl,r5
   0B43 12s00rAD           2498 	lcall	_clcd_put_byte
   0B46 D0 02              2499 	pop	ar2
   0B48                    2500 00102$:
                           2501 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:47: if (s == '1') {
   0B48 BA 31 02           2502 	cjne	r2,#0x31,00115$
   0B4B 80 03              2503 	sjmp	00116$
   0B4D                    2504 00115$:
   0B4D 02s0BrF1           2505 	ljmp	00104$
   0B50                    2506 00116$:
                           2507 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:48: clcd_set_cursor(0, 0);
   0B50 E4                 2508 	clr	a
   0B51 C0 E0              2509 	push	acc
   0B53 C0 E0              2510 	push	acc
   0B55 90 00 00           2511 	mov	dptr,#0x0000
   0B58 12s00r44           2512 	lcall	_clcd_set_cursor
   0B5B 15 81              2513 	dec	sp
   0B5D 15 81              2514 	dec	sp
                           2515 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:49: clcd_put_string("Read ");
   0B5F 90s00r63           2516 	mov	dptr,#__str_7
   0B62 75 F0 80           2517 	mov	b,#0x80
   0B65 12s00r82           2518 	lcall	_clcd_put_string
                           2519 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:50: uart_put_string("Address: ");
   0B68 90s00r49           2520 	mov	dptr,#__str_3
   0B6B 75 F0 80           2521 	mov	b,#0x80
   0B6E 12s06r5C           2522 	lcall	_uart_put_string
                           2523 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:51: addr = uart_get_word();
   0B71 12s0Ar4A           2524 	lcall	_uart_get_word
   0B74 AA 82              2525 	mov	r2,dpl
   0B76 AD 83              2526 	mov	r5,dph
   0B78 8A 03              2527 	mov	ar3,r2
   0B7A 8D 04              2528 	mov	ar4,r5
                           2529 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:52: uart_put_string("\r\n");
   0B7C 90s00r39           2530 	mov	dptr,#__str_1
   0B7F 75 F0 80           2531 	mov	b,#0x80
   0B82 C0 03              2532 	push	ar3
   0B84 C0 04              2533 	push	ar4
   0B86 12s06r5C           2534 	lcall	_uart_put_string
                           2535 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:53: uart_put_string("Data: ");
   0B89 90s00r53           2536 	mov	dptr,#__str_4
   0B8C 75 F0 80           2537 	mov	b,#0x80
   0B8F 12s06r5C           2538 	lcall	_uart_put_string
   0B92 D0 04              2539 	pop	ar4
   0B94 D0 03              2540 	pop	ar3
                           2541 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:54: uart_put_byte(seeprom_read_byte(0, addr));
   0B96 C0 03              2542 	push	ar3
   0B98 C0 04              2543 	push	ar4
   0B9A C0 03              2544 	push	ar3
   0B9C C0 04              2545 	push	ar4
   0B9E 75 82 00           2546 	mov	dpl,#0x00
   0BA1 12s04r98           2547 	lcall	_seeprom_read_byte
   0BA4 15 81              2548 	dec	sp
   0BA6 15 81              2549 	dec	sp
   0BA8 12s09rA8           2550 	lcall	_uart_put_byte
                           2551 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:55: uart_put_string("\r\n");
   0BAB 90s00r39           2552 	mov	dptr,#__str_1
   0BAE 75 F0 80           2553 	mov	b,#0x80
   0BB1 12s06r5C           2554 	lcall	_uart_put_string
                           2555 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:58: clcd_set_cursor(1, 0);
   0BB4 E4                 2556 	clr	a
   0BB5 C0 E0              2557 	push	acc
   0BB7 C0 E0              2558 	push	acc
   0BB9 90 00 01           2559 	mov	dptr,#0x0001
   0BBC 12s00r44           2560 	lcall	_clcd_set_cursor
   0BBF 15 81              2561 	dec	sp
   0BC1 15 81              2562 	dec	sp
                           2563 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:59: clcd_put_string("A: ");
   0BC3 90s00r5A           2564 	mov	dptr,#__str_5
   0BC6 75 F0 80           2565 	mov	b,#0x80
   0BC9 12s00r82           2566 	lcall	_clcd_put_string
   0BCC D0 04              2567 	pop	ar4
   0BCE D0 03              2568 	pop	ar3
                           2569 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:60: clcd_put_int(addr);
   0BD0 8B 82              2570 	mov	dpl,r3
   0BD2 8C 83              2571 	mov	dph,r4
   0BD4 C0 03              2572 	push	ar3
   0BD6 C0 04              2573 	push	ar4
   0BD8 12s02rBC           2574 	lcall	_clcd_put_int
                           2575 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:61: clcd_put_string("|D: ");
   0BDB 90s00r5E           2576 	mov	dptr,#__str_6
   0BDE 75 F0 80           2577 	mov	b,#0x80
   0BE1 12s00r82           2578 	lcall	_clcd_put_string
                           2579 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:62: clcd_put_byte(seeprom_read_byte(0, addr));
   0BE4 75 82 00           2580 	mov	dpl,#0x00
   0BE7 12s04r98           2581 	lcall	_seeprom_read_byte
   0BEA 15 81              2582 	dec	sp
   0BEC 15 81              2583 	dec	sp
   0BEE 12s00rAD           2584 	lcall	_clcd_put_byte
   0BF1                    2585 00104$:
                           2586 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:64: delay(590);
   0BF1 90 02 4E           2587 	mov	dptr,#0x024E
   0BF4 12s0BrFA           2588 	lcall	_delay
   0BF7 02s0Ar6F           2589 	ljmp	00106$
                           2590 ;------------------------------------------------------------
                           2591 ;Allocation info for local variables in function 'delay'
                           2592 ;------------------------------------------------------------
                           2593 ;x                         Allocated to registers r2 r3 
                           2594 ;n                         Allocated to registers r4 r5 
                           2595 ;------------------------------------------------------------
                           2596 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:67: void delay(int x) {
                           2597 ;	-----------------------------------------
                           2598 ;	 function delay
                           2599 ;	-----------------------------------------
   0BFA                    2600 _delay:
   0BFA AA 82              2601 	mov	r2,dpl
   0BFC AB 83              2602 	mov	r3,dph
                           2603 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:69: while (x > 0) {
   0BFE                    2604 00104$:
   0BFE C3                 2605 	clr	c
   0BFF E4                 2606 	clr	a
   0C00 9A                 2607 	subb	a,r2
   0C01 74 80              2608 	mov	a,#(0x00 ^ 0x80)
   0C03 8B F0              2609 	mov	b,r3
   0C05 63 F0 80           2610 	xrl	b,#0x80
   0C08 95 F0              2611 	subb	a,b
   0C0A 50 20              2612 	jnc	00107$
                           2613 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:71: while (n > 0)
   0C0C 7C 78              2614 	mov	r4,#0x78
   0C0E 7D 00              2615 	mov	r5,#0x00
   0C10                    2616 00101$:
   0C10 C3                 2617 	clr	c
   0C11 E4                 2618 	clr	a
   0C12 9C                 2619 	subb	a,r4
   0C13 74 80              2620 	mov	a,#(0x00 ^ 0x80)
   0C15 8D F0              2621 	mov	b,r5
   0C17 63 F0 80           2622 	xrl	b,#0x80
   0C1A 95 F0              2623 	subb	a,b
   0C1C 50 07              2624 	jnc	00103$
                           2625 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:72: n--;
   0C1E 1C                 2626 	dec	r4
   0C1F BC FF EE           2627 	cjne	r4,#0xff,00101$
   0C22 1D                 2628 	dec	r5
   0C23 80 EB              2629 	sjmp	00101$
   0C25                    2630 00103$:
                           2631 ;	C:\Users\dht98\DOWNLO~1\NKUST\NKUST_~2\HW18\SEEPRO~1.C:73: x--;
   0C25 1A                 2632 	dec	r2
   0C26 BA FF D5           2633 	cjne	r2,#0xff,00104$
   0C29 1B                 2634 	dec	r3
   0C2A 80 D2              2635 	sjmp	00104$
   0C2C                    2636 00107$:
   0C2C 22                 2637 	ret
                           2638 	.area CSEG    (CODE)
                           2639 	.area CONST   (CODE)
   0000                    2640 _ASCII:
   0000 30 31 32 33 34 35  2641 	.ascii "0123456789ABCDEF"
        36 37 38 39 41 42
        43 44 45 46
   0010 00                 2642 	.db 0x00
   0011                    2643 _uart_ASCII:
   0011 30 31 32 33 34 35  2644 	.ascii "0123456789ABCDEF"
        36 37 38 39 41 42
        43 44 45 46
   0021 00                 2645 	.db 0x00
   0022                    2646 __str_0:
   0022 0A                 2647 	.db 0x0A
   0023 5B 20 57 72 69 74  2648 	.ascii "[ Write:0 |  Read:1 ]"
        65 3A 30 20 7C 20
        20 52 65 61 64 3A
        31 20 5D
   0038 00                 2649 	.db 0x00
   0039                    2650 __str_1:
   0039 0D                 2651 	.db 0x0D
   003A 0A                 2652 	.db 0x0A
   003B 00                 2653 	.db 0x00
   003C                    2654 __str_2:
   003C 57 72 69 74 65 20  2655 	.ascii "Write       "
        20 20 20 20 20 20
   0048 00                 2656 	.db 0x00
   0049                    2657 __str_3:
   0049 41 64 64 72 65 73  2658 	.ascii "Address: "
        73 3A 20
   0052 00                 2659 	.db 0x00
   0053                    2660 __str_4:
   0053 44 61 74 61 3A 20  2661 	.ascii "Data: "
   0059 00                 2662 	.db 0x00
   005A                    2663 __str_5:
   005A 41 3A 20           2664 	.ascii "A: "
   005D 00                 2665 	.db 0x00
   005E                    2666 __str_6:
   005E 7C 44 3A 20        2667 	.ascii "|D: "
   0062 00                 2668 	.db 0x00
   0063                    2669 __str_7:
   0063 52 65 61 64 20     2670 	.ascii "Read "
   0068 00                 2671 	.db 0x00
                           2672 	.area XINIT   (CODE)
                           2673 	.area CABS    (ABS,CODE)
